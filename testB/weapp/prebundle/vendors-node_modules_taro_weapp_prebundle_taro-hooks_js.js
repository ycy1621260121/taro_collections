"use strict";
(wx["webpackJsonp"] = wx["webpackJsonp"] || []).push([["vendors-node_modules_taro_weapp_prebundle_taro-hooks_js"],{

/***/ "./node_modules/.taro/weapp/prebundle/taro-hooks.js":
/*!**********************************************************!*\
  !*** ./node_modules/.taro/weapp/prebundle/taro-hooks.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useAPICheck": function() { return /* binding */ useAPICheck_default; },
/* harmony export */   "useAccountInfo": function() { return /* binding */ useAccountInfo_default; },
/* harmony export */   "useActionSheet": function() { return /* binding */ useActionSheet_default; },
/* harmony export */   "useApp": function() { return /* binding */ useApp_default; },
/* harmony export */   "useArrayBufferToBase64": function() { return /* binding */ useArrayBufferToBase64_default; },
/* harmony export */   "useAudio": function() { return /* binding */ useAudio_default; },
/* harmony export */   "useAuthorize": function() { return /* binding */ useAuthorize_default; },
/* harmony export */   "useBLE": function() { return /* binding */ useBLE_default; },
/* harmony export */   "useBackground": function() { return /* binding */ useBackground_default; },
/* harmony export */   "useBase64ToArrayBuffer": function() { return /* binding */ useBase64ToArrayBuffer_default; },
/* harmony export */   "useBattery": function() { return /* binding */ useBattery_default; },
/* harmony export */   "useBluetooth": function() { return /* binding */ useBluetooth_default; },
/* harmony export */   "useBrightness": function() { return /* binding */ useBrightness_default; },
/* harmony export */   "useCamera": function() { return /* binding */ useCamera_default; },
/* harmony export */   "useChooseAddress": function() { return /* binding */ useChooseAddress_default; },
/* harmony export */   "useClipboardData": function() { return /* binding */ useClipboardData_default; },
/* harmony export */   "useDebounce": function() { return /* binding */ useDebounce_default; },
/* harmony export */   "useDebounceFn": function() { return /* binding */ useDebounceFn_default; },
/* harmony export */   "useEnv": function() { return /* binding */ useEnv_default; },
/* harmony export */   "useEvent": function() { return /* binding */ useEvent_default; },
/* harmony export */   "useFile": function() { return /* binding */ useFile_default; },
/* harmony export */   "useFrom": function() { return /* binding */ useFrom_default; },
/* harmony export */   "useImage": function() { return /* binding */ useImage_default; },
/* harmony export */   "useInvoice": function() { return /* binding */ useInvoice_default; },
/* harmony export */   "useLatest": function() { return /* binding */ useLatest_default; },
/* harmony export */   "useLaunchOptions": function() { return /* binding */ useLaunchOptions_default; },
/* harmony export */   "useLoading": function() { return /* binding */ useLoading_default; },
/* harmony export */   "useLocation": function() { return /* binding */ useLocation_default; },
/* harmony export */   "useLogin": function() { return /* binding */ useLogin_default; },
/* harmony export */   "useManualPullDownRefresh": function() { return /* binding */ useManualPullDownRefresh_default; },
/* harmony export */   "useMap": function() { return /* binding */ useMap_default; },
/* harmony export */   "useMenuButtonBoundingClientRect": function() { return /* binding */ useMenuButtonBoundingClientRect_default; },
/* harmony export */   "useModal": function() { return /* binding */ useModal_default; },
/* harmony export */   "useMotion": function() { return /* binding */ useMotion_default; },
/* harmony export */   "useNavigationBar": function() { return /* binding */ useNavigationBar_default; },
/* harmony export */   "useNetworkType": function() { return /* binding */ useNetworkType_default; },
/* harmony export */   "useOnline": function() { return /* binding */ useOnline_default; },
/* harmony export */   "usePage": function() { return /* binding */ usePage_default; },
/* harmony export */   "usePromise": function() { return /* binding */ usePromise_default; },
/* harmony export */   "useRecord": function() { return /* binding */ useRecord_default; },
/* harmony export */   "useRequest": function() { return /* binding */ useRequest_default; },
/* harmony export */   "useRequestSubscribeMessage": function() { return /* binding */ useRequestSubscribeMessage_default; },
/* harmony export */   "useRouter": function() { return /* binding */ useRouter_default; },
/* harmony export */   "useScanCode": function() { return /* binding */ useScanCode_default; },
/* harmony export */   "useSelectorQuery": function() { return /* binding */ useSelectorQuery_default; },
/* harmony export */   "useStorage": function() { return /* binding */ useStorage_default; },
/* harmony export */   "useSystemInfo": function() { return /* binding */ useSystemInfo_default; },
/* harmony export */   "useTabBar": function() { return /* binding */ useTabBar_default; },
/* harmony export */   "useThrottle": function() { return /* binding */ useThrottle_default; },
/* harmony export */   "useThrottleFn": function() { return /* binding */ useThrottleFn_default; },
/* harmony export */   "useToast": function() { return /* binding */ useToast_default; },
/* harmony export */   "useTopBarText": function() { return /* binding */ useTopBarText_default; },
/* harmony export */   "useUnmount": function() { return /* binding */ useUnmount_default; },
/* harmony export */   "useUpdateManager": function() { return /* binding */ useUpdateManager_default; },
/* harmony export */   "useUserInfo": function() { return /* binding */ useUserInfo_default; },
/* harmony export */   "useVibrate": function() { return /* binding */ useVibrate_default; },
/* harmony export */   "useVideo": function() { return /* binding */ useVideo_default; },
/* harmony export */   "useVisible": function() { return /* binding */ useVisible_default; },
/* harmony export */   "useWeRun": function() { return /* binding */ useWeRun_default; }
/* harmony export */ });
/* harmony import */ var _chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-2AFYNDNO.js */ "./node_modules/.taro/weapp/prebundle/chunk-2AFYNDNO.js");
/* harmony import */ var _chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-LNJCN3VW.js */ "./node_modules/.taro/weapp/prebundle/chunk-LNJCN3VW.js");
/* harmony import */ var _chunk_QXCD76IY_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-QXCD76IY.js */ "./node_modules/.taro/weapp/prebundle/chunk-QXCD76IY.js");
/* harmony import */ var _chunk_ME7YP2RG_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-ME7YP2RG.js */ "./node_modules/.taro/weapp/prebundle/chunk-ME7YP2RG.js");
/* harmony import */ var _chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-P7VEE7PG.js */ "./node_modules/.taro/weapp/prebundle/chunk-P7VEE7PG.js");
/* provided dependency */ var window = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-QXCD76IY.js */ "./node_modules/.taro/weapp/prebundle/chunk-QXCD76IY.js")["window$1"];
/* provided dependency */ var document = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-QXCD76IY.js */ "./node_modules/.taro/weapp/prebundle/chunk-QXCD76IY.js")["document$1"];
/* provided dependency */ var navigator = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-QXCD76IY.js */ "./node_modules/.taro/weapp/prebundle/chunk-QXCD76IY.js")["nav"];





// node_modules/querystring/decode.js
var require_decode = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__commonJS)({
    "node_modules/querystring/decode.js" (exports, module) {
        "use strict";
        function hasOwnProperty(obj, prop) {
            return Object.prototype.hasOwnProperty.call(obj, prop);
        }
        module.exports = function(qs, sep, eq, options) {
            sep = sep || "&";
            eq = eq || "=";
            var obj = {};
            if (typeof qs !== "string" || qs.length === 0) {
                return obj;
            }
            var regexp = /\+/g;
            qs = qs.split(sep);
            var maxKeys = 1e3;
            if (options && typeof options.maxKeys === "number") {
                maxKeys = options.maxKeys;
            }
            var len = qs.length;
            if (maxKeys > 0 && len > maxKeys) {
                len = maxKeys;
            }
            for(var i = 0; i < len; ++i){
                var x = qs[i].replace(regexp, "%20"), idx = x.indexOf(eq), kstr, vstr, k, v;
                if (idx >= 0) {
                    kstr = x.substr(0, idx);
                    vstr = x.substr(idx + 1);
                } else {
                    kstr = x;
                    vstr = "";
                }
                k = decodeURIComponent(kstr);
                v = decodeURIComponent(vstr);
                if (!hasOwnProperty(obj, k)) {
                    obj[k] = v;
                } else if (Array.isArray(obj[k])) {
                    obj[k].push(v);
                } else {
                    obj[k] = [
                        obj[k],
                        v
                    ];
                }
            }
            return obj;
        };
    }
});
// node_modules/querystring/encode.js
var require_encode = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__commonJS)({
    "node_modules/querystring/encode.js" (exports, module) {
        "use strict";
        var stringifyPrimitive = function(v) {
            switch(typeof v){
                case "string":
                    return v;
                case "boolean":
                    return v ? "true" : "false";
                case "number":
                    return isFinite(v) ? v : "";
                default:
                    return "";
            }
        };
        module.exports = function(obj, sep, eq, name) {
            sep = sep || "&";
            eq = eq || "=";
            if (obj === null) {
                obj = void 0;
            }
            if (typeof obj === "object") {
                return Object.keys(obj).map(function(k) {
                    var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
                    if (Array.isArray(obj[k])) {
                        return obj[k].map(function(v) {
                            return ks + encodeURIComponent(stringifyPrimitive(v));
                        }).join(sep);
                    } else {
                        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
                    }
                }).filter(Boolean).join(sep);
            }
            if (!name) return "";
            return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
        };
    }
});
// node_modules/querystring/index.js
var require_querystring = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__commonJS)({
    "node_modules/querystring/index.js" (exports) {
        "use strict";
        exports.decode = exports.parse = require_decode();
        exports.encode = exports.stringify = require_encode();
    }
});
// node_modules/lodash.uniq/index.js
var require_lodash = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__commonJS)({
    "node_modules/lodash.uniq/index.js" (exports, module) {
        var LARGE_ARRAY_SIZE = 200;
        var HASH_UNDEFINED = "__lodash_hash_undefined__";
        var INFINITY = 1 / 0;
        var funcTag = "[object Function]";
        var genTag = "[object GeneratorFunction]";
        var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
        var reIsHostCtor = /^\[object .+?Constructor\]$/;
        var freeGlobal2 = typeof __webpack_require__.g == "object" && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;
        var freeSelf2 = typeof self == "object" && self && self.Object === Object && self;
        var root2 = freeGlobal2 || freeSelf2 || Function("return this")();
        function arrayIncludes(array, value) {
            var length = array ? array.length : 0;
            return !!length && baseIndexOf(array, value, 0) > -1;
        }
        function arrayIncludesWith(array, value, comparator) {
            var index = -1, length = array ? array.length : 0;
            while(++index < length){
                if (comparator(value, array[index])) {
                    return true;
                }
            }
            return false;
        }
        function baseFindIndex(array, predicate, fromIndex, fromRight) {
            var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
            while(fromRight ? index-- : ++index < length){
                if (predicate(array[index], index, array)) {
                    return index;
                }
            }
            return -1;
        }
        function baseIndexOf(array, value, fromIndex) {
            if (value !== value) {
                return baseFindIndex(array, baseIsNaN, fromIndex);
            }
            var index = fromIndex - 1, length = array.length;
            while(++index < length){
                if (array[index] === value) {
                    return index;
                }
            }
            return -1;
        }
        function baseIsNaN(value) {
            return value !== value;
        }
        function cacheHas(cache2, key) {
            return cache2.has(key);
        }
        function getValue(object, key) {
            return object == null ? void 0 : object[key];
        }
        function isHostObject(value) {
            var result = false;
            if (value != null && typeof value.toString != "function") {
                try {
                    result = !!(value + "");
                } catch (e) {}
            }
            return result;
        }
        function setToArray(set) {
            var index = -1, result = Array(set.size);
            set.forEach(function(value) {
                result[++index] = value;
            });
            return result;
        }
        var arrayProto = Array.prototype;
        var funcProto = Function.prototype;
        var objectProto = Object.prototype;
        var coreJsData = root2["__core-js_shared__"];
        var maskSrcKey = function() {
            var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
            return uid ? "Symbol(src)_1." + uid : "";
        }();
        var funcToString = funcProto.toString;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var objectToString = objectProto.toString;
        var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
        var splice = arrayProto.splice;
        var Map2 = getNative(root2, "Map");
        var Set = getNative(root2, "Set");
        var nativeCreate = getNative(Object, "create");
        function Hash(entries) {
            var index = -1, length = entries ? entries.length : 0;
            this.clear();
            while(++index < length){
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }
        function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {};
        }
        function hashDelete(key) {
            return this.has(key) && delete this.__data__[key];
        }
        function hashGet(key) {
            var data = this.__data__;
            if (nativeCreate) {
                var result = data[key];
                return result === HASH_UNDEFINED ? void 0 : result;
            }
            return hasOwnProperty.call(data, key) ? data[key] : void 0;
        }
        function hashHas(key) {
            var data = this.__data__;
            return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
        }
        function hashSet(key, value) {
            var data = this.__data__;
            data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
            return this;
        }
        Hash.prototype.clear = hashClear;
        Hash.prototype["delete"] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;
        function ListCache(entries) {
            var index = -1, length = entries ? entries.length : 0;
            this.clear();
            while(++index < length){
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }
        function listCacheClear() {
            this.__data__ = [];
        }
        function listCacheDelete(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) {
                return false;
            }
            var lastIndex = data.length - 1;
            if (index == lastIndex) {
                data.pop();
            } else {
                splice.call(data, index, 1);
            }
            return true;
        }
        function listCacheGet(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            return index < 0 ? void 0 : data[index][1];
        }
        function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1;
        }
        function listCacheSet(key, value) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) {
                data.push([
                    key,
                    value
                ]);
            } else {
                data[index][1] = value;
            }
            return this;
        }
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype["delete"] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;
        function MapCache(entries) {
            var index = -1, length = entries ? entries.length : 0;
            this.clear();
            while(++index < length){
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }
        function mapCacheClear() {
            this.__data__ = {
                "hash": new Hash(),
                "map": new (Map2 || ListCache)(),
                "string": new Hash()
            };
        }
        function mapCacheDelete(key) {
            return getMapData(this, key)["delete"](key);
        }
        function mapCacheGet(key) {
            return getMapData(this, key).get(key);
        }
        function mapCacheHas(key) {
            return getMapData(this, key).has(key);
        }
        function mapCacheSet(key, value) {
            getMapData(this, key).set(key, value);
            return this;
        }
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype["delete"] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;
        function SetCache(values) {
            var index = -1, length = values ? values.length : 0;
            this.__data__ = new MapCache();
            while(++index < length){
                this.add(values[index]);
            }
        }
        function setCacheAdd(value) {
            this.__data__.set(value, HASH_UNDEFINED);
            return this;
        }
        function setCacheHas(value) {
            return this.__data__.has(value);
        }
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;
        function assocIndexOf(array, key) {
            var length = array.length;
            while(length--){
                if (eq(array[length][0], key)) {
                    return length;
                }
            }
            return -1;
        }
        function baseIsNative(value) {
            if (!isObject2(value) || isMasked(value)) {
                return false;
            }
            var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
            return pattern.test(toSource(value));
        }
        function baseUniq(array, iteratee, comparator) {
            var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
            if (comparator) {
                isCommon = false;
                includes = arrayIncludesWith;
            } else if (length >= LARGE_ARRAY_SIZE) {
                var set = iteratee ? null : createSet(array);
                if (set) {
                    return setToArray(set);
                }
                isCommon = false;
                includes = cacheHas;
                seen = new SetCache();
            } else {
                seen = iteratee ? [] : result;
            }
            outer: while(++index < length){
                var value = array[index], computed = iteratee ? iteratee(value) : value;
                value = comparator || value !== 0 ? value : 0;
                if (isCommon && computed === computed) {
                    var seenIndex = seen.length;
                    while(seenIndex--){
                        if (seen[seenIndex] === computed) {
                            continue outer;
                        }
                    }
                    if (iteratee) {
                        seen.push(computed);
                    }
                    result.push(value);
                } else if (!includes(seen, computed, comparator)) {
                    if (seen !== result) {
                        seen.push(computed);
                    }
                    result.push(value);
                }
            }
            return result;
        }
        var createSet = !(Set && 1 / setToArray(new Set([
            ,
            -0
        ]))[1] == INFINITY) ? noop3 : function(values) {
            return new Set(values);
        };
        function getMapData(map, key) {
            var data = map.__data__;
            return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
        }
        function getNative(object, key) {
            var value = getValue(object, key);
            return baseIsNative(value) ? value : void 0;
        }
        function isKeyable(value) {
            var type = typeof value;
            return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
        }
        function isMasked(func) {
            return !!maskSrcKey && maskSrcKey in func;
        }
        function toSource(func) {
            if (func != null) {
                try {
                    return funcToString.call(func);
                } catch (e) {}
                try {
                    return func + "";
                } catch (e1) {}
            }
            return "";
        }
        function uniq2(array) {
            return array && array.length ? baseUniq(array) : [];
        }
        function eq(value, other) {
            return value === other || value !== value && other !== other;
        }
        function isFunction(value) {
            var tag = isObject2(value) ? objectToString.call(value) : "";
            return tag == funcTag || tag == genTag;
        }
        function isObject2(value) {
            var type = typeof value;
            return !!value && (type == "object" || type == "function");
        }
        function noop3() {}
        module.exports = uniq2;
    }
});
// node_modules/compressorjs-global/dist/compressor.js
var require_compressor = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__commonJS)({
    "node_modules/compressorjs-global/dist/compressor.js" (exports, module) {
        (function(global2, factory) {
            typeof exports === "object" && typeof module !== "undefined" ? module.exports = factory() :  false ? 0 : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, global2.Compressor = factory());
        })(exports, function() {
            "use strict";
            function ownKeys(object, enumerableOnly) {
                var keys = Object.keys(object);
                if (Object.getOwnPropertySymbols) {
                    var symbols = Object.getOwnPropertySymbols(object);
                    enumerableOnly && (symbols = symbols.filter(function(sym) {
                        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                    })), keys.push.apply(keys, symbols);
                }
                return keys;
            }
            function _objectSpread22(target) {
                for(var i = 1; i < arguments.length; i++){
                    var source = null != arguments[i] ? arguments[i] : {};
                    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
                        _defineProperty2(target, key, source[key]);
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
                        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                    });
                }
                return target;
            }
            function _classCallCheck2(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                    throw new TypeError("Cannot call a class as a function");
                }
            }
            function _defineProperties(target, props) {
                for(var i = 0; i < props.length; i++){
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            function _createClass2(Constructor, protoProps, staticProps) {
                if (protoProps) _defineProperties(Constructor.prototype, protoProps);
                if (staticProps) _defineProperties(Constructor, staticProps);
                Object.defineProperty(Constructor, "prototype", {
                    writable: false
                });
                return Constructor;
            }
            function _defineProperty2(obj, key, value) {
                if (key in obj) {
                    Object.defineProperty(obj, key, {
                        value,
                        enumerable: true,
                        configurable: true,
                        writable: true
                    });
                } else {
                    obj[key] = value;
                }
                return obj;
            }
            function _extends() {
                _extends = Object.assign || function(target) {
                    for(var i = 1; i < arguments.length; i++){
                        var source = arguments[i];
                        for(var key in source){
                            if (Object.prototype.hasOwnProperty.call(source, key)) {
                                target[key] = source[key];
                            }
                        }
                    }
                    return target;
                };
                return _extends.apply(this, arguments);
            }
            var canvasToBlob = {
                exports: {}
            };
            (function(module2) {
                if (typeof window === "undefined") {
                    return;
                }
                (function(window2) {
                    var CanvasPrototype = window2.HTMLCanvasElement && window2.HTMLCanvasElement.prototype;
                    var hasCanvasPrototype = !!CanvasPrototype;
                    var hasBlobConstructor = window2.Blob && function() {
                        try {
                            return Boolean(new Blob());
                        } catch (e) {
                            return false;
                        }
                    }();
                    var hasArrayBufferViewSupport = hasBlobConstructor && window2.Uint8Array && function() {
                        try {
                            return new Blob([
                                new Uint8Array(100)
                            ]).size === 100;
                        } catch (e) {
                            return false;
                        }
                    }();
                    var BlobBuilder = window2.BlobBuilder || window2.WebKitBlobBuilder || window2.MozBlobBuilder || window2.MSBlobBuilder;
                    var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;
                    var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window2.atob && window2.ArrayBuffer && window2.Uint8Array && function(dataURI) {
                        var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb;
                        matches = dataURI.match(dataURIPattern);
                        if (!matches) {
                            throw new Error("invalid data URI");
                        }
                        mediaType = matches[2] ? matches[1] : "text/plain" + (matches[3] || ";charset=US-ASCII");
                        isBase64 = !!matches[4];
                        dataString = dataURI.slice(matches[0].length);
                        if (isBase64) {
                            byteString = atob(dataString);
                        } else {
                            byteString = decodeURIComponent(dataString);
                        }
                        arrayBuffer = new ArrayBuffer(byteString.length);
                        intArray = new Uint8Array(arrayBuffer);
                        for(i = 0; i < byteString.length; i += 1){
                            intArray[i] = byteString.charCodeAt(i);
                        }
                        if (hasBlobConstructor) {
                            return new Blob([
                                hasArrayBufferViewSupport ? intArray : arrayBuffer
                            ], {
                                type: mediaType
                            });
                        }
                        bb = new BlobBuilder();
                        bb.append(arrayBuffer);
                        return bb.getBlob(mediaType);
                    };
                    if (hasCanvasPrototype) {
                        if (window2.HTMLCanvasElement && !CanvasPrototype.toBlob) {
                            if (CanvasPrototype.mozGetAsFile) {
                                CanvasPrototype.toBlob = function(callback, type, quality) {
                                    var self2 = this;
                                    setTimeout(function() {
                                        if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {
                                            callback(dataURLtoBlob(self2.toDataURL(type, quality)));
                                        } else {
                                            callback(self2.mozGetAsFile("blob", type));
                                        }
                                    });
                                };
                            } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {
                                if (CanvasPrototype.msToBlob) {
                                    CanvasPrototype.toBlob = function(callback, type, quality) {
                                        var self2 = this;
                                        setTimeout(function() {
                                            if ((type && type !== "image/png" || quality) && CanvasPrototype.toDataURL && dataURLtoBlob) {
                                                callback(dataURLtoBlob(self2.toDataURL(type, quality)));
                                            } else {
                                                callback(self2.msToBlob(type));
                                            }
                                        });
                                    };
                                } else {
                                    CanvasPrototype.toBlob = function(callback, type, quality) {
                                        var self2 = this;
                                        setTimeout(function() {
                                            callback(dataURLtoBlob(self2.toDataURL(type, quality)));
                                        });
                                    };
                                }
                            }
                        }
                    }
                    if (module2.exports) {
                        module2.exports = dataURLtoBlob;
                    } else {
                        window2.dataURLtoBlob = dataURLtoBlob;
                    }
                })(globalThis || window);
            })(canvasToBlob);
            var toBlob = canvasToBlob.exports;
            var isBlob = function isBlob2(value) {
                if (typeof Blob === "undefined") {
                    return false;
                }
                return value instanceof Blob || Object.prototype.toString.call(value) === "[object Blob]";
            };
            var DEFAULTS = {
                strict: true,
                checkOrientation: true,
                maxWidth: Infinity,
                maxHeight: Infinity,
                minWidth: 0,
                minHeight: 0,
                width: void 0,
                height: void 0,
                resize: "none",
                quality: 0.8,
                mimeType: "auto",
                convertTypes: [
                    "image/png"
                ],
                convertSize: 5e6,
                beforeDraw: null,
                drew: null,
                success: null,
                error: null
            };
            var IS_BROWSER = typeof window !== "undefined" && typeof window.document !== "undefined";
            var WINDOW = IS_BROWSER ? window : {};
            var isPositiveNumber = function isPositiveNumber2(value) {
                return value > 0 && value < Infinity;
            };
            var slice = Array.prototype.slice;
            function toArray(value) {
                return Array.from ? Array.from(value) : slice.call(value);
            }
            var REGEXP_IMAGE_TYPE = /^image\/.+$/;
            function isImageType(value) {
                return REGEXP_IMAGE_TYPE.test(value);
            }
            function imageTypeToExtension(value) {
                var extension = isImageType(value) ? value.substr(6) : "";
                if (extension === "jpeg") {
                    extension = "jpg";
                }
                return ".".concat(extension);
            }
            var fromCharCode = String.fromCharCode;
            function getStringFromCharCode(dataView, start, length) {
                var str = "";
                var i;
                length += start;
                for(i = start; i < length; i += 1){
                    str += fromCharCode(dataView.getUint8(i));
                }
                return str;
            }
            var btoa = WINDOW.btoa;
            function arrayBufferToDataURL(arrayBuffer, mimeType) {
                var chunks = [];
                var chunkSize = 8192;
                var uint8 = new Uint8Array(arrayBuffer);
                while(uint8.length > 0){
                    chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));
                    uint8 = uint8.subarray(chunkSize);
                }
                return "data:".concat(mimeType, ";base64,").concat(btoa(chunks.join("")));
            }
            function resetAndGetOrientation(arrayBuffer) {
                var dataView = new DataView(arrayBuffer);
                var orientation;
                try {
                    var littleEndian;
                    var app1Start;
                    var ifdStart;
                    if (dataView.getUint8(0) === 255 && dataView.getUint8(1) === 216) {
                        var length = dataView.byteLength;
                        var offset = 2;
                        while(offset + 1 < length){
                            if (dataView.getUint8(offset) === 255 && dataView.getUint8(offset + 1) === 225) {
                                app1Start = offset;
                                break;
                            }
                            offset += 1;
                        }
                    }
                    if (app1Start) {
                        var exifIDCode = app1Start + 4;
                        var tiffOffset = app1Start + 10;
                        if (getStringFromCharCode(dataView, exifIDCode, 4) === "Exif") {
                            var endianness = dataView.getUint16(tiffOffset);
                            littleEndian = endianness === 18761;
                            if (littleEndian || endianness === 19789) {
                                if (dataView.getUint16(tiffOffset + 2, littleEndian) === 42) {
                                    var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);
                                    if (firstIFDOffset >= 8) {
                                        ifdStart = tiffOffset + firstIFDOffset;
                                    }
                                }
                            }
                        }
                    }
                    if (ifdStart) {
                        var _length = dataView.getUint16(ifdStart, littleEndian);
                        var _offset;
                        var i;
                        for(i = 0; i < _length; i += 1){
                            _offset = ifdStart + i * 12 + 2;
                            if (dataView.getUint16(_offset, littleEndian) === 274) {
                                _offset += 8;
                                orientation = dataView.getUint16(_offset, littleEndian);
                                dataView.setUint16(_offset, 1, littleEndian);
                                break;
                            }
                        }
                    }
                } catch (e) {
                    orientation = 1;
                }
                return orientation;
            }
            function parseOrientation(orientation) {
                var rotate = 0;
                var scaleX = 1;
                var scaleY = 1;
                switch(orientation){
                    case 2:
                        scaleX = -1;
                        break;
                    case 3:
                        rotate = -180;
                        break;
                    case 4:
                        scaleY = -1;
                        break;
                    case 5:
                        rotate = 90;
                        scaleY = -1;
                        break;
                    case 6:
                        rotate = 90;
                        break;
                    case 7:
                        rotate = 90;
                        scaleX = -1;
                        break;
                    case 8:
                        rotate = -90;
                        break;
                }
                return {
                    rotate,
                    scaleX,
                    scaleY
                };
            }
            var REGEXP_DECIMALS = /\.\d*(?:0|9){12}\d*$/;
            function normalizeDecimalNumber(value) {
                var times = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1e11;
                return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;
            }
            function getAdjustedSizes(_ref) {
                var aspectRatio = _ref.aspectRatio, height = _ref.height, width = _ref.width;
                var type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "none";
                var isValidWidth = isPositiveNumber(width);
                var isValidHeight = isPositiveNumber(height);
                if (isValidWidth && isValidHeight) {
                    var adjustedWidth = height * aspectRatio;
                    if ((type === "contain" || type === "none") && adjustedWidth > width || type === "cover" && adjustedWidth < width) {
                        height = width / aspectRatio;
                    } else {
                        width = height * aspectRatio;
                    }
                } else if (isValidWidth) {
                    height = width / aspectRatio;
                } else if (isValidHeight) {
                    width = height * aspectRatio;
                }
                return {
                    width,
                    height
                };
            }
            var ArrayBuffer$1 = WINDOW.ArrayBuffer, FileReader = WINDOW.FileReader;
            var URL = WINDOW.URL || WINDOW.webkitURL;
            var REGEXP_EXTENSION = /\.\w+$/;
            var AnotherCompressor = WINDOW.Compressor;
            var Compressor2 = function() {
                function Compressor3(file, options) {
                    _classCallCheck2(this, Compressor3);
                    this.file = file;
                    this.image = new Image();
                    this.options = _objectSpread22(_objectSpread22({}, DEFAULTS), options);
                    this.aborted = false;
                    this.result = null;
                    this.init();
                }
                _createClass2(Compressor3, [
                    {
                        key: "init",
                        value: function init() {
                            var _this = this;
                            var file = this.file, options = this.options;
                            if (!isBlob(file)) {
                                this.fail(new Error("The first argument must be a File or Blob object."));
                                return;
                            }
                            var mimeType = file.type;
                            if (!isImageType(mimeType)) {
                                this.fail(new Error("The first argument must be an image File or Blob object."));
                                return;
                            }
                            if (!URL || !FileReader) {
                                this.fail(new Error("The current browser does not support image compression."));
                                return;
                            }
                            if (!ArrayBuffer$1) {
                                options.checkOrientation = false;
                            }
                            if (URL && !options.checkOrientation) {
                                this.load({
                                    url: URL.createObjectURL(file)
                                });
                            } else {
                                var reader = new FileReader();
                                var checkOrientation = options.checkOrientation && mimeType === "image/jpeg";
                                this.reader = reader;
                                reader.onload = function(_ref) {
                                    var target = _ref.target;
                                    var result = target.result;
                                    var data = {};
                                    if (checkOrientation) {
                                        var orientation = resetAndGetOrientation(result);
                                        if (orientation > 1 || !URL) {
                                            data.url = arrayBufferToDataURL(result, mimeType);
                                            if (orientation > 1) {
                                                _extends(data, parseOrientation(orientation));
                                            }
                                        } else {
                                            data.url = URL.createObjectURL(file);
                                        }
                                    } else {
                                        data.url = result;
                                    }
                                    _this.load(data);
                                };
                                reader.onabort = function() {
                                    _this.fail(new Error("Aborted to read the image with FileReader."));
                                };
                                reader.onerror = function() {
                                    _this.fail(new Error("Failed to read the image with FileReader."));
                                };
                                reader.onloadend = function() {
                                    _this.reader = null;
                                };
                                if (checkOrientation) {
                                    reader.readAsArrayBuffer(file);
                                } else {
                                    reader.readAsDataURL(file);
                                }
                            }
                        }
                    },
                    {
                        key: "load",
                        value: function load(data) {
                            var _this2 = this;
                            var file = this.file, image = this.image;
                            image.onload = function() {
                                _this2.draw(_objectSpread22(_objectSpread22({}, data), {}, {
                                    naturalWidth: image.naturalWidth,
                                    naturalHeight: image.naturalHeight
                                }));
                            };
                            image.onabort = function() {
                                _this2.fail(new Error("Aborted to load the image."));
                            };
                            image.onerror = function() {
                                _this2.fail(new Error("Failed to load the image."));
                            };
                            if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {
                                image.crossOrigin = "anonymous";
                            }
                            image.alt = file.name;
                            image.src = data.url;
                        }
                    },
                    {
                        key: "draw",
                        value: function draw(_ref2) {
                            var _this3 = this;
                            var naturalWidth = _ref2.naturalWidth, naturalHeight = _ref2.naturalHeight, _ref2$rotate = _ref2.rotate, rotate = _ref2$rotate === void 0 ? 0 : _ref2$rotate, _ref2$scaleX = _ref2.scaleX, scaleX = _ref2$scaleX === void 0 ? 1 : _ref2$scaleX, _ref2$scaleY = _ref2.scaleY, scaleY = _ref2$scaleY === void 0 ? 1 : _ref2$scaleY;
                            var file = this.file, image = this.image, options = this.options;
                            var canvas = document.createElement("canvas");
                            var context = canvas.getContext("2d");
                            var is90DegreesRotated = Math.abs(rotate) % 180 === 90;
                            var resizable = (options.resize === "contain" || options.resize === "cover") && isPositiveNumber(options.width) && isPositiveNumber(options.height);
                            var maxWidth = Math.max(options.maxWidth, 0) || Infinity;
                            var maxHeight = Math.max(options.maxHeight, 0) || Infinity;
                            var minWidth = Math.max(options.minWidth, 0) || 0;
                            var minHeight = Math.max(options.minHeight, 0) || 0;
                            var aspectRatio = naturalWidth / naturalHeight;
                            var width = options.width, height = options.height;
                            if (is90DegreesRotated) {
                                var _ref3 = [
                                    maxHeight,
                                    maxWidth
                                ];
                                maxWidth = _ref3[0];
                                maxHeight = _ref3[1];
                                var _ref4 = [
                                    minHeight,
                                    minWidth
                                ];
                                minWidth = _ref4[0];
                                minHeight = _ref4[1];
                                var _ref5 = [
                                    height,
                                    width
                                ];
                                width = _ref5[0];
                                height = _ref5[1];
                            }
                            if (resizable) {
                                aspectRatio = width / height;
                            }
                            var _getAdjustedSizes = getAdjustedSizes({
                                aspectRatio,
                                width: maxWidth,
                                height: maxHeight
                            }, "contain");
                            maxWidth = _getAdjustedSizes.width;
                            maxHeight = _getAdjustedSizes.height;
                            var _getAdjustedSizes2 = getAdjustedSizes({
                                aspectRatio,
                                width: minWidth,
                                height: minHeight
                            }, "cover");
                            minWidth = _getAdjustedSizes2.width;
                            minHeight = _getAdjustedSizes2.height;
                            if (resizable) {
                                var _getAdjustedSizes3 = getAdjustedSizes({
                                    aspectRatio,
                                    width,
                                    height
                                }, options.resize);
                                width = _getAdjustedSizes3.width;
                                height = _getAdjustedSizes3.height;
                            } else {
                                var _getAdjustedSizes4 = getAdjustedSizes({
                                    aspectRatio,
                                    width,
                                    height
                                });
                                var _getAdjustedSizes4$wi = _getAdjustedSizes4.width;
                                width = _getAdjustedSizes4$wi === void 0 ? naturalWidth : _getAdjustedSizes4$wi;
                                var _getAdjustedSizes4$he = _getAdjustedSizes4.height;
                                height = _getAdjustedSizes4$he === void 0 ? naturalHeight : _getAdjustedSizes4$he;
                            }
                            width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));
                            height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));
                            var destX = -width / 2;
                            var destY = -height / 2;
                            var destWidth = width;
                            var destHeight = height;
                            var params = [];
                            if (resizable) {
                                var srcX = 0;
                                var srcY = 0;
                                var srcWidth = naturalWidth;
                                var srcHeight = naturalHeight;
                                var _getAdjustedSizes5 = getAdjustedSizes({
                                    aspectRatio,
                                    width: naturalWidth,
                                    height: naturalHeight
                                }, {
                                    contain: "cover",
                                    cover: "contain"
                                }[options.resize]);
                                srcWidth = _getAdjustedSizes5.width;
                                srcHeight = _getAdjustedSizes5.height;
                                srcX = (naturalWidth - srcWidth) / 2;
                                srcY = (naturalHeight - srcHeight) / 2;
                                params.push(srcX, srcY, srcWidth, srcHeight);
                            }
                            params.push(destX, destY, destWidth, destHeight);
                            if (is90DegreesRotated) {
                                var _ref6 = [
                                    height,
                                    width
                                ];
                                width = _ref6[0];
                                height = _ref6[1];
                            }
                            canvas.width = width;
                            canvas.height = height;
                            if (!isImageType(options.mimeType)) {
                                options.mimeType = file.type;
                            }
                            var fillStyle = "transparent";
                            if (file.size > options.convertSize && options.convertTypes.indexOf(options.mimeType) >= 0) {
                                options.mimeType = "image/jpeg";
                            }
                            if (options.mimeType === "image/jpeg") {
                                fillStyle = "#fff";
                            }
                            context.fillStyle = fillStyle;
                            context.fillRect(0, 0, width, height);
                            if (options.beforeDraw) {
                                options.beforeDraw.call(this, context, canvas);
                            }
                            if (this.aborted) {
                                return;
                            }
                            context.save();
                            context.translate(width / 2, height / 2);
                            context.rotate(rotate * Math.PI / 180);
                            context.scale(scaleX, scaleY);
                            context.drawImage.apply(context, [
                                image
                            ].concat(params));
                            context.restore();
                            if (options.drew) {
                                options.drew.call(this, context, canvas);
                            }
                            if (this.aborted) {
                                return;
                            }
                            var done = function done2(result) {
                                if (!_this3.aborted) {
                                    _this3.done({
                                        naturalWidth,
                                        naturalHeight,
                                        result
                                    });
                                }
                            };
                            if (canvas.toBlob) {
                                canvas.toBlob(done, options.mimeType, options.quality);
                            } else {
                                done(toBlob(canvas.toDataURL(options.mimeType, options.quality)));
                            }
                        }
                    },
                    {
                        key: "done",
                        value: function done(_ref7) {
                            var naturalWidth = _ref7.naturalWidth, naturalHeight = _ref7.naturalHeight, result = _ref7.result;
                            var file = this.file, image = this.image, options = this.options;
                            if (URL && !options.checkOrientation) {
                                URL.revokeObjectURL(image.src);
                            }
                            if (result) {
                                if (options.strict && result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight || options.maxWidth < naturalWidth || options.maxHeight < naturalHeight)) {
                                    result = file;
                                } else {
                                    var date = new Date();
                                    result.lastModified = date.getTime();
                                    result.lastModifiedDate = date;
                                    result.name = file.name;
                                    if (result.name && result.type !== file.type) {
                                        result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));
                                    }
                                }
                            } else {
                                result = file;
                            }
                            this.result = result;
                            if (options.success) {
                                options.success.call(this, result);
                            }
                        }
                    },
                    {
                        key: "fail",
                        value: function fail(err) {
                            var options = this.options;
                            if (options.error) {
                                options.error.call(this, err);
                            } else {
                                throw err;
                            }
                        }
                    },
                    {
                        key: "abort",
                        value: function abort() {
                            if (!this.aborted) {
                                this.aborted = true;
                                if (this.reader) {
                                    this.reader.abort();
                                } else if (!this.image.complete) {
                                    this.image.onload = null;
                                    this.image.onabort();
                                } else {
                                    this.fail(new Error("The compression process has been aborted."));
                                }
                            }
                        }
                    }
                ], [
                    {
                        key: "noConflict",
                        value: function noConflict() {
                            window.Compressor = AnotherCompressor;
                            return Compressor3;
                        }
                    },
                    {
                        key: "setDefaults",
                        value: function setDefaults(options) {
                            _extends(DEFAULTS, options);
                        }
                    }
                ]);
                return Compressor3;
            }();
            return Compressor2;
        });
    }
});
// node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
// node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
// node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++){
        arr2[i] = arr[i];
    }
    return arr2;
}
// node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
// node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// node_modules/@babel/runtime/helpers/esm/slicedToArray.js
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
// node_modules/taro-hooks/es/useEnv/index.js
var import_taro = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useEnv() {
    var _useState = (0, import_react.useState)(""), _useState2 = _slicedToArray(_useState, 2), env = _useState2[0], setEnv = _useState2[1];
    (0, import_react.useEffect)(function() {
        setEnv((0, import_taro.getEnv)());
    }, []);
    return env;
}
var useEnv_default = useEnv;
// node_modules/taro-hooks/es/useApp/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_react2 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var import_taro2 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
// node_modules/taro-hooks/es/utils/tool.js
var typeOf = function typeOf2(target, type) {
    return [
        type
    ].flat().some(function(v) {
        return Object.prototype.toString.call(target) === "[object ".concat(v, "]");
    });
};
var isPlainObject = function isPlainObject2(object) {
    return !(object && Object.entries(object).length);
};
var isUndefined = function isUndefined2(target) {
    return typeof target === "undefined";
};
// node_modules/taro-hooks/es/useApp/index.js
function useApp(allDefault) {
    var _useState = (0, import_react2.useState)({}), _useState2 = _slicedToArray(_useState, 2), globalData = _useState2[0], setGlobalData = _useState2[1];
    var appInstance = (0, import_react2.useRef)((0, import_taro2.getApp)({
        allowDefault: Boolean(allDefault)
    }));
    (0, import_react2.useEffect)(function() {
        var _appInstance$current;
        if ((_appInstance$current = appInstance.current) === null || _appInstance$current === void 0 ? void 0 : _appInstance$current.$app) {
            setGlobalData(appInstance.current.$app.globalData || {});
        }
    }, [
        appInstance
    ]);
    var setGlobalDataAsync = (0, import_react2.useCallback)(function(key, value) {
        return new Promise(function(resolve, reject) {
            if (isUndefined(key)) {
                reject({
                    errMsg: "setGlobalData: fail"
                });
            } else {
                try {
                    var prevGlobalData = (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, globalData);
                    prevGlobalData[key] = value;
                    appInstance.current.$app.globalData = prevGlobalData;
                    setGlobalData(prevGlobalData);
                    resolve({
                        errMsg: "setGlobalData: ok"
                    });
                } catch (e) {
                    reject({
                        errMsg: "setGlobalData: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        globalData,
        appInstance
    ]);
    return [
        appInstance.current,
        globalData,
        setGlobalDataAsync
    ];
}
var useApp_default = useApp;
// node_modules/taro-hooks/es/usePage/index.js
var import_react3 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var import_taro3 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
function usePage() {
    var pageStack = (0, import_react3.useRef)((0, import_taro3.getCurrentPages)());
    var pageInstance = (0, import_react3.useRef)((0, import_taro3.getCurrentInstance)());
    var useScope = (0, import_react3.useCallback)(function(selector) {
        var _pageInstance$current;
        return selector ? (_pageInstance$current = pageInstance.current.page) === null || _pageInstance$current === void 0 ? void 0 : _pageInstance$current.selectComponent(selector) : pageInstance.current.page;
    }, [
        pageInstance
    ]);
    return [
        pageStack.current.length,
        {
            pageInstance: pageInstance.current,
            pageStack: pageStack.current,
            useScope
        }
    ];
}
var usePage_default = usePage;
// node_modules/taro-hooks/es/useRouter/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_typeof)();
var import_taro4 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react5 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var import_querystring = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)(require_querystring());
// node_modules/taro-hooks/es/useFrom/index.js
var import_react4 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useFrom() {
    var _usePage = usePage_default(), _usePage2 = _slicedToArray(_usePage, 2), stackLength = _usePage2[0], _usePage2$ = _usePage2[1], pageInstance = _usePage2$.pageInstance, pageStack = _usePage2$.pageStack;
    var _useState = (0, import_react4.useState)({}), _useState2 = _slicedToArray(_useState, 2), from = _useState2[0], setFrom = _useState2[1];
    (0, import_react4.useEffect)(function() {
        var route = {};
        if (stackLength > 1) {
            route = pageStack[stackLength - 2];
        }
        setFrom(route);
    }, [
        stackLength,
        pageStack
    ]);
    return from;
}
var useFrom_default = useFrom;
// node_modules/taro-hooks/es/useRouter/index.js
function stringfiyUrl(url, options) {
    var stringfiyUrl2 = url;
    if (options && (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._typeof)(options) === "object") {
        var hasQuery = stringfiyUrl2.includes("?");
        stringfiyUrl2 += (hasQuery ? "&" : "?") + (0, import_querystring.stringify)(options);
    }
    return stringfiyUrl2;
}
function useRouter() {
    var _useState = (0, import_react5.useState)((0, import_taro4.useRouter)()), _useState2 = _slicedToArray(_useState, 2), router = _useState2[0], setRouter = _useState2[1];
    var from = useFrom_default();
    (0, import_react5.useEffect)(function() {
        setRouter((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, router), {}, {
            from
        }));
    }, [
        from
    ]);
    var switchTabSync = (0, import_react5.useCallback)(function(url, options) {
        return new Promise(function(resolve, reject) {
            try {
                url = stringfiyUrl(url, options);
                (0, import_taro4.switchTab)({
                    url,
                    success: resolve,
                    fail: reject
                }).catch(reject);
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    var relaunchSync = (0, import_react5.useCallback)(function(url, options) {
        return new Promise(function(resolve, reject) {
            try {
                url = stringfiyUrl(url, options);
                (0, import_taro4.reLaunch)({
                    url,
                    success: resolve,
                    fail: reject
                }).catch(reject);
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    var redirectToSync = (0, import_react5.useCallback)(function(url, options) {
        return new Promise(function(resolve, reject) {
            try {
                url = stringfiyUrl(url, options);
                (0, import_taro4.redirectTo)({
                    url,
                    success: resolve,
                    fail: reject
                }).catch(reject);
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    var navigateToSync = (0, import_react5.useCallback)(function(urlOrMark, options) {
        return new Promise(function(resolve, reject) {
            try {
                var _ref = options || {}, appId = _ref.appId;
                if (appId && urlOrMark) {
                    (0, import_taro4.navigateToMiniProgram)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, options), {}, {
                        appId,
                        success: resolve,
                        fail: reject
                    })).catch(reject);
                } else if (typeOf(urlOrMark, "String")) {
                    urlOrMark = stringfiyUrl(urlOrMark, options);
                    (0, import_taro4.navigateTo)({
                        url: urlOrMark,
                        success: resolve,
                        fail: reject
                    }).catch(reject);
                }
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    var navigateBackSync = (0, import_react5.useCallback)(function(deltaOrMark, extraData) {
        return new Promise(function(resolve, reject) {
            try {
                if (typeOf(deltaOrMark, "Boolean") && deltaOrMark) {
                    (0, import_taro4.navigateBackMiniProgram)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, extraData ? {
                        extraData
                    } : {}), {}, {
                        success: resolve,
                        fail: reject
                    })).catch(reject);
                } else {
                    (0, import_taro4.navigateBack)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, deltaOrMark ? {
                        deltaOrMark
                    } : {}), {}, {
                        success: resolve,
                        fail: reject
                    })).catch(reject);
                }
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    return [
        router,
        {
            switchTab: switchTabSync,
            relaunch: relaunchSync,
            redirectTo: redirectToSync,
            navigateTo: navigateToSync,
            navigateBack: navigateBackSync
        }
    ];
}
var useRouter_default = useRouter;
// node_modules/taro-hooks/es/usePromise/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro5 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
function usePromise(options, Instance) {
    return new Promise(function(resolve, reject) {
        try {
            if (typeof Instance === "string" && import_taro5.default[Instance]) {
                var methodInstance = import_taro5.default[Instance];
                methodInstance((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, options || {}), {}, {
                    success: resolve,
                    fail: reject,
                    complete: console.log
                })).catch(reject);
            }
            console.warn("please input a valid method name");
        } catch (e) {
            reject(e);
        }
    });
}
var usePromise_default = usePromise;
// node_modules/taro-hooks/es/useBase64ToArrayBuffer/index.js
var import_taro6 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react6 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var DEFAULT = new Uint8Array([]);
function useBase64ToArrayBuffer() {
    var base64 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
    var _useState = (0, import_react6.useState)(DEFAULT), _useState2 = _slicedToArray(_useState, 2), buffer = _useState2[0], setBuffer = _useState2[1];
    var setBase64 = (0, import_react6.useCallback)(function(base642) {
        if (!typeOf(base642, "String")) {
            console.warn("please enter a string to arrayBuffer, default return null");
        } else {
            setBuffer((0, import_taro6.base64ToArrayBuffer)(base642));
        }
    }, []);
    (0, import_react6.useEffect)(function() {
        setBase64(base64);
    }, []);
    return [
        buffer,
        setBase64
    ];
}
var useBase64ToArrayBuffer_default = useBase64ToArrayBuffer;
// node_modules/taro-hooks/es/useArrayBufferToBase64/index.js
var import_taro7 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react7 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var arrayBufferType;
(function(arrayBufferType2) {
    arrayBufferType2["ARRAYBUFFER"] = "ArrayBuffer";
    arrayBufferType2["UNIT8ARRAY"] = "Uint8Array";
    arrayBufferType2["UNIT16ARRAY"] = "Uint16Array";
    arrayBufferType2["UNIT32ARRAY"] = "Uint32Array";
    arrayBufferType2["FLOAT64ARRAY"] = "Float64Array";
})(arrayBufferType || (arrayBufferType = {}));
function useArrayBufferToBase64(arrayBuffer) {
    var _useState = (0, import_react7.useState)(""), _useState2 = _slicedToArray(_useState, 2), base64 = _useState2[0], setBase64 = _useState2[1];
    var setArrayBuffer = (0, import_react7.useCallback)(function(arrayBuffer2) {
        if (!typeOf(arrayBuffer2, Object.values(arrayBufferType))) {
            console.warn('please enter a arrayBuffer to string, default return ""');
        } else {
            setBase64((0, import_taro7.arrayBufferToBase64)(arrayBuffer2));
        }
    }, []);
    (0, import_react7.useEffect)(function() {
        setArrayBuffer(arrayBuffer);
    }, [
        arrayBuffer
    ]);
    return [
        base64,
        setArrayBuffer
    ];
}
var useArrayBufferToBase64_default = useArrayBufferToBase64;
// node_modules/taro-hooks/es/useClipboardData/index.js
var import_taro8 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react8 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useClipboardData() {
    var _useState = (0, import_react8.useState)(""), _useState2 = _slicedToArray(_useState, 2), clipboardData = _useState2[0], changeClipborardData = _useState2[1];
    var setClipboard = (0, import_react8.useCallback)(function(text) {
        if (!text) {
            console.warn("please enter a text");
            return Promise.reject(text);
        }
        return new Promise(function(resolve, reject) {
            try {
                var data = JSON.stringify({
                    clip: text
                });
                (0, import_taro8.setClipboardData)({
                    data,
                    success: function success(res) {
                        changeClipborardData(text);
                        resolve(res);
                    },
                    fail: reject
                }).catch(reject);
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    var getClipboard = (0, import_react8.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro8.getClipboardData)({
                    success: function success(res) {
                        var _JSON$parse = JSON.parse(res.data), _JSON$parse$clip = _JSON$parse.clip, clip = _JSON$parse$clip === void 0 ? "" : _JSON$parse$clip;
                        changeClipborardData(clip);
                        resolve(clip);
                    },
                    fail: reject
                }).catch(reject);
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    return [
        clipboardData,
        {
            set: setClipboard,
            get: getClipboard
        }
    ];
}
var useClipboardData_default = useClipboardData;
// node_modules/taro-hooks/es/useSystemInfo/index.js
var import_taro9 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react9 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useSystemInfo() {
    var _useState = (0, import_react9.useState)(), _useState2 = _slicedToArray(_useState, 2), systemInfo = _useState2[0], setSystemInfo = _useState2[1];
    (0, import_react9.useEffect)(function() {
        getSystemInfoSync();
    }, []);
    var getSystemInfoSync = (0, import_react9.useCallback)(function() {
        try {
            (0, import_taro9.getSystemInfo)({
                success: setSystemInfo,
                fail: function fail() {
                    return console.error({
                        errMsg: "getSystemInfo: fail"
                    });
                }
            });
        } catch (e) {
            console.error({
                errMsg: "getSystemInfo: fail",
                data: e
            });
        }
    }, []);
    return systemInfo;
}
var useSystemInfo_default = useSystemInfo;
// node_modules/taro-hooks/es/useEvent/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_defineProperty)();
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
// node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
// node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
// node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// node_modules/@babel/runtime/helpers/esm/toConsumableArray.js
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
// node_modules/taro-hooks/es/useEvent/index.js
var import_react11 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
// node_modules/taro-hooks/es/context.js
var import_react10 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var import_taro10 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
function wrapperEvent(namespace, eventName) {
    return namespace ? "".concat(namespace, ".").concat(eventName) : eventName;
}
import_taro10.eventCenter.display = function() {
    return Object.keys(import_taro10.eventCenter.callbacks);
};
var EventBus = (0, import_react10.createContext)({
    eventBus: import_taro10.eventCenter
});
// node_modules/taro-hooks/es/useEvent/index.js
var import_lodash = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)(require_lodash());
var IActionType;
(function(IActionType2) {
    IActionType2["ON"] = "on";
    IActionType2["OFF"] = "off";
    IActionType2["TRIGGER"] = "trigger";
    IActionType2["ONCE"] = "once";
    IActionType2["ADD"] = "add";
    IActionType2["CLEAR"] = "clear";
})(IActionType || (IActionType = {}));
var safeNamespace = [
    "__taro",
    "at"
];
var initState = {
    eventQueue: {},
    eventNameQueue: []
};
function useEvent(namespace) {
    var _useContext = (0, import_react11.useContext)(EventBus), eventBus = _useContext.eventBus;
    var setListener = (0, import_react11.useCallback)(function(eventName) {
        for(var _len = arguments.length, handlers = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            handlers[_key - 1] = arguments[_key];
        }
        if (!eventName || safeNamespace.some(function(v) {
            return eventName.startsWith(v);
        })) {
            console.warn("eventName not valid. listen failed");
        } else if (!handlers.length) {
            console.warn("you mast provide one handler to listen. add failed");
        } else {
            dispatch({
                type: IActionType.ADD,
                payload: {
                    eventName: wrapperEvent(namespace, eventName),
                    handlers
                }
            });
        }
    }, []);
    var setListenerOnce = (0, import_react11.useCallback)(function(eventName, handler) {
        if (!eventName || !handler) {
            console.warn("you must provide eventName and handler");
            return;
        }
        var sideEffectHandler = function sideEffectHandler2() {
            handler.apply(void 0, arguments);
            removeListener(eventName, sideEffectHandler2);
        };
        setListener(eventName, sideEffectHandler);
    }, []);
    var emitEvent = (0, import_react11.useCallback)(function(eventName) {
        for(var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){
            params[_key2 - 1] = arguments[_key2];
        }
        if (!eventName || !params.length) {
            console.warn("eventName or args not provide");
            return;
        }
        var realEventName = wrapperEvent(namespace, eventName);
        dispatch({
            type: IActionType.TRIGGER,
            payload: {
                eventName: realEventName,
                params
            }
        });
    }, []);
    var clearListener = (0, import_react11.useCallback)(function(eventName) {
        removeListener(eventName);
    }, []);
    var safeRemoveEvents = (0, import_react11.useCallback)(function(eventNameQueue, eventQueue) {
        for(var _len3 = arguments.length, handlers = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++){
            handlers[_key3 - 2] = arguments[_key3];
        }
        var removeEventName = eventNameQueue.filter(function(v) {
            return !safeNamespace.some(function(n) {
                return v.startsWith(n);
            });
        });
        removeEventName.forEach(function(v) {
            return eventBus.off.apply(eventBus, [
                v
            ].concat(_toConsumableArray(handlers || [])));
        });
        var offQueue = {};
        if (eventNameQueue.length === 1 && removeEventName.length) {
            Object.keys(eventQueue).forEach(function(key) {
                if (handlers && eventNameQueue.includes(key)) {
                    offQueue[key] = eventQueue[key].filter(function(v) {
                        return !handlers.includes(v);
                    });
                } else if (!eventNameQueue.includes(key)) {
                    offQueue[key] = eventQueue[key];
                }
            });
        }
        return offQueue;
    }, []);
    var reducer = (0, import_react11.useCallback)(function(state2, _ref) {
        var type = _ref.type, payload = _ref.payload;
        switch(type){
            case IActionType.CLEAR:
                if (!payload) {
                    safeRemoveEvents(state2.eventNameQueue, state2.eventQueue);
                    return {
                        eventQueue: {},
                        eventNameQueue: []
                    };
                } else if (!typeOf(payload, [
                    "String",
                    "Array"
                ])) {
                    return state2;
                } else {
                    return {
                        eventNameQueue: state2.eventNameQueue.filter(function(v) {
                            return v !== payload;
                        }),
                        eventQueue: safeRemoveEvents([
                            payload
                        ], state2.eventQueue)
                    };
                }
            case IActionType.OFF:
                if (!payload) {
                    return state2;
                } else {
                    return {
                        eventNameQueue: state2.eventNameQueue.filter(function(v) {
                            return v !== payload.eventName;
                        }),
                        eventQueue: safeRemoveEvents([
                            payload.eventName
                        ], state2.eventQueue, payload.handler)
                    };
                }
            case IActionType.ADD:
                if (!payload || !payload.eventName || !payload.handlers) {
                    console.warn("you mast provider eventName and one handler to listen");
                    return (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, state2);
                } else {
                    payload.handlers.forEach(function(handler) {
                        eventBus.on(payload.eventName, handler);
                    });
                    return {
                        eventNameQueue: _toConsumableArray((0, import_lodash.default)([].concat(_toConsumableArray(state2.eventNameQueue), [
                            payload.eventName
                        ]))),
                        eventQueue: (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, state2.eventQueue), {}, (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._defineProperty)({}, payload.eventName, [].concat(_toConsumableArray(state2.eventQueue[payload.eventName] || []), _toConsumableArray(payload.handlers))))
                    };
                }
            case IActionType.TRIGGER:
                if (!payload || !payload.eventName || !payload.params) {
                    console.warn("you mast provider eventName and one arg to trigger");
                    return (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, state2);
                } else {
                    eventBus.trigger.apply(eventBus, [
                        payload.eventName
                    ].concat(_toConsumableArray(payload.params)));
                    eventBus.trigger.apply(eventBus, [
                        payload.eventName.replace(namespace, "")
                    ].concat(_toConsumableArray(payload.params)));
                    return (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, state2);
                }
            case IActionType.ONCE:
                setListenerOnce(payload.eventName, payload.handler);
                return state2;
            default:
                return state2;
        }
    }, []);
    var _useReducer = (0, import_react11.useReducer)(reducer, initState), _useReducer2 = _slicedToArray(_useReducer, 2), state = _useReducer2[0], dispatch = _useReducer2[1];
    var removeListener = (0, import_react11.useCallback)(function(eventName, handler) {
        var realEventName = eventName && wrapperEvent(namespace, eventName);
        dispatch({
            type: realEventName ? IActionType.OFF : IActionType.CLEAR,
            payload: realEventName ? {
                eventName: realEventName,
                handler
            } : null
        });
    }, [
        state
    ]);
    return [
        state,
        {
            dispatch,
            setListener,
            setListenerOnce,
            removeListener,
            emitEvent,
            clearListener
        }
    ];
}
var useEvent_default = useEvent;
// node_modules/taro-hooks/es/useVisible/index.js
var import_taro11 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react12 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
// node_modules/taro-hooks/es/constant.js
var ENV_TYPE = {
    WEAPP: "WEAPP",
    WEB: "WEB",
    RN: "RN",
    SWAN: "SWAN",
    ALIPAY: "ALIPAY",
    TT: "TT",
    QQ: "QQ",
    JD: "JD"
};
// node_modules/taro-hooks/es/useVisible/index.js
function useVisible() {
    var _useState = (0, import_react12.useState)(true), _useState2 = _slicedToArray(_useState, 2), visible = _useState2[0], changeVisible = _useState2[1];
    var env = useEnv_default();
    var listenVisible = (0, import_react12.useCallback)(function() {
        var visibleState = document.visibilityState;
        changeVisible(visibleState === "visible");
    }, []);
    (0, import_react12.useEffect)(function() {
        if (env && env === ENV_TYPE.WEB) {
            document.addEventListener("visibilitychange", listenVisible);
            return function() {
                return document.removeEventListener("visibilitychange", listenVisible);
            };
        }
    }, [
        env
    ]);
    (0, import_taro11.useDidShow)(function() {
        changeVisible(true);
    });
    (0, import_taro11.useDidHide)(function() {
        changeVisible(false);
    });
    return visible;
}
var useVisible_default = useVisible;
// node_modules/taro-hooks/es/useSelectorQuery/index.js
var import_react13 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var import_taro12 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
function useSelectorQuery() {
    var query = (0, import_react13.useRef)((0, import_taro12.createSelectorQuery)());
    var querySelector = (0, import_react13.useCallback)(function(selector) {
        return query.current.select(selector);
    }, [
        query
    ]);
    var querySelectorAll = (0, import_react13.useCallback)(function(selector) {
        return query.current.selectAll(selector);
    }, [
        query
    ]);
    var getBoundingClientRect = (0, import_react13.useCallback)(function(selector, all, scope) {
        return new Promise(function(resolve, reject) {
            if (!selector) {
                reject({});
            } else {
                try {
                    var select = all ? querySelectorAll : querySelector;
                    var selectorQuery = select(selector).boundingClientRect(resolve);
                    if (scope) {
                        selectorQuery = selectorQuery.in(scope);
                    }
                    selectorQuery.exec();
                } catch (e) {
                    reject(e);
                }
            }
        });
    }, [
        query
    ]);
    var getContext = (0, import_react13.useCallback)(function(selector, scope) {
        return new Promise(function(resolve, reject) {
            if (!selector) {
                reject({});
            } else {
                try {
                    var selectorQuery = querySelector(selector).context(function(res) {
                        return resolve(res.context);
                    });
                    if (scope) {
                        selectorQuery = selectorQuery.in(scope);
                    }
                    selectorQuery.exec();
                } catch (e) {
                    reject(e);
                }
            }
        });
    }, [
        query
    ]);
    var getFields = (0, import_react13.useCallback)(function(selector, fields, scope) {
        return new Promise(function(resolve, reject) {
            if (!selector) {
                reject({});
            } else {
                try {
                    var selectorQuery = querySelector(selector).fields(fields, resolve);
                    if (scope) {
                        selectorQuery = selectorQuery.in(scope);
                    }
                    selectorQuery.exec();
                } catch (e) {
                    reject(e);
                }
            }
        });
    }, [
        query
    ]);
    var getNode = (0, import_react13.useCallback)(function(selector, scope) {
        return new Promise(function(resolve, reject) {
            if (!selector) {
                reject({});
            } else {
                try {
                    var selectorQuery = querySelector(selector).node(function(res) {
                        return resolve(res.node);
                    });
                    if (scope) {
                        selectorQuery = selectorQuery.in(scope);
                    }
                    selectorQuery.exec();
                } catch (e) {
                    reject(e);
                }
            }
        });
    }, [
        query
    ]);
    var getScrollOffset = (0, import_react13.useCallback)(function(selector, scope) {
        return new Promise(function(resolve, reject) {
            if (!selector) {
                reject({});
            } else {
                try {
                    var selectorQuery = querySelector(selector).scrollOffset(resolve);
                    if (scope) {
                        selectorQuery = selectorQuery.in(scope);
                    }
                    selectorQuery.exec();
                } catch (e) {
                    reject(e);
                }
            }
        });
    }, [
        query
    ]);
    return [
        query.current,
        {
            in: query.current.in,
            exec: query.current.exec,
            select: query.current.select,
            selectAll: query.current.selectAll,
            selectViewport: query.current.selectViewport,
            getBoundingClientRect,
            getContext,
            getFields,
            getNode,
            getScrollOffset
        }
    ];
}
var useSelectorQuery_default = useSelectorQuery;
// node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_typeof)();
function _regeneratorRuntime() {
    "use strict";
    _regeneratorRuntime = function _regeneratorRuntime2() {
        return exports;
    };
    var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
    function define2(obj, key, value) {
        return Object.defineProperty(obj, key, {
            value,
            enumerable: true,
            configurable: true,
            writable: true
        }), obj[key];
    }
    try {
        define2({}, "");
    } catch (err) {
        define2 = function define3(obj, key, value) {
            return obj[key] = value;
        };
    }
    function wrap(innerFn, outerFn, self2, tryLocsList) {
        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);
        return generator._invoke = function(innerFn2, self3, context2) {
            var state = "suspendedStart";
            return function(method, arg) {
                if ("executing" === state) throw new Error("Generator is already running");
                if ("completed" === state) {
                    if ("throw" === method) throw arg;
                    return doneResult();
                }
                for(context2.method = method, context2.arg = arg;;){
                    var delegate = context2.delegate;
                    if (delegate) {
                        var delegateResult = maybeInvokeDelegate(delegate, context2);
                        if (delegateResult) {
                            if (delegateResult === ContinueSentinel) continue;
                            return delegateResult;
                        }
                    }
                    if ("next" === context2.method) context2.sent = context2._sent = context2.arg;
                    else if ("throw" === context2.method) {
                        if ("suspendedStart" === state) throw state = "completed", context2.arg;
                        context2.dispatchException(context2.arg);
                    } else "return" === context2.method && context2.abrupt("return", context2.arg);
                    state = "executing";
                    var record = tryCatch(innerFn2, self3, context2);
                    if ("normal" === record.type) {
                        if (state = context2.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
                        return {
                            value: record.arg,
                            done: context2.done
                        };
                    }
                    "throw" === record.type && (state = "completed", context2.method = "throw", context2.arg = record.arg);
                }
            };
        }(innerFn, self2, context), generator;
    }
    function tryCatch(fn, obj, arg) {
        try {
            return {
                type: "normal",
                arg: fn.call(obj, arg)
            };
        } catch (err) {
            return {
                type: "throw",
                arg: err
            };
        }
    }
    exports.wrap = wrap;
    var ContinueSentinel = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    var IteratorPrototype = {};
    define2(IteratorPrototype, iteratorSymbol, function() {
        return this;
    });
    var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));
    NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    function defineIteratorMethods(prototype) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(method) {
            define2(prototype, method, function(arg) {
                return this._invoke(method, arg);
            });
        });
    }
    function AsyncIterator(generator, PromiseImpl) {
        function invoke(method, arg, resolve, reject) {
            var record = tryCatch(generator[method], generator, arg);
            if ("throw" !== record.type) {
                var result = record.arg, value = result.value;
                return value && "object" == (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._typeof)(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function(value2) {
                    invoke("next", value2, resolve, reject);
                }, function(err) {
                    invoke("throw", err, resolve, reject);
                }) : PromiseImpl.resolve(value).then(function(unwrapped) {
                    result.value = unwrapped, resolve(result);
                }, function(error) {
                    return invoke("throw", error, resolve, reject);
                });
            }
            reject(record.arg);
        }
        var previousPromise;
        this._invoke = function(method, arg) {
            function callInvokeWithMethodAndArg() {
                return new PromiseImpl(function(resolve, reject) {
                    invoke(method, arg, resolve, reject);
                });
            }
            return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        };
    }
    function maybeInvokeDelegate(delegate, context) {
        var method = delegate.iterator[context.method];
        if (void 0 === method) {
            if (context.delegate = null, "throw" === context.method) {
                if (delegate.iterator["return"] && (context.method = "return", context.arg = void 0, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel;
                context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method");
            }
            return ContinueSentinel;
        }
        var record = tryCatch(method, delegate.iterator, context.arg);
        if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
        var info = record.arg;
        return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = void 0), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
    }
    function pushTryEntry(locs) {
        var entry = {
            tryLoc: locs[0]
        };
        1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
    }
    function resetTryEntry(entry) {
        var record = entry.completion || {};
        record.type = "normal", delete record.arg, entry.completion = record;
    }
    function Context(tryLocsList) {
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ], tryLocsList.forEach(pushTryEntry, this), this.reset(true);
    }
    function values(iterable) {
        if (iterable) {
            var iteratorMethod = iterable[iteratorSymbol];
            if (iteratorMethod) return iteratorMethod.call(iterable);
            if ("function" == typeof iterable.next) return iterable;
            if (!isNaN(iterable.length)) {
                var i = -1, next = function next2() {
                    for(; ++i < iterable.length;){
                        if (hasOwn.call(iterable, i)) return next2.value = iterable[i], next2.done = false, next2;
                    }
                    return next2.value = void 0, next2.done = true, next2;
                };
                return next.next = next;
            }
        }
        return {
            next: doneResult
        };
    }
    function doneResult() {
        return {
            value: void 0,
            done: true
        };
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, define2(Gp, "constructor", GeneratorFunctionPrototype), define2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function(genFun) {
        var ctor = "function" == typeof genFun && genFun.constructor;
        return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
    }, exports.mark = function(genFun) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define2(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
    }, exports.awrap = function(arg) {
        return {
            __await: arg
        };
    }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, asyncIteratorSymbol, function() {
        return this;
    }), exports.AsyncIterator = AsyncIterator, exports.async = function(innerFn, outerFn, self2, tryLocsList, PromiseImpl) {
        void 0 === PromiseImpl && (PromiseImpl = Promise);
        var iter = new AsyncIterator(wrap(innerFn, outerFn, self2, tryLocsList), PromiseImpl);
        return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {
            return result.done ? result.value : iter.next();
        });
    }, defineIteratorMethods(Gp), define2(Gp, toStringTagSymbol, "Generator"), define2(Gp, iteratorSymbol, function() {
        return this;
    }), define2(Gp, "toString", function() {
        return "[object Generator]";
    }), exports.keys = function(object) {
        var keys = [];
        for(var key in object){
            keys.push(key);
        }
        return keys.reverse(), function next() {
            for(; keys.length;){
                var key2 = keys.pop();
                if (key2 in object) return next.value = key2, next.done = false, next;
            }
            return next.done = true, next;
        };
    }, exports.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(skipTempReset) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = false, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for(var name in this){
                "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = void 0);
            }
        },
        stop: function stop() {
            this.done = true;
            var rootRecord = this.tryEntries[0].completion;
            if ("throw" === rootRecord.type) throw rootRecord.arg;
            return this.rval;
        },
        dispatchException: function dispatchException(exception) {
            if (this.done) throw exception;
            var context = this;
            function handle(loc, caught) {
                return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = void 0), !!caught;
            }
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i], record = entry.completion;
                if ("root" === entry.tryLoc) return handle("end");
                if (entry.tryLoc <= this.prev) {
                    var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc");
                    if (hasCatch && hasFinally) {
                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);
                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                    } else if (hasCatch) {
                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);
                    } else {
                        if (!hasFinally) throw new Error("try statement without catch or finally");
                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                    }
                }
            }
        },
        abrupt: function abrupt(type, arg) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
                    var finallyEntry = entry;
                    break;
                }
            }
            finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
            var record = finallyEntry ? finallyEntry.completion : {};
            return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
        },
        complete: function complete(record, afterLoc) {
            if ("throw" === record.type) throw record.arg;
            return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;
        },
        finish: function finish(finallyLoc) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
            }
        },
        "catch": function _catch(tryLoc) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                    var record = entry.completion;
                    if ("throw" === record.type) {
                        var thrown = record.arg;
                        resetTryEntry(entry);
                    }
                    return thrown;
                }
            }
            throw new Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(iterable, resultName, nextLoc) {
            return this.delegate = {
                iterator: values(iterable),
                resultName,
                nextLoc
            }, "next" === this.method && (this.arg = void 0), ContinueSentinel;
        }
    }, exports;
}
// node_modules/taro-hooks/es/useStorage/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
// node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _asyncToGenerator(fn) {
    return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self2, args);
            function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(void 0);
        });
    };
}
// node_modules/@babel/runtime/helpers/esm/asyncIterator.js
function _asyncIterator(iterable) {
    var method, async, sync, retry = 2;
    for("undefined" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;){
        if (async && null != (method = iterable[async])) return method.call(iterable);
        if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));
        async = "@@asyncIterator", sync = "@@iterator";
    }
    throw new TypeError("Object is not async iterable");
}
function AsyncFromSyncIterator(s) {
    function AsyncFromSyncIteratorContinuation(r) {
        if (Object(r) !== r) return Promise.reject(new TypeError(r + " is not an object."));
        var done = r.done;
        return Promise.resolve(r.value).then(function(value) {
            return {
                value,
                done
            };
        });
    }
    return AsyncFromSyncIterator = function AsyncFromSyncIterator2(s2) {
        this.s = s2, this.n = s2.next;
    }, AsyncFromSyncIterator.prototype = {
        s: null,
        n: null,
        next: function next() {
            return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));
        },
        "return": function _return(value) {
            var ret = this.s["return"];
            return void 0 === ret ? Promise.resolve({
                value,
                done: true
            }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));
        },
        "throw": function _throw(value) {
            var thr = this.s["return"];
            return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));
        }
    }, new AsyncFromSyncIterator(s);
}
// node_modules/taro-hooks/es/useStorage/index.js
var import_taro13 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react14 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var initStorageInfo = {
    currentSize: 0,
    limitSize: 0,
    keys: [],
    storage: {}
};
function useStorage() {
    var _useState = (0, import_react14.useState)(initStorageInfo), _useState2 = _slicedToArray(_useState, 2), storageInfo = _useState2[0], setStorageInfo = _useState2[1];
    var env = useEnv_default();
    (0, import_react14.useEffect)(function() {
        if (env) {
            generateStorageInfo();
        }
    }, [
        env
    ]);
    var generateStorageInfo = (0, import_react14.useCallback)(function() {
        return new Promise(function() {
            var _ref = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(resolve, reject) {
                return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                    while(1){
                        switch(_context2.prev = _context2.next){
                            case 0:
                                try {
                                    (0, import_taro13.getStorageInfo)({
                                        success: function() {
                                            var _success = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(currentInfo) {
                                                var storage, polyfillInfo, storageInfo2;
                                                return _regeneratorRuntime().wrap(function _callee$(_context) {
                                                    while(1){
                                                        switch(_context.prev = _context.next){
                                                            case 0:
                                                                _context.next = 2;
                                                                return getStorageAsync();
                                                            case 2:
                                                                storage = _context.sent;
                                                                polyfillInfo = {};
                                                                if (!(env === ENV_TYPE.WEB)) {
                                                                    _context.next = 8;
                                                                    break;
                                                                }
                                                                _context.next = 7;
                                                                return getStorageSpaceForWeb();
                                                            case 7:
                                                                polyfillInfo = _context.sent;
                                                            case 8:
                                                                storageInfo2 = (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, setStorageInfo), {}, {
                                                                    storage: storage || {}
                                                                }, currentInfo), polyfillInfo);
                                                                setStorageInfo(storageInfo2);
                                                                resolve(storageInfo2);
                                                            case 11:
                                                            case "end":
                                                                return _context.stop();
                                                        }
                                                    }
                                                }, _callee);
                                            }));
                                            function success(_x3) {
                                                return _success.apply(this, arguments);
                                            }
                                            return success;
                                        }(),
                                        fail: reject
                                    });
                                } catch (e) {
                                    console.log(e);
                                }
                            case 1:
                            case "end":
                                return _context2.stop();
                        }
                    }
                }, _callee2);
            }));
            return function(_x, _x2) {
                return _ref.apply(this, arguments);
            };
        }());
    }, [
        storageInfo,
        env
    ]);
    var getStorageSpaceForWeb = (0, import_react14.useCallback)(_asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {
        var storageSpace, _yield$navigator$stor, _yield$navigator$stor2, usage, _yield$navigator$stor3, quota;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
            while(1){
                switch(_context3.prev = _context3.next){
                    case 0:
                        storageSpace = {};
                        if (!(navigator && "storage" in navigator && "estimate" in navigator.storage)) {
                            _context3.next = 16;
                            break;
                        }
                        _context3.prev = 2;
                        _context3.next = 5;
                        return navigator.storage.estimate();
                    case 5:
                        _yield$navigator$stor = _context3.sent;
                        _yield$navigator$stor2 = _yield$navigator$stor.usage;
                        usage = _yield$navigator$stor2 === void 0 ? 0 : _yield$navigator$stor2;
                        _yield$navigator$stor3 = _yield$navigator$stor.quota;
                        quota = _yield$navigator$stor3 === void 0 ? 0 : _yield$navigator$stor3;
                        storageSpace = {
                            currentSize: usage,
                            limitSize: quota
                        };
                        _context3.next = 16;
                        break;
                    case 13:
                        _context3.prev = 13;
                        _context3.t0 = _context3["catch"](2);
                        storageSpace = {
                            currentSize: Storage.length,
                            limitSize: 0
                        };
                    case 16:
                        return _context3.abrupt("return", storageSpace);
                    case 17:
                    case "end":
                        return _context3.stop();
                }
            }
        }, _callee3, null, [
            [
                2,
                13
            ]
        ]);
    })), [
        env
    ]);
    var getStorageSync = (0, import_react14.useCallback)(function(key) {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro13.getStorage)({
                    key,
                    success: function success(_ref3) {
                        var data = _ref3.data;
                        return resolve(data);
                    },
                    fail: function fail() {
                        return reject(void 0);
                    }
                });
            } catch (e) {
                reject(void 0);
            }
        });
    }, []);
    var getStorageAsync = (0, import_react14.useCallback)(function(key) {
        return new Promise(function() {
            var _ref4 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(resolve, reject) {
                var _data2;
                return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                    while(1){
                        switch(_context5.prev = _context5.next){
                            case 0:
                                _context5.prev = 0;
                                if (key) {
                                    _context5.next = 5;
                                    break;
                                }
                                (0, import_taro13.getStorageInfo)({
                                    success: function() {
                                        var _success2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(_ref5) {
                                            var keys, result, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, currentKey, _data;
                                            return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                                                while(1){
                                                    switch(_context4.prev = _context4.next){
                                                        case 0:
                                                            keys = _ref5.keys;
                                                            if (keys.length) {
                                                                _context4.next = 5;
                                                                break;
                                                            }
                                                            resolve(void 0);
                                                            _context4.next = 38;
                                                            break;
                                                        case 5:
                                                            result = {};
                                                            _iteratorAbruptCompletion = false;
                                                            _didIteratorError = false;
                                                            _context4.prev = 8;
                                                            _iterator = _asyncIterator(keys);
                                                        case 10:
                                                            _context4.next = 12;
                                                            return _iterator.next();
                                                        case 12:
                                                            if (!(_iteratorAbruptCompletion = !(_step = _context4.sent).done)) {
                                                                _context4.next = 21;
                                                                break;
                                                            }
                                                            currentKey = _step.value;
                                                            _context4.next = 16;
                                                            return getStorageSync(currentKey);
                                                        case 16:
                                                            _data = _context4.sent;
                                                            result[currentKey] = _data;
                                                        case 18:
                                                            _iteratorAbruptCompletion = false;
                                                            _context4.next = 10;
                                                            break;
                                                        case 21:
                                                            _context4.next = 27;
                                                            break;
                                                        case 23:
                                                            _context4.prev = 23;
                                                            _context4.t0 = _context4["catch"](8);
                                                            _didIteratorError = true;
                                                            _iteratorError = _context4.t0;
                                                        case 27:
                                                            _context4.prev = 27;
                                                            _context4.prev = 28;
                                                            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {
                                                                _context4.next = 32;
                                                                break;
                                                            }
                                                            _context4.next = 32;
                                                            return _iterator.return();
                                                        case 32:
                                                            _context4.prev = 32;
                                                            if (!_didIteratorError) {
                                                                _context4.next = 35;
                                                                break;
                                                            }
                                                            throw _iteratorError;
                                                        case 35:
                                                            return _context4.finish(32);
                                                        case 36:
                                                            return _context4.finish(27);
                                                        case 37:
                                                            resolve(result);
                                                        case 38:
                                                        case "end":
                                                            return _context4.stop();
                                                    }
                                                }
                                            }, _callee4, null, [
                                                [
                                                    8,
                                                    23,
                                                    27,
                                                    37
                                                ],
                                                [
                                                    28,
                                                    ,
                                                    32,
                                                    36
                                                ]
                                            ]);
                                        }));
                                        function success(_x6) {
                                            return _success2.apply(this, arguments);
                                        }
                                        return success;
                                    }(),
                                    fail: function fail() {
                                        return reject(void 0);
                                    }
                                });
                                _context5.next = 9;
                                break;
                            case 5:
                                _context5.next = 7;
                                return getStorageSync(key);
                            case 7:
                                _data2 = _context5.sent;
                                resolve(_data2);
                            case 9:
                                _context5.next = 14;
                                break;
                            case 11:
                                _context5.prev = 11;
                                _context5.t0 = _context5["catch"](0);
                                reject(void 0);
                            case 14:
                            case "end":
                                return _context5.stop();
                        }
                    }
                }, _callee5, null, [
                    [
                        0,
                        11
                    ]
                ]);
            }));
            return function(_x4, _x5) {
                return _ref4.apply(this, arguments);
            };
        }());
    }, [
        storageInfo,
        env
    ]);
    var setStorageAsync = (0, import_react14.useCallback)(function(key, data) {
        return new Promise(function(resolve, reject) {
            try {
                if (!key) {
                    console.warn("please provide a option");
                    return reject(false);
                } else {
                    (0, import_taro13.setStorage)({
                        key,
                        data,
                        success: function success() {
                            generateStorageInfo();
                            resolve(true);
                        },
                        fail: function fail() {
                            return reject(false);
                        }
                    });
                }
            } catch (e) {
                reject(false);
            }
        });
    }, [
        env
    ]);
    var removeStorageAsync = (0, import_react14.useCallback)(function(key) {
        return new Promise(function(resolve, reject) {
            var callbackOptions = {
                success: function success() {
                    generateStorageInfo();
                    resolve(true);
                },
                fail: function fail() {
                    return reject(false);
                }
            };
            try {
                if (!key) {
                    (0, import_taro13.clearStorage)();
                    generateStorageInfo();
                    resolve(true);
                } else {
                    (0, import_taro13.removeStorage)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({
                        key
                    }, callbackOptions));
                }
            } catch (e) {
                reject(false);
            }
        });
    }, [
        env
    ]);
    return [
        storageInfo,
        {
            set: setStorageAsync,
            get: getStorageAsync,
            remove: removeStorageAsync
        }
    ];
}
var useStorage_default = useStorage;
// node_modules/taro-hooks/es/useDebounce/index.js
var import_react18 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
// node_modules/taro-hooks/es/useDebounceFn/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_typeof)();
// node_modules/lodash-wechat/es/isObject/index.js
function _typeof2(obj) {
    "@babel/helpers - typeof";
    return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
        return typeof obj2;
    } : function(obj2) {
        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof2(obj);
}
function isObject(value) {
    var type = _typeof2(value);
    return value != null && (type === "object" || type === "function");
}
var isObject_default = isObject;
// node_modules/lodash-wechat/es/internal/freeGlobal.js
function _typeof3(obj) {
    "@babel/helpers - typeof";
    return _typeof3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
        return typeof obj2;
    } : function(obj2) {
        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof3(obj);
}
var freeGlobal = (typeof __webpack_require__.g === "undefined" ? "undefined" : _typeof3(__webpack_require__.g)) === "object" && __webpack_require__.g !== null && __webpack_require__.g.Object === Object && __webpack_require__.g;
var freeGlobal_default = freeGlobal;
// node_modules/lodash-wechat/es/internal/root.js
function _typeof4(obj) {
    "@babel/helpers - typeof";
    return _typeof4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
        return typeof obj2;
    } : function(obj2) {
        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof4(obj);
}
var freeGlobalThis = (typeof globalThis === "undefined" ? "undefined" : _typeof4(globalThis)) === "object" && globalThis !== null && globalThis.Object == Object && globalThis;
var freeSelf = (typeof self === "undefined" ? "undefined" : _typeof4(self)) === "object" && self !== null && self.Object === Object && self;
var root = freeGlobalThis || freeGlobal_default || freeSelf || Function("return this")();
var root_default = root;
// node_modules/lodash-wechat/es/debounce/index.js
function debounce(func, wait, options) {
    var lastArgs, lastThis, maxWait, result, timerId, lastCallTime;
    var lastInvokeTime = 0;
    var leading = false;
    var maxing = false;
    var trailing = true;
    var useRAF = !wait && wait !== 0 && typeof root_default.requestAnimationFrame === "function";
    if (typeof func !== "function") {
        throw new TypeError("Expected a function");
    }
    wait = +wait || 0;
    if (isObject_default(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
    }
    function invokeFunc(time) {
        var args = lastArgs;
        var thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
    }
    function startTimer(pendingFunc, wait2) {
        if (useRAF) {
            root_default.cancelAnimationFrame(timerId);
            return root_default.requestAnimationFrame(pendingFunc);
        }
        return setTimeout(pendingFunc, wait2);
    }
    function cancelTimer(id) {
        if (useRAF) {
            return root_default.cancelAnimationFrame(id);
        }
        clearTimeout(id);
    }
    function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = startTimer(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
    }
    function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime;
        var timeSinceLastInvoke = time - lastInvokeTime;
        var timeWaiting = wait - timeSinceLastCall;
        return maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
    }
    function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime;
        var timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
    }
    function timerExpired() {
        var time = Date.now();
        if (shouldInvoke(time)) {
            return trailingEdge(time);
        }
        timerId = startTimer(timerExpired, remainingWait(time));
    }
    function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
            return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
    }
    function cancel() {
        if (timerId !== void 0) {
            cancelTimer(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
    }
    function flush() {
        return timerId === void 0 ? result : trailingEdge(Date.now());
    }
    function pending() {
        return timerId !== void 0;
    }
    function debounced() {
        var time = Date.now();
        var isInvoking = shouldInvoke(time);
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        lastArgs = args;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
            if (timerId === void 0) {
                return leadingEdge(lastCallTime);
            }
            if (maxing) {
                timerId = startTimer(timerExpired, wait);
                return invokeFunc(lastCallTime);
            }
        }
        if (timerId === void 0) {
            timerId = startTimer(timerExpired, wait);
        }
        return result;
    }
    debounced.cancel = cancel;
    debounced.flush = flush;
    debounced.pending = pending;
    return debounced;
}
var debounce_default = debounce;
// node_modules/lodash-wechat/es/throttle/index.js
function throttle(func, wait, options) {
    var leading = true;
    var trailing = true;
    if (typeof func !== "function") {
        throw new TypeError("Expected a function");
    }
    if (isObject_default(options)) {
        leading = "leading" in options ? !!options.leading : leading;
        trailing = "trailing" in options ? !!options.trailing : trailing;
    }
    return debounce_default(func, wait, {
        leading,
        trailing,
        maxWait: wait
    });
}
var throttle_default = throttle;
// node_modules/taro-hooks/es/useDebounceFn/index.js
var import_react17 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
// node_modules/taro-hooks/es/useLatest/index.js
var import_react15 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useLatest(value) {
    var ref = (0, import_react15.useRef)(value);
    ref.current = value;
    return ref;
}
var useLatest_default = useLatest;
// node_modules/taro-hooks/es/useUnmount/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_typeof)();
var import_react16 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var useUnmount = function useUnmount2(fn) {
    if (true) {
        if (typeof fn !== "function") {
            console.error("useUnmount expected parameter is a function, got ".concat((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._typeof)(fn)));
        }
    }
    var fnRef = useLatest_default(fn);
    (0, import_react16.useEffect)(function() {
        return function() {
            fnRef.current();
        };
    }, []);
};
var useUnmount_default = useUnmount;
// node_modules/taro-hooks/es/useDebounceFn/index.js
function useDebounceFn(fn, options) {
    var _options$wait;
    if (true) {
        if (typeof fn !== "function") {
            console.error("useDebounceFn expected parameter is a function, got ".concat((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._typeof)(fn)));
        }
    }
    var fnRef = useLatest_default(fn);
    var wait = (_options$wait = options === null || options === void 0 ? void 0 : options.wait) !== null && _options$wait !== void 0 ? _options$wait : 1e3;
    var debounced = (0, import_react17.useMemo)(function() {
        return debounce_default(function() {
            return fnRef.current.apply(fnRef, arguments);
        }, wait, options);
    }, []);
    useUnmount_default(function() {
        debounced.cancel();
    });
    return {
        run: debounced,
        cancel: debounced.cancel,
        flush: debounced.flush
    };
}
var useDebounceFn_default = useDebounceFn;
// node_modules/taro-hooks/es/useDebounce/index.js
function useDebounce(value, options) {
    var _useState = (0, import_react18.useState)(value), _useState2 = _slicedToArray(_useState, 2), debounced = _useState2[0], setDebounced = _useState2[1];
    var _useDebounceFn = useDebounceFn_default(function() {
        setDebounced(value);
    }, options), run = _useDebounceFn.run;
    (0, import_react18.useEffect)(function() {
        run();
    }, [
        value
    ]);
    return debounced;
}
var useDebounce_default = useDebounce;
// node_modules/taro-hooks/es/useThrottle/index.js
var import_react20 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
// node_modules/taro-hooks/es/useThrottleFn/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_typeof)();
var import_react19 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useThrottleFn(fn, options) {
    var _options$wait;
    if (true) {
        if (typeof fn !== "function") {
            console.error("useThrottleFn expected parameter is a function, got ".concat((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._typeof)(fn)));
        }
    }
    var fnRef = useLatest_default(fn);
    var wait = (_options$wait = options === null || options === void 0 ? void 0 : options.wait) !== null && _options$wait !== void 0 ? _options$wait : 1e3;
    var throttled = (0, import_react19.useMemo)(function() {
        return throttle_default(function() {
            return fnRef.current.apply(fnRef, arguments);
        }, wait, options);
    }, []);
    useUnmount_default(function() {
        throttled.cancel();
    });
    return {
        run: throttled,
        cancel: throttled.cancel,
        flush: throttled.flush
    };
}
var useThrottleFn_default = useThrottleFn;
// node_modules/taro-hooks/es/useThrottle/index.js
function useThrottle(value, options) {
    var _useState = (0, import_react20.useState)(value), _useState2 = _slicedToArray(_useState, 2), throttled = _useState2[0], setThrottled = _useState2[1];
    var _useThrottleFn = useThrottleFn_default(function() {
        setThrottled(value);
    }, options), run = _useThrottleFn.run;
    (0, import_react20.useEffect)(function() {
        run();
    }, [
        value
    ]);
    return throttled;
}
var useThrottle_default = useThrottle;
// node_modules/taro-hooks/es/useBackground/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro14 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react21 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useBackground(option) {
    var env = useEnv_default();
    (0, import_react21.useEffect)(function() {
        if (option) {
            setBackgroundColorAsync(option);
            option.textStyle && setBackgroundTextStyleAsync(option.textStyle);
        }
    }, [
        option
    ]);
    var setBackgroundColorAsync = (0, import_react21.useCallback)(function() {
        var setOption = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return new Promise(function(resolve, reject) {
            if (isPlainObject(setOption) || env === ENV_TYPE.WEB) {
                reject({
                    errMsg: "setBackgroundColor: fail"
                });
            } else {
                try {
                    (0, import_taro14.setBackgroundColor)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, setOption), {}, {
                        success: resolve,
                        fail: reject
                    })).catch(reject);
                } catch (e) {
                    reject({
                        errMsg: "setBackgroundColor: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        option,
        env
    ]);
    var setBackgroundTextStyleAsync = (0, import_react21.useCallback)(function(textStyle) {
        return new Promise(function(resolve, reject) {
            if (!textStyle || env === ENV_TYPE.WEB) {
                reject({
                    errMsg: "setBackgroundTextStyle: fail"
                });
            } else {
                try {
                    (0, import_taro14.setBackgroundTextStyle)({
                        textStyle,
                        success: resolve,
                        fail: reject
                    }).catch(reject);
                } catch (e) {
                    reject({
                        errMsg: "setBackgroundTextStyle: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        option,
        env
    ]);
    return [
        setBackgroundColorAsync,
        setBackgroundTextStyleAsync
    ];
}
var useBackground_default = useBackground;
// node_modules/taro-hooks/es/useTabBar/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro15 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react22 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useTabBar() {
    var setTabBarVisible = (0, import_react22.useCallback)(function() {
        var visible = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        var animation = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        return new Promise(function(resolve, reject) {
            if (typeof visible !== "boolean") {
                reject({
                    errMsg: "setTabBarVisible: fail"
                });
            } else {
                try {
                    var setTabBarVisibleMethod = visible ? import_taro15.showTabBar : import_taro15.hideTabBar;
                    setTabBarVisibleMethod({
                        animation,
                        success: resolve,
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "setTabBarVisible: fail",
                        data: e
                    });
                }
            }
        });
    }, []);
    var setRedDotVisible = (0, import_react22.useCallback)(function(visible) {
        var indexList = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
        return new Promise(function() {
            var _ref = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(resolve, reject) {
                var validIndexList, setRedDotVisibleMethod, successIndexList, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, index;
                return _regeneratorRuntime().wrap(function _callee$(_context) {
                    while(1){
                        switch(_context.prev = _context.next){
                            case 0:
                                validIndexList = indexList.filter(function(v) {
                                    return typeof v === "number";
                                }) || [];
                                if (!(!Array.isArray(indexList) || !validIndexList.length || typeof visible !== "boolean")) {
                                    _context.next = 5;
                                    break;
                                }
                                reject({
                                    errMsg: "setRedDotVisible: fail"
                                });
                                _context.next = 50;
                                break;
                            case 5:
                                _context.prev = 5;
                                setRedDotVisibleMethod = visible ? import_taro15.showTabBarRedDot : import_taro15.hideTabBarRedDot;
                                successIndexList = [];
                                _iteratorAbruptCompletion = false;
                                _didIteratorError = false;
                                _context.prev = 10;
                                _iterator = _asyncIterator(validIndexList);
                            case 12:
                                _context.next = 14;
                                return _iterator.next();
                            case 14:
                                if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {
                                    _context.next = 28;
                                    break;
                                }
                                index = _step.value;
                                _context.prev = 16;
                                _context.next = 19;
                                return setRedDotVisibleMethod({
                                    index
                                });
                            case 19:
                                successIndexList.push(index);
                                _context.next = 25;
                                break;
                            case 22:
                                _context.prev = 22;
                                _context.t0 = _context["catch"](16);
                                console.log({
                                    errMsg: "setRedDotVisible-".concat(index, ": fail"),
                                    data: _context.t0
                                });
                            case 25:
                                _iteratorAbruptCompletion = false;
                                _context.next = 12;
                                break;
                            case 28:
                                _context.next = 34;
                                break;
                            case 30:
                                _context.prev = 30;
                                _context.t1 = _context["catch"](10);
                                _didIteratorError = true;
                                _iteratorError = _context.t1;
                            case 34:
                                _context.prev = 34;
                                _context.prev = 35;
                                if (!(_iteratorAbruptCompletion && _iterator.return != null)) {
                                    _context.next = 39;
                                    break;
                                }
                                _context.next = 39;
                                return _iterator.return();
                            case 39:
                                _context.prev = 39;
                                if (!_didIteratorError) {
                                    _context.next = 42;
                                    break;
                                }
                                throw _iteratorError;
                            case 42:
                                return _context.finish(39);
                            case 43:
                                return _context.finish(34);
                            case 44:
                                resolve({
                                    errMsg: "setRedDotVisible: ok",
                                    data: successIndexList
                                });
                                _context.next = 50;
                                break;
                            case 47:
                                _context.prev = 47;
                                _context.t2 = _context["catch"](5);
                                reject({
                                    errMsg: "setRedDotVisible: fail",
                                    data: _context.t2
                                });
                            case 50:
                            case "end":
                                return _context.stop();
                        }
                    }
                }, _callee, null, [
                    [
                        5,
                        47
                    ],
                    [
                        10,
                        30,
                        34,
                        44
                    ],
                    [
                        16,
                        22
                    ],
                    [
                        35,
                        ,
                        39,
                        43
                    ]
                ]);
            }));
            return function(_x, _x2) {
                return _ref.apply(this, arguments);
            };
        }());
    }, []);
    var setBadgeVisible = (0, import_react22.useCallback)(function() {
        var indexList = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        return new Promise(function() {
            var _ref2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(resolve, reject) {
                var isSet, validIndexList, successIndexList, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, indexOrOption, index;
                return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                    while(1){
                        switch(_context2.prev = _context2.next){
                            case 0:
                                isSet = indexList.every(function(v) {
                                    return typeof v !== "number";
                                });
                                validIndexList = indexList.filter(function(v) {
                                    return !isSet ? typeof v === "number" : typeOf(v, "Object");
                                });
                                if (!(!Array.isArray(indexList) || !validIndexList.length)) {
                                    _context2.next = 6;
                                    break;
                                }
                                reject({
                                    errMsg: "setBadgeVisible: fail"
                                });
                                _context2.next = 56;
                                break;
                            case 6:
                                _context2.prev = 6;
                                successIndexList = [];
                                _iteratorAbruptCompletion2 = false;
                                _didIteratorError2 = false;
                                _context2.prev = 10;
                                _iterator2 = _asyncIterator(validIndexList);
                            case 12:
                                _context2.next = 14;
                                return _iterator2.next();
                            case 14:
                                if (!(_iteratorAbruptCompletion2 = !(_step2 = _context2.sent).done)) {
                                    _context2.next = 34;
                                    break;
                                }
                                indexOrOption = _step2.value;
                                index = isSet ? indexOrOption.index : indexOrOption;
                                _context2.prev = 17;
                                if (!isSet) {
                                    _context2.next = 23;
                                    break;
                                }
                                _context2.next = 21;
                                return (0, import_taro15.setTabBarBadge)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, indexOrOption));
                            case 21:
                                _context2.next = 25;
                                break;
                            case 23:
                                _context2.next = 25;
                                return (0, import_taro15.removeTabBarBadge)({
                                    index: indexOrOption
                                });
                            case 25:
                                successIndexList.push(index);
                                _context2.next = 31;
                                break;
                            case 28:
                                _context2.prev = 28;
                                _context2.t0 = _context2["catch"](17);
                                console.log({
                                    errMsg: "setBadgeVisible-".concat(index, ": fail"),
                                    data: _context2.t0
                                });
                            case 31:
                                _iteratorAbruptCompletion2 = false;
                                _context2.next = 12;
                                break;
                            case 34:
                                _context2.next = 40;
                                break;
                            case 36:
                                _context2.prev = 36;
                                _context2.t1 = _context2["catch"](10);
                                _didIteratorError2 = true;
                                _iteratorError2 = _context2.t1;
                            case 40:
                                _context2.prev = 40;
                                _context2.prev = 41;
                                if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {
                                    _context2.next = 45;
                                    break;
                                }
                                _context2.next = 45;
                                return _iterator2.return();
                            case 45:
                                _context2.prev = 45;
                                if (!_didIteratorError2) {
                                    _context2.next = 48;
                                    break;
                                }
                                throw _iteratorError2;
                            case 48:
                                return _context2.finish(45);
                            case 49:
                                return _context2.finish(40);
                            case 50:
                                resolve({
                                    errMsg: "setBadgeVisible: ok",
                                    data: successIndexList
                                });
                                _context2.next = 56;
                                break;
                            case 53:
                                _context2.prev = 53;
                                _context2.t2 = _context2["catch"](6);
                                reject({
                                    errMsg: "setBadgeVisible: fail",
                                    data: _context2.t2
                                });
                            case 56:
                            case "end":
                                return _context2.stop();
                        }
                    }
                }, _callee2, null, [
                    [
                        6,
                        53
                    ],
                    [
                        10,
                        36,
                        40,
                        50
                    ],
                    [
                        17,
                        28
                    ],
                    [
                        41,
                        ,
                        45,
                        49
                    ]
                ]);
            }));
            return function(_x3, _x4) {
                return _ref2.apply(this, arguments);
            };
        }());
    }, []);
    var setTabBarItemAsync = (0, import_react22.useCallback)(function() {
        var itemList = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        return new Promise(function() {
            var _ref3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(resolve, reject) {
                var validIndexList, successIndexList, _iteratorAbruptCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, singleOption;
                return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                    while(1){
                        switch(_context3.prev = _context3.next){
                            case 0:
                                validIndexList = itemList.filter(function(v) {
                                    return typeOf(v, "Object") && typeof v.index === "number";
                                }) || [];
                                if (!(!Array.isArray(itemList) || !validIndexList.length)) {
                                    _context3.next = 5;
                                    break;
                                }
                                reject({
                                    errMsg: "setTabBarItem: fail"
                                });
                                _context3.next = 49;
                                break;
                            case 5:
                                _context3.prev = 5;
                                successIndexList = [];
                                _iteratorAbruptCompletion3 = false;
                                _didIteratorError3 = false;
                                _context3.prev = 9;
                                _iterator3 = _asyncIterator(validIndexList);
                            case 11:
                                _context3.next = 13;
                                return _iterator3.next();
                            case 13:
                                if (!(_iteratorAbruptCompletion3 = !(_step3 = _context3.sent).done)) {
                                    _context3.next = 27;
                                    break;
                                }
                                singleOption = _step3.value;
                                _context3.prev = 15;
                                _context3.next = 18;
                                return (0, import_taro15.setTabBarItem)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, singleOption));
                            case 18:
                                successIndexList.push(singleOption.index);
                                _context3.next = 24;
                                break;
                            case 21:
                                _context3.prev = 21;
                                _context3.t0 = _context3["catch"](15);
                                console.log({
                                    errMsg: "setTabBarItem-".concat(singleOption.index, ": fail"),
                                    data: _context3.t0
                                });
                            case 24:
                                _iteratorAbruptCompletion3 = false;
                                _context3.next = 11;
                                break;
                            case 27:
                                _context3.next = 33;
                                break;
                            case 29:
                                _context3.prev = 29;
                                _context3.t1 = _context3["catch"](9);
                                _didIteratorError3 = true;
                                _iteratorError3 = _context3.t1;
                            case 33:
                                _context3.prev = 33;
                                _context3.prev = 34;
                                if (!(_iteratorAbruptCompletion3 && _iterator3.return != null)) {
                                    _context3.next = 38;
                                    break;
                                }
                                _context3.next = 38;
                                return _iterator3.return();
                            case 38:
                                _context3.prev = 38;
                                if (!_didIteratorError3) {
                                    _context3.next = 41;
                                    break;
                                }
                                throw _iteratorError3;
                            case 41:
                                return _context3.finish(38);
                            case 42:
                                return _context3.finish(33);
                            case 43:
                                resolve({
                                    errMsg: "setTabBarItem: ok",
                                    data: successIndexList
                                });
                                _context3.next = 49;
                                break;
                            case 46:
                                _context3.prev = 46;
                                _context3.t2 = _context3["catch"](5);
                                reject({
                                    errMsg: "setTabBarItem: fail",
                                    data: _context3.t2
                                });
                            case 49:
                            case "end":
                                return _context3.stop();
                        }
                    }
                }, _callee3, null, [
                    [
                        5,
                        46
                    ],
                    [
                        9,
                        29,
                        33,
                        43
                    ],
                    [
                        15,
                        21
                    ],
                    [
                        34,
                        ,
                        38,
                        42
                    ]
                ]);
            }));
            return function(_x5, _x6) {
                return _ref3.apply(this, arguments);
            };
        }());
    }, []);
    var setTabBarStyleAsync = (0, import_react22.useCallback)(function() {
        var option = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro15.setTabBarStyle)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, option), {}, {
                    success: resolve,
                    fail: reject
                }));
            } catch (e) {
                reject({
                    errMsg: "setTabBarStyle: fail",
                    data: e
                });
            }
        });
    }, []);
    return {
        setTabBarVisible,
        setRedDotVisible,
        setBadgeVisible,
        setTabBarItem: setTabBarItemAsync,
        setTabBarStyle: setTabBarStyleAsync
    };
}
var useTabBar_default = useTabBar;
// node_modules/taro-hooks/es/useManualPullDownRefresh/index.js
var import_taro16 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react23 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useManualPullDownRefresh() {
    var timer = (0, import_react23.useRef)();
    var startPullDownRefreshAsync = (0, import_react23.useCallback)(function(duration) {
        return new Promise(function(resolve, reject) {
            try {
                timer.current && clearTimeout(timer.current);
                (0, import_taro16.startPullDownRefresh)({
                    success: function success(res) {
                        if (typeof duration === "number" && duration > 0) {
                            timer.current = setTimeout(function() {
                                stopPullDownRefreshAsync();
                                timer.current && clearTimeout(timer.current);
                            }, duration);
                        }
                        resolve(res);
                    },
                    fail: reject
                });
            } catch (e) {
                reject({
                    errMsg: "startPullDownRefresh: fail",
                    data: e
                });
            }
        });
    }, [
        timer
    ]);
    var stopPullDownRefreshAsync = (0, import_react23.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro16.stopPullDownRefresh)({
                    success: resolve,
                    fail: reject
                });
            } catch (e) {
                reject({
                    errMsg: "stopPullDownRefresh: fail",
                    data: e
                });
            }
        });
    }, []);
    return [
        startPullDownRefreshAsync,
        stopPullDownRefreshAsync
    ];
}
var useManualPullDownRefresh_default = useManualPullDownRefresh;
// node_modules/taro-hooks/es/useToast/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro17 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react24 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useToast(option) {
    var initialOption = (0, import_react24.useRef)();
    (0, import_react24.useEffect)(function() {
        initialOption.current = option;
    }, [
        option
    ]);
    var showToastAsync = (0, import_react24.useCallback)(function(option2) {
        return new Promise(function(resolve, reject) {
            try {
                if (!option2 && !initialOption.current) {
                    console.warn("please provide a option");
                    return reject(new Error("please provide a option"));
                } else {
                    var options = Object.assign({}, initialOption.current || {}, option2 || {});
                    if (!options.title) {
                        reject({
                            errMsg: "showToast: fail"
                        });
                    } else {
                        (0, import_taro17.showToast)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, options), {}, {
                            success: resolve,
                            fail: reject
                        })).catch(reject);
                    }
                }
            } catch (e) {
                reject(e);
            }
        });
    }, [
        initialOption
    ]);
    var hideToastAsync = (0, import_react24.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro17.hideToast)({
                    success: resolve,
                    fail: reject
                });
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    return [
        showToastAsync,
        hideToastAsync
    ];
}
var useToast_default = useToast;
// node_modules/taro-hooks/es/useModal/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro18 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react25 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useModal(option) {
    var initialOption = (0, import_react25.useRef)();
    (0, import_react25.useEffect)(function() {
        initialOption.current = option;
    }, [
        option
    ]);
    var showModalAsync = (0, import_react25.useCallback)(function(option2) {
        return new Promise(function(resolve, reject) {
            try {
                if (!option2 && !initialOption.current) {
                    console.warn("please provide a option");
                    return reject(new Error("please provide a option"));
                } else {
                    var options = Object.assign({}, initialOption.current || {}, option2 || {});
                    (0, import_taro18.showModal)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, options), {}, {
                        success: resolve,
                        fail: reject
                    })).catch(reject);
                }
            } catch (e) {
                reject(e);
            }
        });
    }, [
        initialOption
    ]);
    return [
        showModalAsync
    ];
}
var useModal_default = useModal;
// node_modules/taro-hooks/es/useLoading/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro19 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react26 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useLoading(option) {
    var initialOption = (0, import_react26.useRef)();
    (0, import_react26.useEffect)(function() {
        initialOption.current = option;
    }, [
        option
    ]);
    var showLoadingAsync = (0, import_react26.useCallback)(function(option2) {
        return new Promise(function(resolve, reject) {
            try {
                if (!option2 && !initialOption.current) {
                    console.warn("please provide a option");
                    return reject(new Error("please provide a option"));
                } else {
                    var options = Object.assign({}, initialOption.current || {}, option2 || {});
                    if (!options.title) {
                        reject({
                            errMsg: "showLoading: fail"
                        });
                    } else {
                        (0, import_taro19.showLoading)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, options), {}, {
                            success: resolve,
                            fail: reject
                        })).catch(reject);
                    }
                }
            } catch (e) {
                reject(e);
            }
        });
    }, [
        initialOption
    ]);
    var hideLoadingAsync = (0, import_react26.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro19.hideLoading)({
                    success: resolve,
                    fail: reject
                });
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    return [
        showLoadingAsync,
        hideLoadingAsync
    ];
}
var useLoading_default = useLoading;
// node_modules/taro-hooks/es/useActionSheet/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
// node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
// node_modules/taro-hooks/es/useActionSheet/index.js
var import_taro20 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react27 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var _excluded = [
    "onActionItemTap"
];
function useActionSheet(option) {
    var initialOption = (0, import_react27.useRef)();
    (0, import_react27.useEffect)(function() {
        initialOption.current = option;
    }, [
        option
    ]);
    var showActionSheetAsync = (0, import_react27.useCallback)(function(option2) {
        return new Promise(function(resolve, reject) {
            try {
                if (!option2 && !initialOption.current) {
                    console.warn("please provide a option");
                    return reject(new Error("please provide a option"));
                } else {
                    var _Object$assign = Object.assign({}, initialOption.current || {}, option2 || {}), _onActionItemTap = _Object$assign.onActionItemTap, options = _objectWithoutProperties(_Object$assign, _excluded);
                    if (!options.itemList) {
                        reject({
                            errMsg: "showActionSheet: fail"
                        });
                    } else {
                        (0, import_taro20.showActionSheet)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, options), {}, {
                            success: function success(res) {
                                if (_onActionItemTap) {
                                    var _tapIndex = res.tapIndex;
                                    _onActionItemTap(_tapIndex, options.itemList.find(function(v, i) {
                                        return i === _tapIndex;
                                    }));
                                }
                                resolve(res);
                            },
                            fail: reject
                        })).catch(reject);
                    }
                }
            } catch (e) {
                reject(e);
            }
        });
    }, [
        initialOption
    ]);
    return [
        showActionSheetAsync
    ];
}
var useActionSheet_default = useActionSheet;
// node_modules/taro-hooks/es/useNavigationBar/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro21 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react28 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useNavigationBar(option) {
    var _initialOption$curren2;
    var initialOption = (0, import_react28.useRef)({});
    var env = useEnv_default();
    (0, import_react28.useEffect)(function() {
        if (option && env && env !== ENV_TYPE.WEB) {
            var PromiseArray = [];
            var loading = option.loading, _title = option.title, frontColor = option.frontColor, backgroundColor = option.backgroundColor, animation = option.animation, _hideHomeButton = option.hideHomeButton;
            loading && PromiseArray.push(toggleLoadingAsync());
            _title && PromiseArray.push(setTitleAsync(_title));
            _hideHomeButton && PromiseArray.push(hideHomeButtonAsync());
            frontColor && backgroundColor && PromiseArray.push(setColorAsync({
                backgroundColor,
                frontColor,
                animation
            }));
            PromiseArray.length && Promise.all(PromiseArray).finally(function() {
                initialOption.current = option;
            });
        }
    }, [
        option,
        env
    ]);
    var toggleLoadingAsync = (0, import_react28.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            try {
                var _initialOption$curren;
                var _Action = import_taro21.showNavigationBarLoading, _option = {
                    loading: true
                };
                if ((_initialOption$curren = initialOption.current) === null || _initialOption$curren === void 0 ? void 0 : _initialOption$curren.loading) {
                    _Action = import_taro21.hideNavigationBarLoading;
                    _option = (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, initialOption.current), {}, {
                        loading: false
                    });
                }
                _Action({
                    success: function success(res) {
                        initialOption.current = _option;
                        resolve(res);
                    },
                    fail: reject
                });
            } catch (e) {
                reject(e);
            }
        });
    }, [
        initialOption
    ]);
    var setTitleAsync = (0, import_react28.useCallback)(function(title) {
        return new Promise(function(resolve, reject) {
            try {
                if (!title) {
                    throw new Error("you must provide a title");
                }
                (0, import_taro21.setNavigationBarTitle)({
                    title,
                    success: function success(res) {
                        initialOption.current = (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, initialOption.current), {}, {
                            title
                        });
                        resolve(res);
                    }
                }).catch(reject);
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    var setColorAsync = (0, import_react28.useCallback)(function(option2) {
        return new Promise(function(resolve, reject) {
            try {
                if (!option2.backgroundColor || !option2.frontColor) {
                    throw new Error("you must provide backgroundColor or frontColor");
                }
                (0, import_taro21.setNavigationBarColor)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, option2), {}, {
                    success: function success(res) {
                        var frontColor = option2.frontColor, backgroundColor = option2.backgroundColor, _option$animation = option2.animation, animation = _option$animation === void 0 ? false : _option$animation;
                        initialOption.current = (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, initialOption.current), {}, {
                            frontColor,
                            backgroundColor,
                            animation
                        });
                        resolve(res);
                    },
                    fail: reject
                }));
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    var hideHomeButtonAsync = (0, import_react28.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro21.hideHomeButton)({
                    success: function success(res) {
                        initialOption.current = (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, initialOption.current), {}, {
                            hideHomeButton: true
                        });
                        resolve(res);
                    },
                    fail: reject
                });
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    return [
        ((_initialOption$curren2 = initialOption.current) === null || _initialOption$curren2 === void 0 ? void 0 : _initialOption$curren2.loading) || false,
        {
            toggleLoading: toggleLoadingAsync,
            hideHomeButton: hideHomeButtonAsync,
            setTitle: setTitleAsync,
            setColor: setColorAsync
        }
    ];
}
var useNavigationBar_default = useNavigationBar;
// node_modules/taro-hooks/es/useAPICheck/index.js
var import_taro22 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react29 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useAPICheck(scheme) {
    var env = useEnv_default();
    var _useState = (0, import_react29.useState)(false), _useState2 = _slicedToArray(_useState, 2), apiValid = _useState2[0], setApiValid = _useState2[1];
    var setAPI = (0, import_react29.useCallback)(function(scheme2) {
        if (env.length && env !== ENV_TYPE.WEB) {
            setApiValid((0, import_taro22.canIUse)(scheme2));
        }
    }, [
        env
    ]);
    (0, import_react29.useEffect)(function() {
        setAPI(scheme);
    }, [
        env
    ]);
    return [
        apiValid,
        setAPI
    ];
}
var useAPICheck_default = useAPICheck;
// node_modules/taro-hooks/es/useUpdateManager/index.js
var import_taro23 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react30 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useUpdateManager(_ref) {
    var onCheckForUpdate = _ref.onCheckForUpdate, onUpdateReady = _ref.onUpdateReady, onUpdateFailed = _ref.onUpdateFailed;
    var env = useEnv_default();
    var updateManager = (0, import_react30.useRef)();
    (0, import_react30.useEffect)(function() {
        if (env === ENV_TYPE.WEAPP) {
            var updateManagerInstance = (0, import_taro23.getUpdateManager)();
            addEventListener(updateManagerInstance);
            updateManager.current = updateManagerInstance;
        }
    }, [
        env
    ]);
    var addEventListener = (0, import_react30.useCallback)(function(updateManagerInstance) {
        onCheckForUpdate && updateManagerInstance.onCheckForUpdate(function(result) {
            return onCheckForUpdate(updateManagerInstance, result);
        });
        onUpdateReady && updateManagerInstance.onUpdateReady(function() {
            return onUpdateReady(updateManagerInstance);
        });
        onUpdateFailed && updateManagerInstance.onUpdateFailed(function() {
            return onUpdateFailed(updateManagerInstance);
        });
    }, []);
    return updateManager.current;
}
var useUpdateManager_default = useUpdateManager;
// node_modules/taro-hooks/es/useLaunchOptions/index.js
var import_react31 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var import_taro24 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
function useLaunchOptions() {
    var env = useEnv_default();
    var _useState = (0, import_react31.useState)(), _useState2 = _slicedToArray(_useState, 2), launchOptions = _useState2[0], setLaunchOptions = _useState2[1];
    (0, import_react31.useEffect)(function() {
        if (env && env === ENV_TYPE.WEAPP) {
            setLaunchOptions((0, import_taro24.getLaunchOptionsSync)());
        }
    }, [
        env
    ]);
    return launchOptions;
}
var useLaunchOptions_default = useLaunchOptions;
// node_modules/taro-hooks/es/useAuthorize/index.js
var import_react32 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var import_taro25 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
function useAuthorize(option) {
    var env = useEnv_default();
    var visible = useVisible_default();
    var _useState = (0, import_react32.useState)({}), _useState2 = _slicedToArray(_useState, 2), authSetting = _useState2[0], setAuthSetting = _useState2[1];
    var _useState3 = (0, import_react32.useState)({}), _useState4 = _slicedToArray(_useState3, 2), subscriptionsSetting = _useState4[0], setSubscriptionsSetting = _useState4[1];
    var _useState5 = (0, import_react32.useState)({}), _useState6 = _slicedToArray(_useState5, 2), miniprogramAuthSetting = _useState6[0], setMiniprogramAuthSetting = _useState6[1];
    (0, import_react32.useEffect)(function() {
        if (env === ENV_TYPE.WEAPP) {
            getSettingAsync();
        }
    }, [
        env,
        visible
    ]);
    var getSettingAsync = (0, import_react32.useCallback)(_asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
        var _ref2, _ref2$withSubscriptio, _withSubscriptions, _yield, _yield$authSetting, totalAuthSetting, totalSubscriptionsSetting, totalMiniprogramAuthSetting;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
            while(1){
                switch(_context.prev = _context.next){
                    case 0:
                        _context.prev = 0;
                        _ref2 = option || {}, _ref2$withSubscriptio = _ref2.withSubscriptions, _withSubscriptions = _ref2$withSubscriptio === void 0 ? false : _ref2$withSubscriptio;
                        _context.next = 4;
                        return (0, import_taro25.getSetting)({
                            withSubscriptions: _withSubscriptions
                        });
                    case 4:
                        _yield = _context.sent;
                        _yield$authSetting = _yield.authSetting;
                        totalAuthSetting = _yield$authSetting === void 0 ? {} : _yield$authSetting;
                        totalSubscriptionsSetting = _yield.subscriptionsSetting;
                        totalMiniprogramAuthSetting = _yield.miniprogramAuthSetting;
                        setAuthSetting(totalAuthSetting);
                        if (_withSubscriptions && totalSubscriptionsSetting) {
                            setSubscriptionsSetting(totalSubscriptionsSetting);
                        }
                        totalMiniprogramAuthSetting && setMiniprogramAuthSetting(totalMiniprogramAuthSetting);
                        _context.next = 17;
                        break;
                    case 14:
                        _context.prev = 14;
                        _context.t0 = _context["catch"](0);
                        console.log(_context.t0);
                    case 17:
                    case "end":
                        return _context.stop();
                }
            }
        }, _callee, null, [
            [
                0,
                14
            ]
        ]);
    })), [
        option
    ]);
    var openSettingAsync = (0, import_react32.useCallback)(function() {
        var withSubscriptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        return new Promise(function(resolve, reject) {
            if (env === ENV_TYPE.WEAPP) {
                try {
                    (0, import_taro25.openSetting)({
                        withSubscriptions,
                        success: function success(res) {
                            var totalAuthSetting = res.authSetting, totalSubscriptionsSetting = res.subscriptionsSetting;
                            if (withSubscriptions && totalSubscriptionsSetting) {
                                setSubscriptionsSetting(totalSubscriptionsSetting);
                            }
                            setAuthSetting(totalAuthSetting);
                            resolve(res);
                        },
                        fail: reject
                    }).catch(reject);
                } catch (e) {
                    reject({
                        errMsg: e
                    });
                }
            } else {
                reject({
                    errMsg: "openSetting:fail"
                });
            }
        });
    }, [
        env
    ]);
    var authorizeAysnc = (0, import_react32.useCallback)(function(scope) {
        var miniprogram = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        return new Promise(function(resolve, reject) {
            if (!scope || env === ENV_TYPE.WEAPP) {
                try {
                    if (miniprogram && typeOf(wx, "Object")) {
                        wx.authorizeForMiniProgram({
                            scope,
                            success: resolve,
                            fail: reject
                        });
                    } else {
                        (0, import_taro25.authorize)({
                            scope,
                            success: resolve,
                            fail: reject
                        }).catch(reject);
                    }
                } catch (e) {
                    reject(e);
                }
            } else {
                reject({
                    errMsg: "authorize:fail"
                });
            }
        });
    }, [
        authSetting,
        miniprogramAuthSetting
    ]);
    return [
        {
            authSetting,
            subscriptionsSetting,
            miniprogramAuthSetting
        },
        {
            openSetting: openSettingAsync,
            authorize: authorizeAysnc
        }
    ];
}
var useAuthorize_default = useAuthorize;
// node_modules/taro-hooks/es/useUserInfo/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro26 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react33 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var INITOPTION = {
    withCredentials: false,
    lang: "en"
};
function useUserInfo() {
    var _useState = (0, import_react33.useState)(), _useState2 = _slicedToArray(_useState, 2), userInfo = _useState2[0], setUserInfo = _useState2[1];
    var env = useEnv_default();
    var combineUserInfo = (0, import_react33.useCallback)(function(info) {
        var _ref = info || {}, userInfo2 = _ref.userInfo, rawData = _ref.rawData, signature = _ref.signature, encryptedData = _ref.encryptedData, iv = _ref.iv, cloudID = _ref.cloudID;
        var painInfo = Object.fromEntries(Object.entries({
            rawData,
            signature,
            encryptedData,
            iv,
            cloudID
        }).filter(function(v) {
            return v[1];
        }));
        var finallyUserInfo = (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, userInfo2), painInfo);
        setUserInfo(finallyUserInfo);
        return finallyUserInfo;
    }, []);
    var getUserInfoAsync = (0, import_react33.useCallback)(function() {
        var option = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : INITOPTION;
        return new Promise(function(resolve, reject) {
            if (env === ENV_TYPE.WEAPP) {
                try {
                    (0, import_taro26.getUserInfo)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, option), {}, {
                        success: function success(res) {
                            var info = combineUserInfo(res);
                            resolve(info);
                        },
                        fail: reject
                    })).catch(function(e) {
                        return reject({
                            errMsg: "getUserInfo: fail",
                            data: e
                        });
                    });
                } catch (e) {
                    reject({
                        errMsg: "getUserInfo: fail",
                        data: e
                    });
                }
            } else {
                reject({
                    errMsg: "getUserInfo: fail"
                });
            }
        });
    }, [
        combineUserInfo,
        env
    ]);
    var getUserProfileAsync = (0, import_react33.useCallback)(function(option) {
        return new Promise(function(resolve, reject) {
            if (env === ENV_TYPE.WEAPP) {
                try {
                    (0, import_taro26.getUserProfile)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, option), {}, {
                        success: function success(res) {
                            var info = combineUserInfo(res);
                            resolve(info);
                        },
                        fail: reject
                    })).catch(reject);
                } catch (e) {
                    reject({
                        errMsg: "getUserProfile: fail",
                        data: e
                    });
                }
            } else {
                reject({
                    errMsg: "getUserProfile: fail"
                });
            }
        });
    }, [
        combineUserInfo,
        env
    ]);
    return [
        userInfo,
        {
            getUserInfo: getUserInfoAsync,
            getUserProfile: getUserProfileAsync
        }
    ];
}
var useUserInfo_default = useUserInfo;
// node_modules/taro-hooks/es/useAccountInfo/index.js
var import_taro27 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react34 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useAccountInfo() {
    var _useState = (0, import_react34.useState)(), _useState2 = _slicedToArray(_useState, 2), accountInfo = _useState2[0], setAccountInfo = _useState2[1];
    (0, import_react34.useEffect)(function() {
        getAccountInfo();
    }, []);
    var getAccountInfo = (0, import_react34.useCallback)(function() {
        try {
            var info = (0, import_taro27.getAccountInfoSync)();
            setAccountInfo(info);
        } catch (e) {
            setAccountInfo({});
        }
    }, []);
    return accountInfo;
}
var useAccountInfo_default = useAccountInfo;
// node_modules/taro-hooks/es/useLogin/index.js
var import_taro28 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react35 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useLogin() {
    var env = useEnv_default();
    var checkSessionSync = (0, import_react35.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env === ENV_TYPE.WEAPP) {
                (0, import_taro28.checkSession)({
                    success: resolve,
                    fail: reject
                }).catch(reject);
            } else {
                reject({
                    errMsg: "checkSession:fail"
                });
            }
        });
    }, [
        env
    ]);
    var loginSync = (0, import_react35.useCallback)(function(needCheck) {
        return new Promise(function(resolve, reject) {
            if (env === ENV_TYPE.WEAPP) {
                var loginAction = function loginAction2() {
                    (0, import_taro28.login)({
                        success: function success(res) {
                            return resolve(res.code);
                        },
                        fail: reject
                    }).catch(reject);
                };
                try {
                    if (needCheck) {
                        checkSessionSync().then(function() {
                            loginAction();
                        }).catch(reject);
                    } else {
                        loginAction();
                    }
                } catch (e) {
                    reject({
                        errMsg: "login:fail",
                        data: e
                    });
                }
            } else {
                reject({
                    errMsg: "login:fail"
                });
            }
        });
    }, [
        env,
        checkSessionSync
    ]);
    return [
        loginSync,
        checkSessionSync
    ];
}
var useLogin_default = useLogin;
// node_modules/taro-hooks/es/useRequestSubscribeMessage/index.js
var import_taro29 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react36 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var _excluded2 = [
    "errMsg"
];
function useRequestSubscribeMessage() {
    var env = useEnv_default();
    var requestSubscribeMessageAsync = (0, import_react36.useCallback)(function(tmplIds) {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP || !(tmplIds === null || tmplIds === void 0 ? void 0 : tmplIds.length)) {
                reject({
                    errMsg: "requestSubscribeMessage: fail"
                });
            } else {
                try {
                    (0, import_taro29.requestSubscribeMessage)({
                        tmplIds,
                        success: function success(_ref) {
                            var errMsg = _ref.errMsg, result = _objectWithoutProperties(_ref, _excluded2);
                            return resolve(result);
                        },
                        fail: reject
                    }).catch(reject);
                } catch (e) {
                    reject({
                        errMsg: "requestSubscribeMessage: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    return [
        requestSubscribeMessageAsync
    ];
}
var useRequestSubscribeMessage_default = useRequestSubscribeMessage;
// node_modules/taro-hooks/es/useChooseAddress/index.js
var import_taro30 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react37 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var _excluded3 = [
    "errMsg"
];
function useChooseAddress() {
    var env = useEnv_default();
    var chooseAddressAsync = (0, import_react37.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP && env !== ENV_TYPE.WEB || typeOf(wx, "Undefined")) {
                reject({
                    errMsg: "requestSubscribeMessage: fail"
                });
            } else {
                try {
                    var successMethod = function successMethod2(_ref) {
                        var errMsg = _ref.errMsg, result = _objectWithoutProperties(_ref, _excluded3);
                        return resolve(result);
                    };
                    if (env === ENV_TYPE.WEAPP) {
                        (0, import_taro30.chooseAddress)({
                            success: successMethod,
                            fail: reject
                        }).catch(reject);
                    } else {
                        wx.openAddress({
                            success: successMethod,
                            fail: reject
                        });
                    }
                } catch (e) {
                    reject({
                        errMsg: "requestSubscribeMessage: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    return [
        chooseAddressAsync
    ];
}
var useChooseAddress_default = useChooseAddress;
// node_modules/taro-hooks/es/useInvoice/index.js
var import_taro31 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react38 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var _excluded4 = [
    "errMsg"
];
function useInvoice() {
    var env = useEnv_default();
    var chooseInvoiceAsync = (0, import_react38.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "chooseInvoice: fail"
                });
            } else {
                try {
                    (0, import_taro31.chooseInvoice)({
                        success: function success(_ref) {
                            var _ref$invoiceInfo = _ref.invoiceInfo, invoiceInfo = _ref$invoiceInfo === void 0 ? "" : _ref$invoiceInfo;
                            var parseInvoiceInfo = JSON.parse(invoiceInfo);
                            resolve(parseInvoiceInfo);
                        },
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "chooseInvoice: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var chooseInvoiceTitleAsync = (0, import_react38.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "chooseInvoiceTitle: fail"
                });
            } else {
                try {
                    (0, import_taro31.chooseInvoiceTitle)({
                        success: function success(_ref2) {
                            var errMsg = _ref2.errMsg, result = _objectWithoutProperties(_ref2, _excluded4);
                            return resolve(result);
                        },
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "chooseInvoiceTitle: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    return [
        chooseInvoiceAsync,
        chooseInvoiceTitleAsync
    ];
}
var useInvoice_default = useInvoice;
// node_modules/taro-hooks/es/useWeRun/index.js
var import_taro32 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react39 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var _excluded5 = [
    "errMsg"
];
function useWeRun() {
    var env = useEnv_default();
    var getWeRunDataAsync = (0, import_react39.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "getWeRunData: fail"
                });
            } else {
                try {
                    (0, import_taro32.getWeRunData)({
                        success: function success(res) {
                            var _ref = res, errMsg = _ref.errMsg, result = _objectWithoutProperties(_ref, _excluded5);
                            resolve(result);
                        },
                        fail: reject
                    }).catch(reject);
                } catch (e) {
                    reject({
                        errMsg: "getWeRunData: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var shareToWeRunAsync = (0, import_react39.useCallback)(function(recordList) {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP || typeOf(wx, "Undefined") || !Array.isArray(recordList) || !recordList.length) {
                reject({
                    errMsg: "shareToWeRun: fail"
                });
            } else {
                try {
                    if (env === ENV_TYPE.WEAPP) {
                        wx.shareToWeRun({
                            recordList,
                            success: resolve,
                            fail: reject
                        }).catch(reject);
                    }
                } catch (e) {
                    reject({
                        errMsg: "shareToWeRun: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    return [
        getWeRunDataAsync,
        shareToWeRunAsync
    ];
}
var useWeRun_default = useWeRun;
// node_modules/taro-hooks/es/useMenuButtonBoundingClientRect/index.js
var import_taro33 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react40 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useMenuButtonBoundingClientRect() {
    var env = useEnv_default();
    var _useState = (0, import_react40.useState)(), _useState2 = _slicedToArray(_useState, 2), rect = _useState2[0], setRect = _useState2[1];
    (0, import_react40.useEffect)(function() {
        if (env && env === ENV_TYPE.WEAPP) {
            setRect((0, import_taro33.getMenuButtonBoundingClientRect)());
        }
    }, [
        env
    ]);
    return rect;
}
var useMenuButtonBoundingClientRect_default = useMenuButtonBoundingClientRect;
// node_modules/taro-hooks/es/useTopBarText/index.js
var import_taro34 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react41 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useTopBarText(text) {
    var env = useEnv_default();
    var setTopBarTextAsync = (0, import_react41.useCallback)(function(topBarText) {
        return new Promise(function(resolve, reject) {
            if (text && env === ENV_TYPE.WEAPP) {
                try {
                    (0, import_taro34.setTopBarText)({
                        text: topBarText,
                        success: resolve,
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "setTopBarText: fail",
                        data: e
                    });
                }
            } else {
                reject({
                    errMsg: "setTopBarText: fail"
                });
            }
        });
    }, [
        env
    ]);
    (0, import_react41.useEffect)(function() {
        text && setTopBarTextAsync(text);
    }, [
        env,
        text
    ]);
    return [
        setTopBarTextAsync
    ];
}
var useTopBarText_default = useTopBarText;
// node_modules/taro-hooks/es/useNetworkType/index.js
var import_taro35 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react42 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var NetworkType;
(function(NetworkType2) {
    NetworkType2["wifi"] = "wifi";
    NetworkType2["2g"] = "2g";
    NetworkType2["3g"] = "3g";
    NetworkType2["4g"] = "4g";
    NetworkType2["5g"] = "5g";
    NetworkType2["unknown"] = "unknown";
    NetworkType2["none"] = "none";
})(NetworkType || (NetworkType = {}));
function useNetworkType() {
    var _useState = (0, import_react42.useState)(), _useState2 = _slicedToArray(_useState, 2), type = _useState2[0], setType = _useState2[1];
    var env = useEnv_default();
    (0, import_react42.useEffect)(function() {
        if (!env) return;
        (0, import_taro35.getNetworkType)().then(function(_ref) {
            var networkType = _ref.networkType;
            return setType(networkType);
        });
        (0, import_taro35.onNetworkStatusChange)(listenNetworkStatusChange);
        return function() {
            env !== ENV_TYPE.WEB && (0, import_taro35.offNetworkStatusChange)(listenNetworkStatusChange);
        };
    }, [
        env
    ]);
    var listenNetworkStatusChange = (0, import_react42.useCallback)(function(_ref2) {
        var networkType = _ref2.networkType;
        setType(networkType);
    }, [
        setType
    ]);
    return type;
}
var useNetworkType_default = useNetworkType;
// node_modules/taro-hooks/es/useOnline/index.js
var import_react43 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useOnline() {
    var _useState = (0, import_react43.useState)(), _useState2 = _slicedToArray(_useState, 2), online = _useState2[0], changeOnline = _useState2[1];
    var networkType = useNetworkType_default();
    (0, import_react43.useEffect)(function() {
        if (networkType && networkType !== NetworkType.none) {
            changeOnline(true);
        } else {
            changeOnline(false);
        }
    }, [
        networkType
    ]);
    return online;
}
var useOnline_default = useOnline;
// node_modules/taro-hooks/es/useRequest/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_typeof)();
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_react51 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var import_taro36 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
// node_modules/taro-hooks/es/useRequest/useAsync.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_classCallCheck)();
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_createClass)();
var import_react48 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
// node_modules/taro-hooks/es/useRequest/utils/cache.js
var cache = /* @__PURE__ */ new Map();
var setCache = function setCache2(key, cacheTime, data) {
    var currentCache = cache.get(key);
    if (currentCache === null || currentCache === void 0 ? void 0 : currentCache.timer) {
        clearTimeout(currentCache.timer);
    }
    var timer = void 0;
    if (cacheTime > -1) {
        timer = setTimeout(function() {
            cache.delete(key);
        }, cacheTime);
    }
    cache.set(key, {
        data,
        timer,
        startTime: new Date().getTime()
    });
};
var getCache = function getCache2(key) {
    var currentCache = cache.get(key);
    return {
        data: currentCache === null || currentCache === void 0 ? void 0 : currentCache.data,
        startTime: currentCache === null || currentCache === void 0 ? void 0 : currentCache.startTime
    };
};
// node_modules/taro-hooks/es/useRequest/utils/limit.js
function limit(fn, timespan) {
    var pending = false;
    return function() {
        if (pending) return;
        pending = true;
        fn.apply(void 0, arguments);
        setTimeout(function() {
            pending = false;
        }, timespan);
    };
}
// node_modules/taro-hooks/es/useRequest/utils/usePersistFn.js
var import_react44 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function usePersistFn(fn) {
    var ref = (0, import_react44.useRef)(function() {
        throw new Error("Cannot call an event handler while rendering.");
    });
    ref.current = fn;
    var persist = (0, import_react44.useCallback)(function() {
        var refFn = ref.current;
        if (refFn) {
            return refFn.apply(void 0, arguments);
        }
    }, [
        ref
    ]);
    if (typeof fn === "function") {
        return persist;
    }
    return void 0;
}
var usePersistFn_default = usePersistFn;
// node_modules/taro-hooks/es/useRequest/utils/useUpdateEffect.js
var import_react45 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var useUpdateEffect = function useUpdateEffect2(effect, deps) {
    var isMounted = (0, import_react45.useRef)(false);
    (0, import_react45.useEffect)(function() {
        return function() {
            isMounted.current = false;
        };
    }, []);
    (0, import_react45.useEffect)(function() {
        if (!isMounted.current) {
            isMounted.current = true;
        } else {
            return effect();
        }
    }, deps);
};
var useUpdateEffect_default = useUpdateEffect;
// node_modules/taro-hooks/es/useRequest/utils/pageFocus.js
var import_react46 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function usePageFocus() {
    var _useState = (0, import_react46.useState)([]), _useState2 = _slicedToArray(_useState, 2), listeners = _useState2[0], setListeners = _useState2[1];
    var visible = useVisible_default();
    var online = useOnline_default();
    var subscribe = (0, import_react46.useCallback)(function(listener) {
        setListeners([].concat(_toConsumableArray(listeners), [
            listener
        ]));
        return function unsubscribe() {
            var prevListeners = _toConsumableArray(listeners);
            var index = prevListeners.indexOf(listener);
            prevListeners.splice(index, 1);
            setListeners(_toConsumableArray(prevListeners));
        };
    }, [
        listeners,
        setListeners
    ]);
    var revalidate = (0, import_react46.useCallback)(function() {
        if (!visible || !online) return;
        for(var i = 0; i < listeners.length; i++){
            var listener = listeners[i];
            listener();
        }
    }, [
        visible,
        online,
        listeners
    ]);
    (0, import_react46.useEffect)(function() {
        revalidate();
    }, [
        visible,
        online
    ]);
    return subscribe;
}
var pageFocus_default = usePageFocus;
// node_modules/taro-hooks/es/useRequest/utils/pageVisible.js
var import_react47 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function usePageVisible() {
    var _useState = (0, import_react47.useState)([]), _useState2 = _slicedToArray(_useState, 2), listeners = _useState2[0], setListeners = _useState2[1];
    var visible = useVisible_default();
    var subscribe = (0, import_react47.useCallback)(function(listener) {
        setListeners([].concat(_toConsumableArray(listeners), [
            listener
        ]));
        return function unsubscribe() {
            var prevListeners = _toConsumableArray(listeners);
            var index = prevListeners.indexOf(listener);
            prevListeners.splice(index, 1);
            setListeners(_toConsumableArray(prevListeners));
        };
    }, [
        listeners,
        setListeners
    ]);
    var revalidate = (0, import_react47.useCallback)(function() {
        if (!visible) return;
        for(var i = 0; i < listeners.length; i++){
            var listener = listeners[i];
            listener();
        }
    }, [
        visible,
        listeners
    ]);
    (0, import_react47.useEffect)(function() {
        revalidate();
    }, [
        visible
    ]);
    return subscribe;
}
var pageVisible_default = usePageVisible;
// node_modules/taro-hooks/es/useRequest/useAsync.js
var DEFAULT_KEY = "AHOOKS_USE_REQUEST_DEFAULT_KEY";
var Fetch = function() {
    function Fetch2(service, config, subscribe, initState2, addPollingListener, addRefreshListener) {
        (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._classCallCheck)(this, Fetch2);
        this.config = void 0;
        this.service = void 0;
        this.count = 0;
        this.pollingWhenVisibleFlag = false;
        this.pollingTimer = void 0;
        this.loadingDelayTimer = void 0;
        this.subscribe = void 0;
        this.unsubscribe = [];
        this.that = this;
        this.state = {
            loading: false,
            params: [],
            data: void 0,
            error: void 0,
            run: this.run.bind(this.that),
            mutate: this.mutate.bind(this.that),
            refresh: this.refresh.bind(this.that),
            cancel: this.cancel.bind(this.that),
            unmount: this.unmount.bind(this.that)
        };
        this.debounceRun = void 0;
        this.throttleRun = void 0;
        this.limitRefresh = void 0;
        this.service = service;
        this.config = config;
        this.subscribe = subscribe;
        if (initState2) {
            this.state = (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, this.state), initState2);
        }
        this.debounceRun = this.config.debounceInterval ? debounce_default(this._run, this.config.debounceInterval) : void 0;
        this.throttleRun = this.config.throttleInterval ? throttle_default(this._run, this.config.throttleInterval) : void 0;
        this.limitRefresh = limit(this.refresh.bind(this), this.config.focusTimespan);
        if (this.config.pollingInterval && addPollingListener) {
            this.unsubscribe.push(addPollingListener(this.rePolling.bind(this)));
        }
        if (this.config.refreshOnWindowFocus && addRefreshListener) {
            this.unsubscribe.push(addRefreshListener(this.limitRefresh.bind(this)));
        }
    }
    (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._createClass)(Fetch2, [
        {
            key: "setState",
            value: function setState() {
                var s = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                this.state = (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, this.state), s);
                this.subscribe(this.state);
            }
        },
        {
            key: "_run",
            value: function _run() {
                var _this = this;
                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
                    args[_key] = arguments[_key];
                }
                if (this.pollingTimer) {
                    clearTimeout(this.pollingTimer);
                }
                if (this.loadingDelayTimer) {
                    clearTimeout(this.loadingDelayTimer);
                }
                this.count += 1;
                var currentCount = this.count;
                this.setState({
                    loading: !this.config.loadingDelay,
                    params: args
                });
                if (this.config.loadingDelay) {
                    this.loadingDelayTimer = setTimeout(function() {
                        _this.setState({
                            loading: true
                        });
                    }, this.config.loadingDelay);
                }
                return this.service.apply(this, args).then(function(res) {
                    if (currentCount !== _this.count) {
                        return new Promise(function() {});
                    }
                    if (_this.loadingDelayTimer) {
                        clearTimeout(_this.loadingDelayTimer);
                    }
                    var formattedResult = _this.config.formatResult ? _this.config.formatResult(res) : res;
                    _this.setState({
                        data: formattedResult,
                        error: void 0,
                        loading: false
                    });
                    if (_this.config.onSuccess) {
                        _this.config.onSuccess(formattedResult, args);
                    }
                    return formattedResult;
                }).catch(function(error) {
                    if (currentCount !== _this.count) {
                        return new Promise(function() {});
                    }
                    if (_this.loadingDelayTimer) {
                        clearTimeout(_this.loadingDelayTimer);
                    }
                    _this.setState({
                        data: void 0,
                        error,
                        loading: false
                    });
                    if (_this.config.onError) {
                        _this.config.onError(error, args);
                    }
                    if (_this.config.throwOnError) {
                        throw error;
                    }
                    console.error(error);
                    return Promise.reject("useRequest has caught the exception, if you need to handle the exception yourself, you can set options.throwOnError to true.");
                }).finally(function() {
                    if (currentCount === _this.count) {
                        if (_this.config.pollingInterval) {
                            _this.pollingTimer = setTimeout(function() {
                                _this._run.apply(_this, args);
                            }, _this.config.pollingInterval);
                        }
                    }
                });
            }
        },
        {
            key: "run",
            value: function run() {
                if (this.debounceRun) {
                    this.debounceRun.apply(this, arguments);
                    return Promise.resolve(null);
                }
                if (this.throttleRun) {
                    this.throttleRun.apply(this, arguments);
                    return Promise.resolve(null);
                }
                return this._run.apply(this, arguments);
            }
        },
        {
            key: "cancel",
            value: function cancel() {
                if (this.debounceRun) {
                    this.debounceRun.cancel();
                }
                if (this.throttleRun) {
                    this.throttleRun.cancel();
                }
                if (this.loadingDelayTimer) {
                    clearTimeout(this.loadingDelayTimer);
                }
                if (this.pollingTimer) {
                    clearTimeout(this.pollingTimer);
                }
                this.pollingWhenVisibleFlag = false;
                this.count += 1;
                this.setState({
                    loading: false
                });
            }
        },
        {
            key: "refresh",
            value: function refresh() {
                return this.run.apply(this, _toConsumableArray(this.state.params));
            }
        },
        {
            key: "rePolling",
            value: function rePolling() {
                if (this.pollingWhenVisibleFlag) {
                    this.pollingWhenVisibleFlag = false;
                    this.refresh();
                }
            }
        },
        {
            key: "mutate",
            value: function mutate(data) {
                if (typeof data === "function") {
                    this.setState({
                        data: data(this.state.data) || {}
                    });
                } else {
                    this.setState({
                        data
                    });
                }
            }
        },
        {
            key: "unmount",
            value: function unmount() {
                this.cancel();
                this.unsubscribe.forEach(function(s) {
                    s();
                });
            }
        }
    ]);
    return Fetch2;
}();
function useAsync(service, options) {
    var _options = options || {};
    var _options$refreshDeps = _options.refreshDeps, refreshDeps = _options$refreshDeps === void 0 ? [] : _options$refreshDeps, _options$manual = _options.manual, manual = _options$manual === void 0 ? false : _options$manual, _options$onSuccess = _options.onSuccess, onSuccess = _options$onSuccess === void 0 ? function() {} : _options$onSuccess, _options$onError = _options.onError, onError = _options$onError === void 0 ? function() {} : _options$onError, _options$defaultLoadi = _options.defaultLoading, defaultLoading = _options$defaultLoadi === void 0 ? false : _options$defaultLoadi, loadingDelay = _options.loadingDelay, _options$pollingInter = _options.pollingInterval, pollingInterval = _options$pollingInter === void 0 ? 0 : _options$pollingInter, _options$pollingWhenH = _options.pollingWhenHidden, pollingWhenHidden = _options$pollingWhenH === void 0 ? true : _options$pollingWhenH, _options$defaultParam = _options.defaultParams, defaultParams = _options$defaultParam === void 0 ? [] : _options$defaultParam, _options$refreshOnWin = _options.refreshOnWindowFocus, refreshOnWindowFocus = _options$refreshOnWin === void 0 ? false : _options$refreshOnWin, _options$focusTimespa = _options.focusTimespan, focusTimespan = _options$focusTimespa === void 0 ? 5e3 : _options$focusTimespa, fetchKey = _options.fetchKey, cacheKey = _options.cacheKey, _options$cacheTime = _options.cacheTime, cacheTime = _options$cacheTime === void 0 ? 5 * 60 * 1e3 : _options$cacheTime, _options$staleTime = _options.staleTime, staleTime = _options$staleTime === void 0 ? 0 : _options$staleTime, debounceInterval = _options.debounceInterval, throttleInterval = _options.throttleInterval, initialData = _options.initialData, _options$ready = _options.ready, ready = _options$ready === void 0 ? true : _options$ready, _options$throwOnError = _options.throwOnError, throwOnError = _options$throwOnError === void 0 ? false : _options$throwOnError;
    var newstFetchKey = (0, import_react48.useRef)(DEFAULT_KEY);
    var servicePersist = usePersistFn_default(service);
    var onSuccessPersist = usePersistFn_default(onSuccess);
    var onErrorPersist = usePersistFn_default(onError);
    var fetchKeyPersist = usePersistFn_default(fetchKey);
    var addPollingListener = pageVisible_default();
    var addRefreshListener = pageFocus_default();
    var formatResult;
    if ("formatResult" in _options) {
        formatResult = _options.formatResult;
    }
    var formatResultPersist = usePersistFn_default(formatResult);
    var config = {
        formatResult: formatResultPersist,
        onSuccess: onSuccessPersist,
        onError: onErrorPersist,
        loadingDelay,
        pollingInterval,
        pollingWhenHidden,
        refreshOnWindowFocus: !manual && refreshOnWindowFocus,
        focusTimespan,
        debounceInterval,
        throttleInterval,
        throwOnError
    };
    var subscribe = usePersistFn_default(function(key, data) {
        setFetches(function(s) {
            s[key] = data;
            return (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, s);
        });
    });
    var _useState = (0, import_react48.useState)(function() {
        if (cacheKey) {
            var _getCache;
            var cacheData = (_getCache = getCache(cacheKey)) === null || _getCache === void 0 ? void 0 : _getCache.data;
            if (cacheData) {
                newstFetchKey.current = cacheData.newstFetchKey;
                var newFetches = {};
                Object.keys(cacheData.fetches).forEach(function(key) {
                    var cacheFetch = cacheData.fetches[key];
                    var newFetch = new Fetch(servicePersist, config, subscribe.bind(null, key), {
                        loading: cacheFetch.loading,
                        params: cacheFetch.params,
                        data: cacheFetch.data,
                        error: cacheFetch.error
                    });
                    newFetches[key] = newFetch.state;
                });
                return newFetches;
            }
        }
        return {};
    }), _useState2 = _slicedToArray(_useState, 2), fetches = _useState2[0], setFetches = _useState2[1];
    var fetchesRef = (0, import_react48.useRef)(fetches);
    fetchesRef.current = fetches;
    var readyMemoryParams = (0, import_react48.useRef)();
    var run = (0, import_react48.useCallback)(function() {
        var _currentFetch;
        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){
            args[_key2] = arguments[_key2];
        }
        if (!ready) {
            readyMemoryParams.current = args;
            return;
        }
        if (fetchKeyPersist) {
            var key = fetchKeyPersist.apply(void 0, args);
            newstFetchKey.current = key === void 0 ? DEFAULT_KEY : key;
        }
        var currentFetchKey = newstFetchKey.current;
        var currentFetch = fetchesRef.current[currentFetchKey];
        if (!currentFetch) {
            var newFetch = new Fetch(servicePersist, config, subscribe.bind(null, currentFetchKey), {
                data: initialData
            }, addPollingListener, addRefreshListener);
            currentFetch = newFetch.state;
            setFetches(function(s) {
                s[currentFetchKey] = currentFetch;
                return (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, s);
            });
        }
        return (_currentFetch = currentFetch).run.apply(_currentFetch, args);
    }, [
        fetchKey,
        subscribe,
        ready
    ]);
    var runRef = (0, import_react48.useRef)(run);
    runRef.current = run;
    useUpdateEffect_default(function() {
        if (cacheKey) {
            setCache(cacheKey, cacheTime, {
                fetches,
                newstFetchKey: newstFetchKey.current
            });
        }
    }, [
        cacheKey,
        fetches
    ]);
    var hasTriggeredByReady = (0, import_react48.useRef)(false);
    useUpdateEffect_default(function() {
        if (ready) {
            if (!hasTriggeredByReady.current && readyMemoryParams.current) {
                runRef.current.apply(runRef, _toConsumableArray(readyMemoryParams.current));
            }
            hasTriggeredByReady.current = true;
        }
    }, [
        ready
    ]);
    (0, import_react48.useEffect)(function() {
        if (!manual) {
            if (Object.keys(fetches).length > 0) {
                var _getCache2;
                var cacheStartTime = cacheKey && ((_getCache2 = getCache(cacheKey)) === null || _getCache2 === void 0 ? void 0 : _getCache2.startTime) || 0;
                if (!(staleTime === -1 || new Date().getTime() - cacheStartTime <= staleTime)) {
                    Object.values(fetches).forEach(function(f) {
                        f.refresh();
                    });
                }
            } else {
                runRef.current.apply(runRef, _toConsumableArray(defaultParams));
            }
        }
    }, []);
    var reset = (0, import_react48.useCallback)(function() {
        Object.values(fetchesRef.current).forEach(function(f) {
            f.unmount();
        });
        newstFetchKey.current = DEFAULT_KEY;
        setFetches({});
        fetchesRef.current = {};
    }, [
        setFetches
    ]);
    useUpdateEffect_default(function() {
        if (!manual) {
            Object.values(fetchesRef.current).forEach(function(f) {
                f.refresh();
            });
        }
    }, _toConsumableArray(refreshDeps));
    (0, import_react48.useEffect)(function() {
        return function() {
            Object.values(fetchesRef.current).forEach(function(f) {
                f.unmount();
            });
        };
    }, []);
    var notExecutedWarning = (0, import_react48.useCallback)(function(name) {
        return function() {
            console.warn("You should't call ".concat(name, " when service not executed once."));
        };
    }, []);
    return (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({
        loading: ready && !manual || defaultLoading,
        data: initialData,
        error: void 0,
        params: [],
        cancel: notExecutedWarning("cancel"),
        refresh: notExecutedWarning("refresh"),
        mutate: notExecutedWarning("mutate")
    }, fetches[newstFetchKey.current] || {}), {}, {
        run,
        fetches,
        reset
    });
}
var useAsync_default = useAsync;
// node_modules/@babel/runtime/helpers/esm/toArray.js
function _toArray(arr) {
    return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();
}
// node_modules/taro-hooks/es/useRequest/useLoadMore.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_react49 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var _excluded6 = [
    "refreshDeps",
    "ref",
    "isNoMore",
    "threshold",
    "fetchKey"
];
function useLoadMore(service, options) {
    var _options$refreshDeps = options.refreshDeps, refreshDeps = _options$refreshDeps === void 0 ? [] : _options$refreshDeps, ref = options.ref, isNoMore = options.isNoMore, _options$threshold = options.threshold, threshold = _options$threshold === void 0 ? 100 : _options$threshold, fetchKey = options.fetchKey, restOptions = _objectWithoutProperties(options, _excluded6);
    var _useState = (0, import_react49.useState)(false), _useState2 = _slicedToArray(_useState, 2), loadingMore = _useState2[0], setLoadingMore = _useState2[1];
    var env = useEnv_default();
    (0, import_react49.useEffect)(function() {
        if (options.fetchKey) {
            console.warn("useRequest loadMore mode don't need fetchKey!");
        }
    }, []);
    var result = useAsync_default(service, (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, restOptions), {}, {
        fetchKey: function fetchKey2(d) {
            var _d$list;
            return (d === null || d === void 0 ? void 0 : (_d$list = d.list) === null || _d$list === void 0 ? void 0 : _d$list.length) || 0;
        },
        onSuccess: function onSuccess() {
            setLoadingMore(false);
            if (options.onSuccess) {
                options.onSuccess.apply(options, arguments);
            }
        }
    }));
    var data = result.data, run = result.run, params = result.params, reset = result.reset, loading = result.loading, fetches = result.fetches;
    var reload = (0, import_react49.useCallback)(function() {
        reset();
        var _params = _toArray(params), restParams = _params.slice(1);
        run.apply(void 0, [
            void 0
        ].concat(_toConsumableArray(restParams)));
    }, [
        run,
        reset,
        params
    ]);
    var reloadRef = (0, import_react49.useRef)(reload);
    reloadRef.current = reload;
    useUpdateEffect_default(function() {
        if (!options.manual) {
            reloadRef.current();
        }
    }, _toConsumableArray(refreshDeps));
    var dataGroup = (0, import_react49.useMemo)(function() {
        var listGroup = [];
        var lastNoLoadingData = data;
        Object.values(fetches).forEach(function(h) {
            var _h$data;
            if ((_h$data = h.data) === null || _h$data === void 0 ? void 0 : _h$data.list) {
                var _h$data2;
                listGroup = listGroup.concat((_h$data2 = h.data) === null || _h$data2 === void 0 ? void 0 : _h$data2.list);
            }
            if (!h.loading) {
                lastNoLoadingData = h.data;
            }
        });
        return (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, lastNoLoadingData), {}, {
            list: listGroup
        });
    }, [
        fetches,
        data
    ]);
    var noMore = isNoMore ? !loading && !loadingMore && isNoMore(dataGroup) : false;
    var loadMore = (0, import_react49.useCallback)(function() {
        if (noMore) {
            return;
        }
        setLoadingMore(true);
        var _params2 = _toArray(params), restParams = _params2.slice(1);
        run.apply(void 0, [
            dataGroup
        ].concat(_toConsumableArray(restParams)));
    }, [
        noMore,
        run,
        dataGroup,
        params
    ]);
    var scrollMethod = function scrollMethod2(event) {
        if (loading || loadingMore || !ref || !ref.current) {
            return;
        }
        if (env === ENV_TYPE.WEAPP || ref.current.scrollHeight - ref.current.scrollTop <= ref.current.clientHeight + threshold) {
            loadMore();
        }
    };
    var scrollMethodRef = (0, import_react49.useRef)(scrollMethod);
    scrollMethodRef.current = scrollMethod;
    (0, import_react49.useEffect)(function() {
        if (!ref || !ref.current) {
            return function() {};
        }
        var scrollTrigger = function scrollTrigger2(event) {
            return scrollMethodRef.current(event);
        };
        var eventName = env === ENV_TYPE.WEAPP ? "scrollToLower" : "scroll";
        ref.current.addEventListener(eventName, scrollTrigger);
        return function() {
            if (ref && ref.current) {
                ref.current.removeEventListener(eventName, scrollTrigger);
            }
        };
    }, [
        scrollMethodRef
    ]);
    return (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, result), {}, {
        data: dataGroup,
        reload,
        loading: loading && dataGroup.list.length === 0,
        loadMore,
        loadingMore,
        noMore
    });
}
var useLoadMore_default = useLoadMore;
// node_modules/taro-hooks/es/useRequest/usePaginated.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_react50 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var _excluded7 = [
    "paginated",
    "defaultPageSize",
    "refreshDeps",
    "fetchKey"
];
var _excluded22 = [
    "data",
    "params",
    "run",
    "loading"
];
function usePaginated(service, options) {
    var paginated = options.paginated, _options$defaultPageS = options.defaultPageSize, defaultPageSize = _options$defaultPageS === void 0 ? 10 : _options$defaultPageS, _options$refreshDeps = options.refreshDeps, refreshDeps = _options$refreshDeps === void 0 ? [] : _options$refreshDeps, fetchKey = options.fetchKey, restOptions = _objectWithoutProperties(options, _excluded7);
    (0, import_react50.useEffect)(function() {
        if (fetchKey) {
            console.error("useRequest pagination's fetchKey will not work!");
        }
    }, []);
    var _useAsync = useAsync_default(service, (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({
        defaultParams: [
            {
                current: 1,
                pageSize: defaultPageSize
            }
        ]
    }, restOptions)), data = _useAsync.data, params = _useAsync.params, run = _useAsync.run, loading = _useAsync.loading, rest = _objectWithoutProperties(_useAsync, _excluded22);
    var _ref = params && params[0] ? params[0] : {}, _ref$current = _ref.current, current = _ref$current === void 0 ? 1 : _ref$current, _ref$pageSize = _ref.pageSize, pageSize = _ref$pageSize === void 0 ? defaultPageSize : _ref$pageSize, _ref$sorter = _ref.sorter, sorter = _ref$sorter === void 0 ? {} : _ref$sorter, _ref$filters = _ref.filters, filters = _ref$filters === void 0 ? {} : _ref$filters;
    var runChangePaination = (0, import_react50.useCallback)(function(paginationParams) {
        var _params = _toArray(params), oldPaginationParams = _params[0], restParams = _params.slice(1);
        run.apply(void 0, [
            (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, oldPaginationParams), paginationParams)
        ].concat(_toConsumableArray(restParams)));
    }, [
        run,
        params
    ]);
    var total = (data === null || data === void 0 ? void 0 : data.total) || 0;
    var totalPage = (0, import_react50.useMemo)(function() {
        return Math.ceil(total / pageSize);
    }, [
        pageSize,
        total
    ]);
    var onChange = (0, import_react50.useCallback)(function(c, p) {
        var toCurrent = c <= 0 ? 1 : c;
        var toPageSize = p <= 0 ? 1 : p;
        var tempTotalPage = Math.ceil(total / toPageSize);
        if (toCurrent > tempTotalPage) {
            toCurrent = tempTotalPage;
        }
        runChangePaination({
            current: c,
            pageSize: p
        });
    }, [
        total,
        runChangePaination
    ]);
    var changeCurrent = (0, import_react50.useCallback)(function(c) {
        onChange(c, pageSize);
    }, [
        onChange,
        pageSize
    ]);
    var changePageSize = (0, import_react50.useCallback)(function(p) {
        onChange(current, p);
    }, [
        onChange,
        current
    ]);
    var changeCurrentRef = (0, import_react50.useRef)(changeCurrent);
    changeCurrentRef.current = changeCurrent;
    useUpdateEffect_default(function() {
        if (!options.manual) {
            changeCurrentRef.current(1);
        }
    }, _toConsumableArray(refreshDeps));
    var changeTable = (0, import_react50.useCallback)(function(p, f, s) {
        runChangePaination({
            current: p.current,
            pageSize: p.pageSize || defaultPageSize,
            filters: f,
            sorter: s
        });
    }, [
        filters,
        sorter,
        runChangePaination
    ]);
    return (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({
        loading,
        data,
        params,
        run,
        pagination: {
            current,
            pageSize,
            total,
            totalPage,
            onChange,
            changeCurrent,
            changePageSize
        },
        tableProps: {
            dataSource: (data === null || data === void 0 ? void 0 : data.list) || [],
            loading,
            onChange: changeTable,
            pagination: {
                current,
                pageSize,
                total
            }
        },
        sorter,
        filters
    }, rest);
}
var usePaginated_default = usePaginated;
// node_modules/taro-hooks/es/useRequest/index.js
var _excluded8 = [
    "url"
];
var _excluded23 = [
    "url"
];
function useRequest(service) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var finalOptions = (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, options);
    var paginated = finalOptions.paginated, loadMore = finalOptions.loadMore, requestMethod = finalOptions.requestMethod;
    var paginatedRef = (0, import_react51.useRef)(paginated);
    var loadMoreRef = (0, import_react51.useRef)(loadMore);
    if (paginatedRef.current !== paginated) {
        throw Error("You should not modify the paginated of options");
    }
    if (loadMoreRef.current !== loadMore) {
        throw Error("You should not modify the loadMore of options");
    }
    paginatedRef.current = paginated;
    loadMoreRef.current = loadMore;
    var fetchProxy = function fetchProxy2(url2) {
        var config = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        return (0, import_taro36.request)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({
            url: url2
        }, config)).then(function(res) {
            return res;
        });
    };
    var finalRequestMethod = requestMethod || fetchProxy;
    var promiseService;
    switch((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._typeof)(service)){
        case "string":
            promiseService = function promiseService2() {
                return finalRequestMethod(service);
            };
            break;
        case "object":
            var url = service.url, rest = _objectWithoutProperties(service, _excluded8);
            promiseService = function promiseService2() {
                return requestMethod ? requestMethod(service) : fetchProxy(url, rest);
            };
            break;
        default:
            promiseService = function promiseService2() {
                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
                    args[_key] = arguments[_key];
                }
                return new Promise(function(resolve, reject) {
                    var s = service.apply(void 0, args);
                    var fn = s;
                    if (!s.then) {
                        switch((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._typeof)(s)){
                            case "string":
                                fn = finalRequestMethod(s);
                                break;
                            case "object":
                                var _url = s.url, _rest = _objectWithoutProperties(s, _excluded23);
                                fn = requestMethod ? requestMethod(s) : fetchProxy(_url, _rest);
                                break;
                        }
                    }
                    fn.then(resolve).catch(reject);
                });
            };
    }
    if (loadMore) {
        return useLoadMore_default(promiseService, finalOptions);
    }
    if (paginated) {
        return usePaginated_default(promiseService, finalOptions);
    }
    return useAsync_default(promiseService, finalOptions);
}
var useRequest_default = useRequest;
// node_modules/taro-hooks/es/useFile/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro37 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react52 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useFile() {
    var upload = (0, import_react52.useCallback)(function(option) {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro37.uploadFile)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, option || {}), {}, {
                    success: resolve,
                    fail: reject
                })).catch(reject);
            } catch (e) {
                reject({
                    errMsg: "uploadFile:fail"
                });
            }
        });
    }, []);
    var download = (0, import_react52.useCallback)(function(option) {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro37.downloadFile)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, option || {}), {}, {
                    success: resolve,
                    fail: reject
                }));
            } catch (e) {
                reject({
                    errMsg: "downloadFile:fail"
                });
            }
        });
    }, []);
    return {
        upload,
        download
    };
}
var useFile_default = useFile;
// node_modules/taro-hooks/es/useBattery/index.js
var import_taro38 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react53 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var initBatteryInfo = {
    isCharging: false,
    level: 100
};
function useBattery() {
    var _useState = (0, import_react53.useState)(initBatteryInfo), _useState2 = _slicedToArray(_useState, 2), batteryInfo = _useState2[0], setBatteryInfo = _useState2[1];
    var env = useEnv_default();
    (0, import_react53.useEffect)(function() {
        console.log(env);
        if (env) {
            generateBatteryInfo();
        }
    }, [
        env
    ]);
    var generateBatteryInfo = (0, import_react53.useCallback)(_asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
        var battery, _yield$navigator$getB, isCharging, level;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
            while(1){
                switch(_context.prev = _context.next){
                    case 0:
                        _context.prev = 0;
                        battery = {};
                        if (!(env === ENV_TYPE.WEB)) {
                            _context.next = 12;
                            break;
                        }
                        if (!(navigator && "getBattery" in navigator)) {
                            _context.next = 10;
                            break;
                        }
                        _context.next = 6;
                        return navigator.getBattery();
                    case 6:
                        _yield$navigator$getB = _context.sent;
                        isCharging = _yield$navigator$getB.charging;
                        level = _yield$navigator$getB.level;
                        battery = {
                            isCharging,
                            level: level * 100
                        };
                    case 10:
                        _context.next = 15;
                        break;
                    case 12:
                        _context.next = 14;
                        return (0, import_taro38.getBatteryInfo)();
                    case 14:
                        battery = _context.sent;
                    case 15:
                        setBatteryInfo(battery);
                        _context.next = 21;
                        break;
                    case 18:
                        _context.prev = 18;
                        _context.t0 = _context["catch"](0);
                        console.log(_context.t0);
                    case 21:
                    case "end":
                        return _context.stop();
                }
            }
        }, _callee, null, [
            [
                0,
                18
            ]
        ]);
    })), [
        env
    ]);
    return batteryInfo;
}
var useBattery_default = useBattery;
// node_modules/taro-hooks/es/useVibrate/index.js
var import_taro39 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react54 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var SHORTINTERVAL = 15;
var LONGINTERVAL = 400;
var DEFAULTGAP = 200;
function useVibrate(interval, gap) {
    var timer = (0, import_react54.useRef)();
    (0, import_react54.useEffect)(function() {
        return function() {
            if (timer.current && interval) {
                stopVibrateAction();
            }
        };
    }, [
        timer,
        interval
    ]);
    var stopVibrateAction = (0, import_react54.useCallback)(function() {
        timer.current && clearTimeout(timer.current);
    }, [
        timer
    ]);
    var vibrateAction = (0, import_react54.useCallback)(function(long) {
        return new Promise(function(resolve, reject) {
            try {
                var vibrateMethod = long ? import_taro39.vibrateLong : import_taro39.vibrateShort;
                vibrateMethod({
                    success: function success(res) {
                        var computedGap = (gap || DEFAULTGAP) + (long ? LONGINTERVAL : SHORTINTERVAL);
                        if (interval) {
                            stopVibrateAction();
                            timer.current = setTimeout(function() {
                                vibrateAction(long);
                            }, computedGap);
                        }
                        resolve(res);
                    },
                    fail: reject
                }).catch(reject);
            } catch (e) {
                reject(e);
            }
        });
    }, [
        stopVibrateAction
    ]);
    return [
        vibrateAction,
        stopVibrateAction
    ];
}
var useVibrate_default = useVibrate;
// node_modules/taro-hooks/es/useMotion/index.js
var import_taro40 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react55 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useMotion(autoListen, interval) {
    var _useState = (0, import_react55.useState)({}), _useState2 = _slicedToArray(_useState, 2), motion = _useState2[0], setMotion = _useState2[1];
    var env = useEnv_default();
    (0, import_react55.useEffect)(function() {
        if (autoListen) {
            init();
        }
        return function() {
            if (autoListen) {
                removeListener(initListen);
                stopListen();
            }
        };
    }, [
        autoListen,
        interval
    ]);
    var init = (0, import_react55.useCallback)(_asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
        var result;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
            while(1){
                switch(_context.prev = _context.next){
                    case 0:
                        _context.next = 2;
                        return startListen(interval);
                    case 2:
                        result = _context.sent;
                        if (result) {
                            addListener(initListen);
                        }
                    case 4:
                    case "end":
                        return _context.stop();
                }
            }
        }, _callee);
    })), [
        interval
    ]);
    var initListen = (0, import_react55.useCallback)(function(motion2) {
        setMotion(motion2);
    }, []);
    var startListen = (0, import_react55.useCallback)(function() {
        var interval2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "normal";
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro40.startDeviceMotionListening)({
                    interval: interval2,
                    success: function success() {
                        resolve(true);
                    },
                    fail: function fail() {
                        reject(false);
                    }
                });
            } catch (e) {
                reject(false);
            }
        });
    }, []);
    var stopListen = (0, import_react55.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro40.stopDeviceMotionListening)({
                    success: function success() {
                        resolve(true);
                    },
                    fail: function fail() {
                        reject(false);
                    }
                });
            } catch (e) {
                reject(false);
            }
        });
    }, []);
    var addListener = (0, import_react55.useCallback)(function(callback) {
        try {
            (0, import_taro40.onDeviceMotionChange)(callback);
        } catch (e) {
            console.warn("add listener fail: ", e);
        }
    }, []);
    var removeListener = (0, import_react55.useCallback)(function(callback) {
        if (env !== ENV_TYPE.WEB) {
            try {
                (0, import_taro40.offDeviceMotionChange)(callback);
            } catch (e) {
                console.warn("remove listener fail: ", e);
            }
        }
    }, [
        env
    ]);
    return [
        motion,
        {
            start: startListen,
            stop: stopListen,
            addListener,
            removeListener
        }
    ];
}
var useMotion_default = useMotion;
// node_modules/taro-hooks/es/useBrightness/index.js
var import_taro41 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react56 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useBrightness(keepon) {
    var _useState = (0, import_react56.useState)(0), _useState2 = _slicedToArray(_useState, 2), brightness = _useState2[0], setBrightness = _useState2[1];
    var env = useEnv_default();
    (0, import_react56.useEffect)(function() {
        if (env) {
            getBrightness();
        }
    }, [
        env
    ]);
    var getBrightness = (0, import_react56.useCallback)(_asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
        var _yield$getScreenBrigh, _brightness;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
            while(1){
                switch(_context.prev = _context.next){
                    case 0:
                        if (!(env !== ENV_TYPE.WEB)) {
                            _context.next = 7;
                            break;
                        }
                        _context.next = 3;
                        return (0, import_taro41.getScreenBrightness)();
                    case 3:
                        _yield$getScreenBrigh = _context.sent;
                        _brightness = _yield$getScreenBrigh.value;
                        setBrightness(_brightness);
                        keepon && (0, import_taro41.setKeepScreenOn)({
                            keepScreenOn: keepon
                        });
                    case 7:
                    case "end":
                        return _context.stop();
                }
            }
        }, _callee);
    })), [
        env,
        keepon
    ]);
    var setBrightnessAsync = (0, import_react56.useCallback)(function(value) {
        return new Promise(function(resolve, reject) {
            try {
                if (env === ENV_TYPE.WEB) {
                    reject("please use hook in weapp or app");
                } else if (value < 0 || value > 1) {
                    reject("please input a valid number");
                } else {
                    (0, import_taro41.setScreenBrightness)({
                        value,
                        success: function success(res) {
                            resolve(res);
                            setBrightness(value);
                        },
                        fail: reject
                    }).catch(reject);
                }
            } catch (e) {
                reject(e);
            }
        });
    }, [
        env
    ]);
    return [
        brightness,
        setBrightnessAsync
    ];
}
var useBrightness_default = useBrightness;
// node_modules/taro-hooks/es/useLocation/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro42 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react57 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
// node_modules/taro-hooks/es/useLocation/utils.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var checkLocationAvailable = function checkLocationAvailable2() {
    return navigator && "geolocation" in navigator;
};
var polyfillCoords = function polyfillCoords2(coords) {
    return {
        horizontalAccuracy: 0,
        verticalAccuracy: 0,
        accuracy: coords.accuracy,
        altitude: coords.altitude,
        altitudeAccuracy: coords.altitudeAccuracy,
        heading: coords.heading,
        longitude: coords.longitude,
        speed: coords.speed,
        latitude: coords.latitude
    };
};
var computedPayload = function computedPayload2(options) {
    var _ref = options || {}, _ref$isHighAccuracy = _ref.isHighAccuracy, enableHighAccuracy = _ref$isHighAccuracy === void 0 ? false : _ref$isHighAccuracy, timeout = _ref.highAccuracyExpireTime;
    var payload = {
        enableHighAccuracy
    };
    if (timeout) {
        payload.timeout = timeout;
    }
    return payload;
};
var getLocation = function getLocation2(options) {
    return new Promise(function(resolve, reject) {
        if (!checkLocationAvailable()) {
            reject({
                errMsg: "geolocation is not support"
            });
        } else {
            try {
                var payload = computedPayload(options);
                navigator.geolocation.getCurrentPosition(function(geolocationCoordinates) {
                    return resolve(polyfillCoords(geolocationCoordinates.coords));
                }, function(err) {
                    return reject({
                        errMsg: err.message
                    });
                }, payload);
            } catch (e) {
                reject({
                    errMsg: e.message
                });
            }
        }
    });
};
var onLocationChange = function onLocationChange2(callback, options) {
    return new Promise(function(resolve, reject) {
        if (!checkLocationAvailable()) {
            reject({
                errMsg: "geolocation is not support"
            });
        } else {
            try {
                var payload = computedPayload(options);
                var id = navigator.geolocation.watchPosition(function(geolocationCoordinates) {
                    callback((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({
                        errMsg: "onLocationChange: ok"
                    }, polyfillCoords(geolocationCoordinates.coords)));
                }, function(err) {
                    return reject({
                        errMsg: err.message
                    });
                }, payload);
                resolve({
                    errMsg: "onLocationChange: ok",
                    listenId: id
                });
            } catch (e) {
                reject({
                    errMsg: e.message
                });
            }
        }
    });
};
var offLocationChange = function offLocationChange2(id) {
    return new Promise(function(resolve, reject) {
        if (!checkLocationAvailable()) {
            reject({
                errMsg: "geolocation is not support"
            });
        } else {
            try {
                navigator.geolocation.clearWatch(id);
                resolve({
                    errMsg: "offLocationChange: ok"
                });
            } catch (e) {
                reject({
                    errMsg: e.message
                });
            }
        }
    });
};
// node_modules/taro-hooks/es/useLocation/index.js
function useLocation(options) {
    var listenId = (0, import_react57.useRef)();
    var _useState = (0, import_react57.useState)(), _useState2 = _slicedToArray(_useState, 2), location = _useState2[0], setLocation = _useState2[1];
    var env = useEnv_default();
    (0, import_react57.useEffect)(function() {
        if (env) {
            getLocationAsync();
        }
    }, [
        env
    ]);
    var getLocationAsync = (0, import_react57.useCallback)(function(getLocationOption) {
        return new Promise(function(resolve, reject) {
            var payload = (0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, options || {}), getLocationOption || {});
            try {
                if (env === ENV_TYPE.WEB) {
                    getLocation(payload).then(function(res) {
                        setLocation(res);
                        resolve(res);
                    }).catch(reject);
                } else {
                    (0, import_taro42.getLocation)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, payload), {}, {
                        success: function success(res) {
                            setLocation(res);
                            resolve(res);
                        },
                        fail: reject
                    })).catch(reject);
                }
            } catch (e) {
                reject({
                    errMsg: e
                });
            }
        });
    }, [
        env
    ]);
    var chooseLocationAsync = (0, import_react57.useCallback)(function(chooseLocationOption) {
        return new Promise(function(resolve, reject) {
            if (env === ENV_TYPE.RN) {
                reject({
                    errMsg: "rn not support"
                });
            } else {
                try {
                    (0, import_taro42.chooseLocation)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, chooseLocationOption || {}), {}, {
                        success: resolve,
                        fail: reject
                    })).catch(reject);
                } catch (e) {
                    reject(e);
                }
            }
        });
    }, [
        env
    ]);
    var openLocationAsync = (0, import_react57.useCallback)(function(openLocationOption) {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro42.openLocation)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, openLocationOption || {}), {}, {
                    success: resolve,
                    fail: reject
                })).catch(reject);
            } catch (e) {
                reject({
                    errMsg: e
                });
            }
        });
    }, [
        env
    ]);
    var listenLocationChange = (0, import_react57.useCallback)(function(callback) {
        if (callback) {
            if (env === ENV_TYPE.WEB) {
                onLocationChange(callback, options || {}).then(function(id) {
                    listenId.current = id;
                });
            } else {
                import_taro42.default.onLocationChange(callback);
            }
        }
    }, [
        env
    ]);
    var unlistenLocationChange = (0, import_react57.useCallback)(function(callback) {
        if (callback) {
            if (env === ENV_TYPE.WEB && listenId.current) {
                offLocationChange(listenId.current);
            } else {
                (0, import_taro42.offLocationChange)(callback);
            }
        }
    }, [
        env,
        listenId
    ]);
    var startLocationUpdateAsync = (0, import_react57.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro42.startLocationUpdate)({
                    success: resolve,
                    fail: reject
                });
            } catch (e) {
                reject({
                    errMsg: e
                });
            }
        });
    }, []);
    var stopLocationUpdateAsync = (0, import_react57.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro42.stopLocationUpdate)({
                    success: resolve,
                    fail: reject
                });
            } catch (e) {
                reject({
                    errMsg: e
                });
            }
        });
    }, []);
    var startLocationUpdateBackgroundAsync = (0, import_react57.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro42.startLocationUpdateBackground)({
                    success: resolve,
                    fail: reject
                });
            } catch (e) {
                reject({
                    errMsg: e
                });
            }
        });
    }, []);
    return [
        location,
        {
            getLocation: getLocationAsync,
            chooseLocation: chooseLocationAsync,
            openLocation: openLocationAsync,
            onLocationChange: listenLocationChange,
            offLocationChange: unlistenLocationChange,
            startLocationUpdate: startLocationUpdateAsync,
            stopLocationUpdate: stopLocationUpdateAsync,
            startLocationUpdateBackground: startLocationUpdateBackgroundAsync
        }
    ];
}
var useLocation_default = useLocation;
// node_modules/taro-hooks/es/useScanCode/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro43 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react58 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useScanCode() {
    var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, onlyFromCamera = _ref.onlyFromCamera, scanType = _ref.scanType;
    var scan = (0, import_react58.useCallback)(function() {
        var option = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return new Promise(function(resolve, reject) {
            try {
                var personalOnlyFromCamera = option.onlyFromCamera, personalScanType = option.scanType;
                var payload = Object.fromEntries(Object.entries({
                    onlyFromCamera: personalOnlyFromCamera || onlyFromCamera,
                    scanType: personalScanType || scanType
                }).filter(function(v) {
                    return typeof v[1] !== "undefined";
                }));
                (0, import_taro43.scanCode)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, payload), {}, {
                    success: resolve,
                    fail: reject
                })).catch(reject);
            } catch (e) {
                reject({
                    errMsg: "scanCode:fail",
                    message: e
                });
            }
        });
    }, [
        scanType,
        onlyFromCamera
    ]);
    var cameraScan = (0, import_react58.useCallback)(function(cameraScanType) {
        return scan({
            onlyFromCamera: true,
            scanType: cameraScanType || scanType
        });
    }, [
        scanType,
        scan
    ]);
    return [
        scan,
        cameraScan
    ];
}
var useScanCode_default = useScanCode;
// node_modules/taro-hooks/es/useBluetooth/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro44 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react59 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var _excluded9 = [
    "errMsg"
];
function useBluetooth() {
    var env = useEnv_default();
    var _useState = (0, import_react59.useState)(), _useState2 = _slicedToArray(_useState, 2), adapter = _useState2[0], setAdapter = _useState2[1];
    var _useState3 = (0, import_react59.useState)(), _useState4 = _slicedToArray(_useState3, 2), devices = _useState4[0], setDevices = _useState4[1];
    var _useState5 = (0, import_react59.useState)(), _useState6 = _slicedToArray(_useState5, 2), connectedDevices = _useState6[0], setConnectedDevices = _useState6[1];
    (0, import_react59.useEffect)(function() {
        if (env && env === ENV_TYPE.WEAPP) {
            openAdapter();
        }
        return function() {
            if (env && env === ENV_TYPE.WEAPP) {
                closeAdapter();
                offAdapterStateChange();
                offDeviceFound();
            }
        };
    }, [
        env
    ]);
    var getAdapterState = (0, import_react59.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "getBluetoothAdapterState: fail"
                });
            } else {
                try {
                    (0, import_taro44.getBluetoothAdapterState)({
                        success: resolve,
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "getBluetoothAdapterState: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var onAdapterStateChange = (0, import_react59.useCallback)(function(callback) {
        if (env === ENV_TYPE.WEAPP) {
            try {
                (0, import_taro44.onBluetoothAdapterStateChange)(function(result) {
                    setAdapter(result);
                    callback && callback(result);
                });
                console.info({
                    errMsg: "onBluetoothAdapterStateChange: success"
                });
            } catch (e) {
                console.error({
                    errMsg: "onBluetoothAdapterStateChange: fail",
                    data: e
                });
            }
        }
    }, [
        env
    ]);
    var offAdapterStateChange = (0, import_react59.useCallback)(function(callback) {
        if (env === ENV_TYPE.WEAPP) {
            try {
                wx.offBluetoothAdapterStateChange(function() {
                    callback && callback();
                });
                console.info({
                    errMsg: "offBluetoothAdapterStateChange: success"
                });
            } catch (e) {
                console.error({
                    errMsg: "offBluetoothAdapterStateChange: fail",
                    data: e
                });
            }
        }
    }, [
        env
    ]);
    var getDevices = (0, import_react59.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "getBluetoothDevices: fail"
                });
            } else {
                try {
                    (0, import_taro44.getBluetoothDevices)({
                        success: function success(_ref) {
                            var devices2 = _ref.devices;
                            setDevices(devices2);
                            resolve(devices2);
                        },
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "getBluetoothDevices: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var getConnectedDevices = (0, import_react59.useCallback)(function(services) {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "getConnectedBluetoothDevices: fail"
                });
            } else {
                try {
                    (0, import_taro44.getConnectedBluetoothDevices)({
                        services,
                        success: function success(_ref2) {
                            var devices2 = _ref2.devices;
                            setConnectedDevices(devices2);
                            resolve(devices2);
                        },
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "getConnectedBluetoothDevices: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var onDeviceFound = (0, import_react59.useCallback)(function(callback) {
        if (env === ENV_TYPE.WEAPP) {
            try {
                (0, import_taro44.onBluetoothDeviceFound)(function(_ref3) {
                    var devices2 = _ref3.devices;
                    callback && callback(devices2);
                    setDevices(devices2);
                });
                console.info({
                    errMsg: "onBluetoothDeviceFound: success"
                });
            } catch (e) {
                console.error({
                    errMsg: "onBluetoothDeviceFound: fail",
                    data: e
                });
            }
        }
    }, [
        env
    ]);
    var offDeviceFound = (0, import_react59.useCallback)(function(callback) {
        if (env === ENV_TYPE.WEAPP) {
            try {
                wx.offBluetoothDeviceFound(function(_ref4) {
                    var devices2 = _ref4.devices;
                    callback && callback(devices2);
                });
                console.info({
                    errMsg: "offBluetoothDeviceFound: success"
                });
            } catch (e) {
                console.error({
                    errMsg: "offBluetoothDeviceFound: fail",
                    data: e
                });
            }
        }
    }, [
        env
    ]);
    var startDiscovery = (0, import_react59.useCallback)(function() {
        var option = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "startBluetoothDevicesDiscovery: fail"
                });
            } else {
                try {
                    (0, import_taro44.startBluetoothDevicesDiscovery)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, option), {}, {
                        success: resolve,
                        fail: reject
                    }));
                } catch (e) {
                    reject({
                        errMsg: "startBluetoothDevicesDiscovery: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var stopDiscovery = (0, import_react59.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "stopBluetoothDevicesDiscovery: fail"
                });
            } else {
                try {
                    (0, import_taro44.stopBluetoothDevicesDiscovery)({
                        success: resolve,
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "stopBluetoothDevicesDiscovery: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var makePair = (0, import_react59.useCallback)(function(deviceId, pin) {
        var timeout = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 2e4;
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "makeBluetoothPair: fail"
                });
            } else {
                try {
                    wx.makeBluetoothPair({
                        deviceId,
                        pin,
                        timeout,
                        success: resolve,
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "makeBluetoothPair: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var isBluetoothDevicePaired = (0, import_react59.useCallback)(function(deviceId) {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "isBluetoothDevicePaired: fail"
                });
            } else {
                try {
                    wx.isBluetoothDevicePaired({
                        deviceId,
                        success: resolve,
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "isBluetoothDevicePaired: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var openAdapter = (0, import_react59.useCallback)(function() {
        var mode = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "central";
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "openBluetoothAdapter: fail"
                });
            } else {
                try {
                    (0, import_taro44.openBluetoothAdapter)({
                        mode,
                        success: resolve,
                        fail: reject,
                        complete: function() {
                            var _complete = _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
                                var _ref5, errMsg, adapterState, devices2;
                                return _regeneratorRuntime().wrap(function _callee$(_context) {
                                    while(1){
                                        switch(_context.prev = _context.next){
                                            case 0:
                                                _context.next = 2;
                                                return getAdapterState();
                                            case 2:
                                                _ref5 = _context.sent;
                                                errMsg = _ref5.errMsg;
                                                adapterState = _objectWithoutProperties(_ref5, _excluded9);
                                                _context.next = 7;
                                                return getDevices();
                                            case 7:
                                                devices2 = _context.sent;
                                                setDevices(devices2);
                                                setAdapter((adapterState === null || adapterState === void 0 ? void 0 : adapterState.adapterState) || adapterState);
                                                onAdapterStateChange();
                                                onDeviceFound();
                                            case 12:
                                            case "end":
                                                return _context.stop();
                                        }
                                    }
                                }, _callee);
                            }));
                            function complete() {
                                return _complete.apply(this, arguments);
                            }
                            return complete;
                        }()
                    });
                } catch (e) {
                    reject({
                        errMsg: "openBluetoothAdapter: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var closeAdapter = (0, import_react59.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "closeBluetoothAdapter: fail"
                });
            } else {
                try {
                    (0, import_taro44.closeBluetoothAdapter)({
                        success: resolve,
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "closeBluetoothAdapter: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    return [
        {
            devices,
            connectedDevices,
            adapter
        },
        {
            openAdapter,
            closeAdapter,
            getAdapterState,
            getDevices,
            getConnectedDevices,
            onAdapterStateChange,
            offAdapterStateChange,
            onDeviceFound,
            offDeviceFound,
            startDiscovery,
            stopDiscovery,
            makePair,
            isBluetoothDevicePaired
        }
    ];
}
var useBluetooth_default = useBluetooth;
// node_modules/taro-hooks/es/useBLE/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro45 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react60 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useBLE(deviceId) {
    var env = useEnv_default();
    var _useState = (0, import_react60.useState)(), _useState2 = _slicedToArray(_useState, 2), ble = _useState2[0], setBLE = _useState2[1];
    (0, import_react60.useEffect)(function() {
        if (env && env === ENV_TYPE.WEAPP && deviceId) {
            initBLE(deviceId);
            return function() {
                closeBLE(deviceId);
            };
        }
    }, [
        env,
        deviceId
    ]);
    var initBLE = (0, import_react60.useCallback)(function() {
        var _ref = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(deviceId2) {
            var _yield$connectBLE, errCode, services, characteristics, RSSI;
            return _regeneratorRuntime().wrap(function _callee$(_context) {
                while(1){
                    switch(_context.prev = _context.next){
                        case 0:
                            _context.prev = 0;
                            _context.next = 3;
                            return connectBLE(deviceId2);
                        case 3:
                            _yield$connectBLE = _context.sent;
                            errCode = _yield$connectBLE.errCode;
                            if (!(errCode === 0)) {
                                _context.next = 16;
                                break;
                            }
                            _context.next = 8;
                            return getBLEServicesByDeviceId(deviceId2);
                        case 8:
                            services = _context.sent;
                            _context.next = 11;
                            return getBLECharacteristicsByDeviceId(deviceId2);
                        case 11:
                            characteristics = _context.sent;
                            _context.next = 14;
                            return getBLERSSIByDeviceId(deviceId2);
                        case 14:
                            RSSI = _context.sent;
                            setBLE({
                                deviceId: deviceId2,
                                services,
                                characteristics,
                                RSSI
                            });
                        case 16:
                            _context.next = 21;
                            break;
                        case 18:
                            _context.prev = 18;
                            _context.t0 = _context["catch"](0);
                            console.error("init BLE with deviceId: " + deviceId2 + " fail!", _context.t0);
                        case 21:
                        case "end":
                            return _context.stop();
                    }
                }
            }, _callee, null, [
                [
                    0,
                    18
                ]
            ]);
        }));
        return function(_x) {
            return _ref.apply(this, arguments);
        };
    }(), []);
    var connectBLE = (0, import_react60.useCallback)(function(deviceId2, timeout) {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "createBLEConnection: fail"
                });
            } else {
                try {
                    (0, import_taro45.createBLEConnection)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, timeout ? {
                        timeout
                    } : {}), {}, {
                        deviceId: deviceId2,
                        success: resolve,
                        fail: reject
                    }));
                } catch (e) {
                    reject({
                        errMsg: "createBLEConnection: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var closeBLE = (0, import_react60.useCallback)(function(deviceId2) {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "closeBLEConnection: fail"
                });
            } else {
                try {
                    (0, import_taro45.closeBLEConnection)({
                        deviceId: deviceId2,
                        success: resolve,
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "closeBLEConnection: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var listenBLEConnectionStateChange = (0, import_react60.useCallback)(function(callback) {
        if (env === ENV_TYPE.WEAPP && callback) {
            (0, import_taro45.onBLEConnectionStateChange)(callback);
        }
    }, [
        env
    ]);
    var removeBLEConnectionStateChange = (0, import_react60.useCallback)(function(callback) {
        if (env === ENV_TYPE.WEAPP && callback) {
            wx.offBLEConnectionStateChange(callback);
        }
    }, [
        env
    ]);
    var getBLEServicesByDeviceId = (0, import_react60.useCallback)(function(deviceId2) {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "getBLEDeviceServices: fail"
                });
            } else {
                try {
                    (0, import_taro45.getBLEDeviceServices)({
                        deviceId: deviceId2,
                        success: function success(_ref2) {
                            var services = _ref2.services;
                            return resolve(services);
                        },
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "getBLEDeviceServices: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var getBLECharacteristicsByDeviceId = (0, import_react60.useCallback)(function(deviceId2, serviceId) {
        return new Promise(function() {
            var _ref3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(resolve, reject) {
                var deviceServices;
                return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                    while(1){
                        switch(_context2.prev = _context2.next){
                            case 0:
                                if (!(env !== ENV_TYPE.WEAPP)) {
                                    _context2.next = 4;
                                    break;
                                }
                                reject({
                                    errMsg: "getBLEDeviceServices: fail"
                                });
                                _context2.next = 16;
                                break;
                            case 4:
                                _context2.prev = 4;
                                if (serviceId) {
                                    _context2.next = 10;
                                    break;
                                }
                                _context2.next = 8;
                                return getBLEServicesByDeviceId(deviceId2);
                            case 8:
                                deviceServices = _context2.sent;
                                if (deviceServices.length) {
                                    serviceId = deviceServices[0].uuid;
                                }
                            case 10:
                                if (serviceId) {
                                    (0, import_taro45.getBLEDeviceCharacteristics)({
                                        serviceId,
                                        deviceId: deviceId2,
                                        success: function success(_ref4) {
                                            var characteristics = _ref4.characteristics;
                                            return resolve(characteristics);
                                        },
                                        fail: reject
                                    });
                                } else {
                                    reject({
                                        errMsg: "getBLEDeviceServices: fail",
                                        data: "servicesId get fail"
                                    });
                                }
                                _context2.next = 16;
                                break;
                            case 13:
                                _context2.prev = 13;
                                _context2.t0 = _context2["catch"](4);
                                reject({
                                    errMsg: "getBLEDeviceServices: fail",
                                    data: _context2.t0
                                });
                            case 16:
                            case "end":
                                return _context2.stop();
                        }
                    }
                }, _callee2, null, [
                    [
                        4,
                        13
                    ]
                ]);
            }));
            return function(_x2, _x3) {
                return _ref3.apply(this, arguments);
            };
        }());
    }, [
        env
    ]);
    var getBLERSSIByDeviceId = (0, import_react60.useCallback)(function(deviceId2) {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP) {
                reject({
                    errMsg: "getBLEDeviceRSSI: fail"
                });
            } else {
                try {
                    wx.getBLEDeviceRSSI({
                        deviceId: deviceId2,
                        success: function success(_ref5) {
                            var RSSI = _ref5.RSSI;
                            return resolve(RSSI);
                        },
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "getBLEDeviceRSSI: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    var notifyBLECharacteristicValueChangeAsync = (0, import_react60.useCallback)(function(deviceId2, state, serviceId, characteristicId) {
        return new Promise(function() {
            var _ref6 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(resolve, reject) {
                var deviceServices, deviceCharacteristics;
                return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                    while(1){
                        switch(_context3.prev = _context3.next){
                            case 0:
                                if (!(env !== ENV_TYPE.WEAPP)) {
                                    _context3.next = 4;
                                    break;
                                }
                                reject({
                                    errMsg: "notifyBLECharacteristicValueChange: fail"
                                });
                                _context3.next = 21;
                                break;
                            case 4:
                                _context3.prev = 4;
                                if (serviceId) {
                                    _context3.next = 10;
                                    break;
                                }
                                _context3.next = 8;
                                return getBLEServicesByDeviceId(deviceId2);
                            case 8:
                                deviceServices = _context3.sent;
                                if (deviceServices.length) {
                                    serviceId = deviceServices[0].uuid;
                                }
                            case 10:
                                if (!(!characteristicId && serviceId)) {
                                    _context3.next = 15;
                                    break;
                                }
                                _context3.next = 13;
                                return getBLECharacteristicsByDeviceId(deviceId2, serviceId);
                            case 13:
                                deviceCharacteristics = _context3.sent;
                                if (deviceCharacteristics.length) {
                                    characteristicId = deviceCharacteristics[0].uuid;
                                }
                            case 15:
                                if (serviceId && characteristicId) {
                                    (0, import_taro45.notifyBLECharacteristicValueChange)({
                                        state,
                                        serviceId,
                                        characteristicId,
                                        deviceId: deviceId2,
                                        success: resolve,
                                        fail: reject
                                    });
                                } else {
                                    reject({
                                        errMsg: "notifyBLECharacteristicValueChange: fail",
                                        data: "servicesId or characteristicId get fail"
                                    });
                                }
                                _context3.next = 21;
                                break;
                            case 18:
                                _context3.prev = 18;
                                _context3.t0 = _context3["catch"](4);
                                reject({
                                    errMsg: "notifyBLECharacteristicValueChange: fail",
                                    data: _context3.t0
                                });
                            case 21:
                            case "end":
                                return _context3.stop();
                        }
                    }
                }, _callee3, null, [
                    [
                        4,
                        18
                    ]
                ]);
            }));
            return function(_x4, _x5) {
                return _ref6.apply(this, arguments);
            };
        }());
    }, [
        env
    ]);
    var addBLECharacteristicValueChange = (0, import_react60.useCallback)(function(callback) {
        if (env === ENV_TYPE.WEAPP && callback) {
            (0, import_taro45.onBLECharacteristicValueChange)(callback);
        }
    }, [
        env
    ]);
    var removeBLECharacteristicValueChange = (0, import_react60.useCallback)(function(callback) {
        if (env === ENV_TYPE.WEAPP && callback) {
            wx.offBLECharacteristicValueChange(callback);
        }
    }, [
        env
    ]);
    var readCharacteristicValue = (0, import_react60.useCallback)(function(deviceId2, serviceId, characteristicId) {
        return new Promise(function() {
            var _ref7 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(resolve, reject) {
                var deviceServices, deviceCharacteristics;
                return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                    while(1){
                        switch(_context4.prev = _context4.next){
                            case 0:
                                if (!(env !== ENV_TYPE.WEAPP)) {
                                    _context4.next = 4;
                                    break;
                                }
                                reject({
                                    errMsg: "readBLECharacteristicValue: fail"
                                });
                                _context4.next = 21;
                                break;
                            case 4:
                                _context4.prev = 4;
                                if (serviceId) {
                                    _context4.next = 10;
                                    break;
                                }
                                _context4.next = 8;
                                return getBLEServicesByDeviceId(deviceId2);
                            case 8:
                                deviceServices = _context4.sent;
                                if (deviceServices.length) {
                                    serviceId = deviceServices[0].uuid;
                                }
                            case 10:
                                if (!(!characteristicId && serviceId)) {
                                    _context4.next = 15;
                                    break;
                                }
                                _context4.next = 13;
                                return getBLECharacteristicsByDeviceId(deviceId2, serviceId);
                            case 13:
                                deviceCharacteristics = _context4.sent;
                                if (deviceCharacteristics.length) {
                                    characteristicId = deviceCharacteristics[0].uuid;
                                }
                            case 15:
                                if (serviceId && characteristicId) {
                                    (0, import_taro45.readBLECharacteristicValue)({
                                        serviceId,
                                        characteristicId,
                                        deviceId: deviceId2,
                                        success: resolve,
                                        fail: reject
                                    });
                                } else {
                                    reject({
                                        errMsg: "readBLECharacteristicValue: fail",
                                        data: "servicesId or characteristicId get fail"
                                    });
                                }
                                _context4.next = 21;
                                break;
                            case 18:
                                _context4.prev = 18;
                                _context4.t0 = _context4["catch"](4);
                                reject({
                                    errMsg: "readBLECharacteristicValue: fail",
                                    data: _context4.t0
                                });
                            case 21:
                            case "end":
                                return _context4.stop();
                        }
                    }
                }, _callee4, null, [
                    [
                        4,
                        18
                    ]
                ]);
            }));
            return function(_x6, _x7) {
                return _ref7.apply(this, arguments);
            };
        }());
    }, [
        env
    ]);
    var writeCharacteristicValue = (0, import_react60.useCallback)(function(value, deviceId2, serviceId, characteristicId) {
        return new Promise(function() {
            var _ref8 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(resolve, reject) {
                var deviceServices, deviceCharacteristics;
                return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                    while(1){
                        switch(_context5.prev = _context5.next){
                            case 0:
                                if (!(env !== ENV_TYPE.WEAPP)) {
                                    _context5.next = 4;
                                    break;
                                }
                                reject({
                                    errMsg: "writeBLECharacteristicValue: fail"
                                });
                                _context5.next = 21;
                                break;
                            case 4:
                                _context5.prev = 4;
                                if (serviceId) {
                                    _context5.next = 10;
                                    break;
                                }
                                _context5.next = 8;
                                return getBLEServicesByDeviceId(deviceId2);
                            case 8:
                                deviceServices = _context5.sent;
                                if (deviceServices.length) {
                                    serviceId = deviceServices[0].uuid;
                                }
                            case 10:
                                if (!(!characteristicId && serviceId)) {
                                    _context5.next = 15;
                                    break;
                                }
                                _context5.next = 13;
                                return getBLECharacteristicsByDeviceId(deviceId2, serviceId);
                            case 13:
                                deviceCharacteristics = _context5.sent;
                                if (deviceCharacteristics.length) {
                                    characteristicId = deviceCharacteristics[0].uuid;
                                }
                            case 15:
                                if (serviceId && characteristicId) {
                                    (0, import_taro45.writeBLECharacteristicValue)({
                                        value,
                                        serviceId,
                                        characteristicId,
                                        deviceId: deviceId2,
                                        success: resolve,
                                        fail: reject
                                    });
                                } else {
                                    reject({
                                        errMsg: "writeBLECharacteristicValue: fail",
                                        data: "servicesId or characteristicId get fail"
                                    });
                                }
                                _context5.next = 21;
                                break;
                            case 18:
                                _context5.prev = 18;
                                _context5.t0 = _context5["catch"](4);
                                reject({
                                    errMsg: "writeBLECharacteristicValue: fail",
                                    data: _context5.t0
                                });
                            case 21:
                            case "end":
                                return _context5.stop();
                        }
                    }
                }, _callee5, null, [
                    [
                        4,
                        18
                    ]
                ]);
            }));
            return function(_x8, _x9) {
                return _ref8.apply(this, arguments);
            };
        }());
    }, [
        env
    ]);
    var setBLEMTU = (0, import_react60.useCallback)(function(deviceId2, mtu) {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEAPP && mtu >= 22 && mtu <= 512) {
                reject({
                    errMsg: "setBLEMTU: fail"
                });
            } else {
                try {
                    wx.setBLEMTU({
                        deviceId: deviceId2,
                        mtu,
                        success: resolve,
                        fail: reject
                    });
                } catch (e) {
                    reject({
                        errMsg: "setBLEMTU: fail",
                        data: e
                    });
                }
            }
        });
    }, [
        env
    ]);
    return [
        ble,
        {
            connectBLE,
            closeBLE,
            setBLEMTU,
            getBLEServicesByDeviceId,
            getBLECharacteristicsByDeviceId,
            getBLERSSIByDeviceId,
            listenBLEConnectionStateChange,
            removeBLEConnectionStateChange,
            listenBLECharacteristicValueChange: addBLECharacteristicValueChange,
            removeBLECharacteristicValueChange,
            notifyBLECharacteristicValueChange: notifyBLECharacteristicValueChangeAsync,
            readCharacteristicValue,
            writeCharacteristicValue
        }
    ];
}
var useBLE_default = useBLE;
// node_modules/taro-hooks/es/useImage/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro46 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react61 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
// node_modules/taro-hooks/es/useImage/utils.js
var import_compressorjs_global = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)(require_compressor());
var downloadImage = function() {
    var _ref = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(filePath) {
        var responese, blob;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
            while(1){
                switch(_context.prev = _context.next){
                    case 0:
                        _context.next = 2;
                        return fetch(filePath);
                    case 2:
                        responese = _context.sent;
                        _context.next = 5;
                        return responese.blob();
                    case 5:
                        blob = _context.sent;
                        return _context.abrupt("return", blob);
                    case 7:
                    case "end":
                        return _context.stop();
                }
            }
        }, _callee);
    }));
    return function downloadImage2(_x) {
        return _ref.apply(this, arguments);
    };
}();
var generateBlobUrl = function generateBlobUrl2(blob) {
    var blobInstance = new Blob([
        blob
    ], {
        type: "application/octet-stream"
    });
    var href = window.URL.createObjectURL(blobInstance);
    return href;
};
var saveImageForH5 = function() {
    var _ref2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(filePath) {
        var result, blob, href, downloadElement;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
            while(1){
                switch(_context2.prev = _context2.next){
                    case 0:
                        if (!filePath) {
                            _context2.next = 20;
                            break;
                        }
                        result = true;
                        _context2.prev = 2;
                        _context2.next = 5;
                        return downloadImage(filePath);
                    case 5:
                        blob = _context2.sent;
                        href = generateBlobUrl(blob);
                        downloadElement = document.createElement("a");
                        downloadElement.href = href;
                        downloadElement.download = filePath.split("/").reverse()[0];
                        document.body.appendChild(downloadElement);
                        downloadElement.click();
                        document.body.removeChild(downloadElement);
                        window.URL.revokeObjectURL(href);
                        _context2.next = 19;
                        break;
                    case 16:
                        _context2.prev = 16;
                        _context2.t0 = _context2["catch"](2);
                        result = false;
                    case 19:
                        return _context2.abrupt("return", result);
                    case 20:
                        return _context2.abrupt("return", false);
                    case 21:
                    case "end":
                        return _context2.stop();
                }
            }
        }, _callee2, null, [
            [
                2,
                16
            ]
        ]);
    }));
    return function saveImageForH52(_x2) {
        return _ref2.apply(this, arguments);
    };
}();
var compressForH5 = function compressForH52(blob, quality) {
    return new Promise(function(resolve, reject) {
        new import_compressorjs_global.default(blob, {
            quality: (quality || 80) / 100,
            success: function success(res) {
                var tempFilePath = generateBlobUrl(res);
                resolve({
                    tempFilePath,
                    errMsg: "compressImage:ok"
                });
            },
            error: reject
        });
    });
};
// node_modules/taro-hooks/es/useImage/index.js
var _excluded10 = [
    "errMsg"
];
function useImage(options) {
    var _useState = (0, import_react61.useState)({}), _useState2 = _slicedToArray(_useState, 2), fileInfo = _useState2[0], setFileInfo = _useState2[1];
    var env = useEnv_default();
    var chooseImageAsync = (0, import_react61.useCallback)(function() {
        var option = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        var count = options.count, sizeType = options.sizeType, sourceType = options.sourceType;
        var finalOptions = Object.assign({}, Object.fromEntries([
            [
                "count",
                count
            ],
            [
                "sizeType",
                sizeType
            ],
            [
                "sourceType",
                sourceType
            ]
        ].filter(function(v) {
            return v[1];
        }) || []), option || {});
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro46.chooseImage)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, finalOptions), {}, {
                    success: function success(res) {
                        var errMsg = res.errMsg, fileInfo2 = _objectWithoutProperties(res, _excluded10);
                        setFileInfo(fileInfo2);
                        resolve(res);
                    },
                    fail: reject
                })).catch(reject);
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    var previewImageAsync = (0, import_react61.useCallback)(function(option) {
        return new Promise(function(resolve, reject) {
            try {
                (0, import_taro46.previewImage)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, option), {}, {
                    success: resolve,
                    fail: reject
                })).catch(reject);
            } catch (e) {
                reject(e);
            }
        });
    }, []);
    var saveImageToPhotosAlbumAsync = (0, import_react61.useCallback)(function(filePath) {
        return new Promise(function() {
            var _ref = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(resolve, reject) {
                var result;
                return _regeneratorRuntime().wrap(function _callee$(_context) {
                    while(1){
                        switch(_context.prev = _context.next){
                            case 0:
                                if (filePath) {
                                    _context.next = 4;
                                    break;
                                }
                                reject("you must provide filePath");
                                _context.next = 18;
                                break;
                            case 4:
                                _context.prev = 4;
                                if (!(env === ENV_TYPE.WEB)) {
                                    _context.next = 12;
                                    break;
                                }
                                _context.next = 8;
                                return saveImageForH5(filePath);
                            case 8:
                                result = _context.sent;
                                if (result) {
                                    resolve({
                                        errMsg: "save success"
                                    });
                                } else {
                                    reject("save fail");
                                }
                                _context.next = 13;
                                break;
                            case 12:
                                (0, import_taro46.saveImageToPhotosAlbum)({
                                    filePath,
                                    success: resolve,
                                    fail: reject
                                }).catch(reject);
                            case 13:
                                _context.next = 18;
                                break;
                            case 15:
                                _context.prev = 15;
                                _context.t0 = _context["catch"](4);
                                reject(_context.t0);
                            case 18:
                            case "end":
                                return _context.stop();
                        }
                    }
                }, _callee, null, [
                    [
                        4,
                        15
                    ]
                ]);
            }));
            return function(_x, _x2) {
                return _ref.apply(this, arguments);
            };
        }());
    }, [
        env
    ]);
    var getImageInfoAsync = (0, import_react61.useCallback)(function(src) {
        return new Promise(function(resolve, reject) {
            if (!src) {
                reject("please enter a valid path");
            } else {
                try {
                    (0, import_taro46.getImageInfo)({
                        src,
                        success: resolve,
                        fail: reject
                    }).catch(reject);
                } catch (e) {
                    reject(e);
                }
            }
        });
    }, []);
    var chooseMessageFileAsync = (0, import_react61.useCallback)(function(count, type, extension) {
        return new Promise(function(resolve, reject) {
            if (!count || env !== ENV_TYPE.WEAPP) {
                reject("you must provide count");
            } else {
                try {
                    var payload = Object.fromEntries([
                        [
                            "type",
                            type
                        ],
                        [
                            "extension",
                            extension
                        ]
                    ].filter(function(v) {
                        return v[1];
                    }) || []);
                    import_taro46.default.chooseMessageFile((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({
                        count
                    }, payload), {}, {
                        success: resolve,
                        fail: reject
                    }));
                } catch (e) {
                    reject(e);
                }
            }
        });
    }, [
        env
    ]);
    var compressImageAsync = (0, import_react61.useCallback)(function(src, quality) {
        return new Promise(function() {
            var _ref2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(resolve, reject) {
                var blob;
                return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                    while(1){
                        switch(_context2.prev = _context2.next){
                            case 0:
                                if (!src) {
                                    reject("you must provide src");
                                }
                                _context2.prev = 1;
                                if (!(env === ENV_TYPE.WEB)) {
                                    _context2.next = 9;
                                    break;
                                }
                                _context2.next = 5;
                                return downloadImage(src);
                            case 5:
                                blob = _context2.sent;
                                compressForH5(blob, quality).then(resolve, reject);
                                _context2.next = 10;
                                break;
                            case 9:
                                import_taro46.default.compressImage((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({
                                    src
                                }, quality ? {
                                    quality
                                } : {}), {}, {
                                    success: resolve,
                                    fail: reject
                                })).catch(reject);
                            case 10:
                                _context2.next = 15;
                                break;
                            case 12:
                                _context2.prev = 12;
                                _context2.t0 = _context2["catch"](1);
                                reject(_context2.t0);
                            case 15:
                            case "end":
                                return _context2.stop();
                        }
                    }
                }, _callee2, null, [
                    [
                        1,
                        12
                    ]
                ]);
            }));
            return function(_x3, _x4) {
                return _ref2.apply(this, arguments);
            };
        }());
    }, [
        env
    ]);
    return [
        fileInfo,
        {
            choose: chooseImageAsync,
            chooseMessageFile: chooseMessageFileAsync,
            preview: previewImageAsync,
            save: saveImageToPhotosAlbumAsync,
            getInfo: getImageInfoAsync,
            compress: compressImageAsync
        }
    ];
}
var useImage_default = useImage;
// node_modules/taro-hooks/es/useVideo/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro47 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react62 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useVideo(options) {
    var _useState = (0, import_react62.useState)(), _useState2 = _slicedToArray(_useState, 2), videoContext = _useState2[0], setVideoContext = _useState2[1];
    var env = useEnv_default();
    var chooseVideoAsync = (0, import_react62.useCallback)(function(option) {
        var payload = Object.assign({}, options || {}, option);
        return new Promise(function(resolve, reject) {
            if (env === ENV_TYPE.WEB) {
                reject({
                    errMsg: "not support for web"
                });
            } else {
                (0, import_taro47.chooseVideo)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, payload), {}, {
                    success: resolve,
                    fail: reject
                })).catch(reject);
            }
        });
    }, [
        env
    ]);
    var createVideoContextAsync = (0, import_react62.useCallback)(function(id, component) {
        if (env !== ENV_TYPE.WEB) {
            var _videoContext = (0, import_taro47.createVideoContext)(id, component);
            if (_videoContext) setVideoContext(_videoContext);
            return _videoContext;
        }
    }, [
        env
    ]);
    var saveVideoAsync = (0, import_react62.useCallback)(function(filePath) {
        return new Promise(function(resolve, reject) {
            if (!filePath) {
                reject("please input a filepath to save");
            } else {
                if (env === ENV_TYPE.WEB) {
                    saveImageForH5(filePath).then(function(saveResult) {
                        resolve({
                            errMsg: saveResult ? "\u4FDD\u5B58\u6210\u529F" : "\u4FDD\u5B58\u5931\u8D25"
                        });
                    }).catch(reject);
                } else {
                    (0, import_taro47.saveVideoToPhotosAlbum)({
                        filePath,
                        success: resolve,
                        fail: reject
                    }).catch(reject);
                }
            }
        });
    }, [
        env
    ]);
    return [
        videoContext,
        {
            choose: chooseVideoAsync,
            create: createVideoContextAsync,
            save: saveVideoAsync
        }
    ];
}
var useVideo_default = useVideo;
// node_modules/taro-hooks/es/useCamera/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro48 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react63 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useCamera() {
    var _useState = (0, import_react63.useState)(), _useState2 = _slicedToArray(_useState, 2), cameraContext = _useState2[0], setCameraContext = _useState2[1];
    var env = useEnv_default();
    (0, import_react63.useEffect)(function() {
        if (env) {
            create();
        }
    }, [
        env
    ]);
    var create = (0, import_react63.useCallback)(function() {
        if (env !== ENV_TYPE.WEB) {
            var context = (0, import_taro48.createCameraContext)();
            setCameraContext(context);
            return context;
        }
    }, [
        env
    ]);
    var startRecord = (0, import_react63.useCallback)(function(callback) {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEB && cameraContext) {
                try {
                    cameraContext.startRecord((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({
                        success: resolve,
                        fail: reject
                    }, callback ? {
                        timeoutCallback: callback
                    } : {}));
                } catch (e) {
                    reject(e);
                }
            }
        });
    }, [
        env,
        cameraContext
    ]);
    var stopRecord = (0, import_react63.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEB && cameraContext) {
                try {
                    cameraContext.stopRecord({
                        success: resolve,
                        fail: reject
                    });
                } catch (e) {
                    reject(e);
                }
            }
        });
    }, [
        env,
        cameraContext
    ]);
    var takePhoto = (0, import_react63.useCallback)(function() {
        var option = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEB && cameraContext) {
                try {
                    cameraContext.takePhoto((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, option), {}, {
                        success: resolve,
                        fail: reject
                    }));
                } catch (e) {
                    reject(e);
                }
            }
        });
    }, [
        env,
        cameraContext
    ]);
    var onCameraFrame = (0, import_react63.useCallback)(function(callback) {
        if (env !== ENV_TYPE.WEB && cameraContext && callback) {
            try {
                var listener = cameraContext.onCameraFrame(callback);
                listener.start();
                return listener;
            } catch (e) {
                console.log(e);
            }
        }
    }, [
        env,
        cameraContext
    ]);
    return [
        cameraContext,
        {
            create,
            startRecord,
            stopRecord,
            takePhoto,
            onCameraFrame
        }
    ];
}
var useCamera_default = useCamera;
// node_modules/taro-hooks/es/useRecord/index.js
var import_taro49 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react64 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var noop = function noop2() {};
function useRecord() {
    var _useState = (0, import_react64.useState)(), _useState2 = _slicedToArray(_useState, 2), recorderManager = _useState2[0], setRecorderManager = _useState2[1];
    var _useState3 = (0, import_react64.useState)(), _useState4 = _slicedToArray(_useState3, 2), recorderManagerStatus = _useState4[0], changeRecorderManagerStatus = _useState4[1];
    var env = useEnv_default();
    (0, import_react64.useEffect)(function() {
        if (env) {
            create();
        }
    }, [
        env
    ]);
    (0, import_react64.useEffect)(function() {
        if (recorderManager) {
            onError(noop);
            onFrameRecorded(noop);
            onInterruptionBegin(noop);
            onInterruptionEnd(noop);
            onPause(noop);
            onResume(noop);
            onStart(noop);
            onStop(noop);
        }
    }, [
        recorderManager
    ]);
    var create = (0, import_react64.useCallback)(function() {
        if (env !== ENV_TYPE.WEB) {
            var context = (0, import_taro49.getRecorderManager)();
            setRecorderManager(context);
        }
    }, [
        env
    ]);
    var onError = (0, import_react64.useCallback)(function(callback) {
        if (recorderManager) {
            recorderManager.onError(function(res) {
                changeRecorderManagerStatus("error");
                callback && callback(res);
            });
        }
    }, [
        recorderManager
    ]);
    var onFrameRecorded = (0, import_react64.useCallback)(function(callback) {
        if (recorderManager) {
            recorderManager.onFrameRecorded(function(res) {
                changeRecorderManagerStatus("frameRecorder");
                callback && callback(res);
            });
        }
    }, [
        recorderManager
    ]);
    var onInterruptionBegin = (0, import_react64.useCallback)(function(callback) {
        if (recorderManager) {
            recorderManager.onInterruptionBegin(function(res) {
                changeRecorderManagerStatus("interruptionBegin");
                callback && callback(res);
            });
        }
    }, [
        recorderManager
    ]);
    var onInterruptionEnd = (0, import_react64.useCallback)(function(callback) {
        if (recorderManager) {
            recorderManager.onInterruptionEnd(function(res) {
                changeRecorderManagerStatus("interruptionEnd");
                callback && callback(res);
            });
        }
    }, [
        recorderManager
    ]);
    var onPause = (0, import_react64.useCallback)(function(callback) {
        if (recorderManager) {
            recorderManager.onPause(function(res) {
                changeRecorderManagerStatus("pause");
                callback && callback(res);
            });
        }
    }, [
        recorderManager
    ]);
    var onResume = (0, import_react64.useCallback)(function(callback) {
        if (recorderManager) {
            recorderManager.onResume(function(res) {
                changeRecorderManagerStatus("resume");
                callback && callback(res);
            });
        }
    }, [
        recorderManager
    ]);
    var onStart = (0, import_react64.useCallback)(function(callback) {
        if (recorderManager) {
            recorderManager.onStart(function(res) {
                changeRecorderManagerStatus("start");
                callback && callback(res);
            });
        }
    }, [
        recorderManager
    ]);
    var onStop = (0, import_react64.useCallback)(function(callback) {
        if (recorderManager) {
            recorderManager.onStop(function(res) {
                changeRecorderManagerStatus("stop");
                callback && callback(res);
            });
        }
    }, [
        recorderManager
    ]);
    var startRecord = (0, import_react64.useCallback)(function() {
        var option = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEB && recorderManager) {
                try {
                    recorderManager.start(option);
                } catch (e) {
                    reject(e);
                }
                resolve({
                    errMsg: "startRecord: ok"
                });
            }
        });
    }, [
        env,
        recorderManager
    ]);
    var stopRecord = (0, import_react64.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEB && recorderManager) {
                try {
                    recorderManager.stop();
                } catch (e) {
                    reject({
                        errMsg: e
                    });
                }
                resolve({
                    errMsg: "stopRecord: ok"
                });
            }
        });
    }, [
        env,
        recorderManager
    ]);
    var pauseRecord = (0, import_react64.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEB && recorderManager) {
                try {
                    recorderManager.pause();
                } catch (e) {
                    reject({
                        errMsg: e
                    });
                }
                resolve({
                    errMsg: "pauseRecord: ok"
                });
            }
        });
    }, [
        env,
        recorderManager
    ]);
    var resumeRecord = (0, import_react64.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env !== ENV_TYPE.WEB && recorderManager) {
                try {
                    recorderManager.resume();
                } catch (e) {
                    reject({
                        errMsg: e
                    });
                }
                resolve({
                    errMsg: "resumeRecord: ok"
                });
            }
        });
    }, [
        env,
        recorderManager
    ]);
    return [
        recorderManager,
        recorderManagerStatus,
        {
            onError,
            onFrameRecorded,
            onInterruptionBegin,
            onInterruptionEnd,
            onPause,
            onResume,
            onStart,
            onStop,
            startRecord,
            stopRecord,
            pauseRecord,
            resumeRecord
        }
    ];
}
var useRecord_default = useRecord;
// node_modules/taro-hooks/es/useAudio/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro50 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react65 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
var SPECIALOPTION = [
    "mixWithOther",
    "obeyMuteSwitch"
];
function useAudio(initOption) {
    var env = useEnv_default();
    var _useState = (0, import_react65.useState)(), _useState2 = _slicedToArray(_useState, 2), audioSource = _useState2[0], setAudioSource = _useState2[1];
    var _useState3 = (0, import_react65.useState)(), _useState4 = _slicedToArray(_useState3, 2), audioContext = _useState4[0], setAudioContext = _useState4[1];
    (0, import_react65.useEffect)(function() {
        createAudioContext();
        getAudioSourceAsync();
    }, []);
    var getAudioSourceAsync = (0, import_react65.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env === ENV_TYPE.WEAPP) {
                try {
                    (0, import_taro50.getAvailableAudioSources)({
                        success: function success(res) {
                            resolve(res);
                            setAudioSource(res.audioSources);
                        },
                        fail: reject
                    }).catch(reject);
                } catch (e) {
                    reject(e);
                }
            }
        });
    }, [
        audioContext,
        env
    ]);
    var createAudioContext = (0, import_react65.useCallback)(function() {
        var createOption = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        if (audioContext) {
            return audioContext;
        }
        var payload = typeof createOption.useWebAudioImplement === "undefined" ? {} : {
            useWebAudioImplement: createOption.useWebAudioImplement
        };
        var context = (0, import_taro50.createInnerAudioContext)(payload);
        setAudioOption((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, initOption || {}), createOption), context);
        setAudioContext(context);
        return context;
    }, [
        audioContext
    ]);
    var setAudioOption = (0, import_react65.useCallback)(function() {
        var option = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        var instance = arguments.length > 1 ? arguments[1] : void 0;
        return new Promise(function(resolve, reject) {
            if (!option && (!audioContext || !instance)) {
                reject({
                    errMsg: "please provide option"
                });
            } else {
                var context = instance || audioContext;
                try {
                    var specialOptions = {};
                    Object.entries(option).forEach(function(_ref) {
                        var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], value = _ref2[1];
                        if (SPECIALOPTION.includes(key)) {
                            specialOptions[key] = value;
                        }
                        if (!SPECIALOPTION.includes(key) || env === ENV_TYPE.WEAPP) {
                            context[key] = value;
                        }
                    });
                    (0, import_taro50.setInnerAudioOption)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, specialOptions), {}, {
                        success: resolve,
                        fail: reject
                    })).catch(reject);
                } catch (e) {
                    reject(e);
                }
            }
        });
    }, [
        audioContext,
        env
    ]);
    var play = (0, import_react65.useCallback)(function(src) {
        if (audioContext) {
            if (src) {
                setAudioOption({
                    src
                });
            }
            audioContext.play();
        }
    }, [
        audioContext
    ]);
    var stop = (0, import_react65.useCallback)(function() {
        if (audioContext) {
            audioContext.stop();
        }
    }, [
        audioContext
    ]);
    var pause = (0, import_react65.useCallback)(function() {
        if (audioContext) {
            audioContext.pause();
        }
    }, [
        audioContext
    ]);
    var seek = (0, import_react65.useCallback)(function(position) {
        if (audioContext && typeof position === "number") {
            audioContext.seek(position);
        }
    }, [
        audioContext
    ]);
    var destory = (0, import_react65.useCallback)(function() {
        if (audioContext && env !== ENV_TYPE.WEB) {
            audioContext.destroy();
            setAudioContext(void 0);
        }
    }, [
        audioContext,
        env
    ]);
    var onCanPlay = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.onCanplay(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var offCanPlay = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.offCanplay(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var onPlay = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.onPlay(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var offPlay = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.offPlay(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var onStop = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.onStop(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var offStop = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.offStop(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var onPause = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.onPause(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var offPause = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.offPause(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var onEnded = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.onEnded(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var offEnded = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.offEnded(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var onTimeUpdate = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.onTimeUpdate(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var offTimeUpdate = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.offTimeUpdate(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var onError = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.onError(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var offError = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.offError(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var onWaiting = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.onWaiting(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var offWaiting = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.offWaiting(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var onSeeking = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.onSeeking(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var offSeeking = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.offSeeking(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var onSeeked = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.onSeeked(callback);
        }
    }, [
        audioContext,
        env
    ]);
    var offSeeked = (0, import_react65.useCallback)(function(callback) {
        if (audioContext && env !== ENV_TYPE.WEB && callback) {
            audioContext.offSeeked(callback);
        }
    }, [
        audioContext,
        env
    ]);
    return [
        audioContext,
        audioSource,
        {
            create: createAudioContext,
            setOption: setAudioOption,
            getAudioSource: getAudioSourceAsync,
            play,
            pause,
            stop,
            seek,
            destory,
            onCanPlay,
            onEnded,
            onError,
            onPause,
            onPlay,
            onSeeked,
            onSeeking,
            onStop,
            onTimeUpdate,
            onWaiting,
            offCanPlay,
            offEnded,
            offError,
            offPause,
            offPlay,
            offSeeked,
            offSeeking,
            offStop,
            offTimeUpdate,
            offWaiting
        }
    ];
}
var useAudio_default = useAudio;
// node_modules/taro-hooks/es/useMap/index.js
(0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.init_objectSpread2)();
var import_taro51 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
var import_react66 = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_4__.__toESM)((0,_chunk_LNJCN3VW_js__WEBPACK_IMPORTED_MODULE_1__.require_react_production_min)());
function useMap(mapId, scope) {
    var env = useEnv_default();
    var _useState = (0, import_react66.useState)(), _useState2 = _slicedToArray(_useState, 2), map = _useState2[0], setMap = _useState2[1];
    (0, import_react66.useEffect)(function() {
        if (env && mapId && env === ENV_TYPE.WEAPP) {
            var context = create(mapId, scope);
            setMap(context);
        }
    }, [
        env
    ]);
    var create = (0, import_react66.useCallback)(function(mapId2, scope2) {
        if (env && mapId2 && env === ENV_TYPE.WEAPP) {
            return (0, import_taro51.createMapContext)(mapId2, scope2);
        }
    }, [
        env
    ]);
    var getCenterLocationAsync = (0, import_react66.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env && env === ENV_TYPE.WEAPP && map) {
                map.getCenterLocation({
                    success: resolve,
                    fail: reject
                });
            } else {
                reject({
                    errMsg: "getCenterLocation: failed"
                });
            }
        });
    }, [
        env,
        map
    ]);
    var getRegionAsync = (0, import_react66.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env && env === ENV_TYPE.WEAPP && map) {
                map.getRegion({
                    success: resolve,
                    fail: reject
                });
            } else {
                reject({
                    errMsg: "getRegion: failed"
                });
            }
        });
    }, [
        env,
        map
    ]);
    var getScaleAsync = (0, import_react66.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env && env === ENV_TYPE.WEAPP && map) {
                map.getScale({
                    success: resolve,
                    fail: reject
                });
            } else {
                reject({
                    errMsg: "getScale: failed"
                });
            }
        });
    }, [
        env,
        map
    ]);
    var getRotateAsync = (0, import_react66.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env && env === ENV_TYPE.WEAPP && map) {
                map.getRotate({
                    success: resolve,
                    fail: reject
                });
            } else {
                reject({
                    errMsg: "getRotate: failed"
                });
            }
        });
    }, [
        env,
        map
    ]);
    var getSkewAsync = (0, import_react66.useCallback)(function() {
        return new Promise(function(resolve, reject) {
            if (env && env === ENV_TYPE.WEAPP && map) {
                map.getSkew({
                    success: resolve,
                    fail: reject
                });
            } else {
                reject({
                    errMsg: "getSkew: failed"
                });
            }
        });
    }, [
        env,
        map
    ]);
    var includePointsAsync = (0, import_react66.useCallback)(function() {
        var points = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        return new Promise(function(resolve, reject) {
            if (env && env === ENV_TYPE.WEAPP && map) {
                map.includePoints({
                    points,
                    success: resolve,
                    fail: reject
                });
            } else {
                reject({
                    errMsg: "includePoints: failed"
                });
            }
        });
    }, [
        env,
        map
    ]);
    var moveToLocationAsync = (0, import_react66.useCallback)(function() {
        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return new Promise(function(resolve, reject) {
            if (env && env === ENV_TYPE.WEAPP && map) {
                map.moveToLocation((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, options), {}, {
                    success: resolve,
                    fail: reject
                }));
            } else {
                reject({
                    errMsg: "moveToLocation: failed"
                });
            }
        });
    }, [
        env,
        map
    ]);
    var translateMarkerAsync = (0, import_react66.useCallback)(function(options) {
        return new Promise(function(resolve, reject) {
            if (env && env === ENV_TYPE.WEAPP && map) {
                map.translateMarker((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)((0,_chunk_2AFYNDNO_js__WEBPACK_IMPORTED_MODULE_0__._objectSpread2)({}, options || {}), {}, {
                    success: resolve,
                    fail: reject
                }));
            } else {
                reject({
                    errMsg: "translateMarker: failed"
                });
            }
        });
    }, [
        env,
        map
    ]);
    return [
        map,
        {
            create,
            getCenterLocation: getCenterLocationAsync,
            getRegion: getRegionAsync,
            getScale: getScaleAsync,
            getRotate: getRotateAsync,
            getSkew: getSkewAsync,
            includePoints: includePointsAsync,
            moveToLocation: moveToLocationAsync,
            translateMarker: translateMarkerAsync
        }
    ];
}
var useMap_default = useMap;
 /*!
 * Compressor.js v1.1.1
 * https://fengyuanchen.github.io/compressorjs
 *
 * Copyright 2018-present Chen Fengyuan
 * Released under the MIT license
 *
 * Date: 2022-03-22T15:13:43.699Z
 */  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ 


/***/ })

}]);